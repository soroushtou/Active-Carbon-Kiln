
AVRASM ver. 2.1.30  K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm Sat Aug 29 22:39:46 2020

K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1087): warning: Register r4 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1088): warning: Register r5 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1089): warning: Register r6 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1090): warning: Register r7 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1091): warning: Register r9 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1092): warning: Register r8 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1093): warning: Register r11 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1094): warning: Register r10 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1095): warning: Register r13 already defined by the .DEF directive
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1096): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: No
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _timer2_counter=R4
                 	.DEF _timer2_counter_msb=R5
                 	.DEF _pw=R6
                 	.DEF _pw_msb=R7
                 	.DEF _rx_wr_index=R9
                 	.DEF _rx_rd_index=R8
                 	.DEF _rx_counter=R11
                 	.DEF __lcd_x=R10
                 	.DEF __lcd_y=R13
                 	.DEF __lcd_maxx=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005f 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 008e 	JMP  _timer2_ovf_isr
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 00a4 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00002a 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002b 004b
00002c 0000      	.DB  0x4B,0x0,0x0,0x0
00002d 0000      	.DB  0x0,0x0
                 
                 _0x14:
00002e 0000
00002f 0000
000030 0000
000031 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000032 0000
000033 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x0:
000034 6f44
000035 7463
000036 726f
000037 6e20      	.DB  0x44,0x6F,0x63,0x74,0x6F,0x72,0x20,0x6E
000038 6461
000039 7265
00003a 0069
00003b 7325      	.DB  0x61,0x64,0x65,0x72,0x69,0x0,0x25,0x73
00003c 2000
00003d 3425
00003e 312e
00003f 6766      	.DB  0x0,0x20,0x25,0x34,0x2E,0x31,0x66,0x67
000040 2520
000041 2e34
000042 6631
000043 2067      	.DB  0x20,0x25,0x34,0x2E,0x31,0x66,0x67,0x20
000044 3425
000045 312e
000046 6766
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1144): warning: .cseg .db misalignment - padding zero byte
000047 0000      	.DB  0x25,0x34,0x2E,0x31,0x66,0x67,0x0
                 _0x2000003:
000048 c080      	.DB  0x80,0xC0
                 _0x2020000:
000049 4e2d
00004a 4e41
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1148): warning: .cseg .db misalignment - padding zero byte
00004b 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2040060:
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1150): warning: .cseg .db misalignment - padding zero byte
00004c 0001      	.DB  0x1
                 _0x2040000:
00004d 4e2d
00004e 4e41
00004f 4900
000050 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
K:\Dynamic scaling 2\Loadcell_Source1 - Copy (2) - Copy\List\Project.asm(1153): warning: .cseg .db misalignment - padding zero byte
000051 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000052 0001      	.DW  0x01
000053 0002      	.DW  0x02
000054 0054      	.DW  __REG_BIT_VARS*2
                 
000055 0006      	.DW  0x06
000056 0006      	.DW  0x06
000057 0056      	.DW  __REG_VARS*2
                 
000058 0002      	.DW  0x02
000059 0440      	.DW  __base_y_G100
00005a 0090      	.DW  _0x2000003*2
                 
00005b 0001      	.DW  0x01
00005c 0444      	.DW  __seed_G102
00005d 0098      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00005e 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005f 94f8      	CLI
000060 27ee      	CLR  R30
000061 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000062 e0f1      	LDI  R31,1
000063 bff5      	OUT  MCUCR,R31
000064 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000065 e1f8      	LDI  R31,0x18
000066 bdf1      	OUT  WDTCR,R31
000067 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000068 e08d      	LDI  R24,(14-2)+1
000069 e0a2      	LDI  R26,2
00006a 27bb      	CLR  R27
                 __CLEAR_REG:
00006b 93ed      	ST   X+,R30
00006c 958a      	DEC  R24
00006d f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006e e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006f e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000070 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000071 93ed      	ST   X+,R30
000072 9701      	SBIW R24,1
000073 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000074 eae4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000075 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000076 9185      	LPM  R24,Z+
000077 9195      	LPM  R25,Z+
000078 9700      	SBIW R24,0
000079 f061      	BREQ __GLOBAL_INI_END
00007a 91a5      	LPM  R26,Z+
00007b 91b5      	LPM  R27,Z+
00007c 9005      	LPM  R0,Z+
00007d 9015      	LPM  R1,Z+
00007e 01bf      	MOVW R22,R30
00007f 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000080 9005      	LPM  R0,Z+
000081 920d      	ST   X+,R0
000082 9701      	SBIW R24,1
000083 f7e1      	BRNE __GLOBAL_INI_LOOP
000084 01fb      	MOVW R30,R22
000085 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000086 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000087 bfed      	OUT  SPL,R30
000088 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000089 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00008a e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
00008b e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008c 940c 00c7 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*********************************
                 ;
                 ;   5KG   LOADCELL Driver  with HX711
                 ;
                 ;**********************************/
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;
                 ;// Declare your global variables here
                 ;#define HX711_DOUT    PIND.3
                 ;#define HX711_SCK     PORTD.2
                 ;#define HX_COMPLEMENT 0x800000
                 ;#define HX_REF        0.360598//360.91549
                 ;//0.360598
                 ;#define HX711_DOUT1    PIND.5
                 ;#define HX711_SCK1     PORTD.4
                 ;#define HX_REF1        0.360598//9.33
                 ;
                 ;#define HX711_DOUT2    PINB.1
                 ;#define HX711_SCK2     PORTB.0
                 ;#define HX_REF2        0.360598//9.33
                 ;
                 ;void sort_array(float a[], int size);
                 ;void HX711_Read(void);
                 ;void get_scale(void);
                 ;void get_offset(void);
                 ;//unsigned long HX711_Read1(void);
                 ;//void get_scale1(void);
                 ;//void get_offset1(void);
                 ;//unsigned long HX711_Read2(void);
                 ;//void get_scale2(void);
                 ;//void get_offset2(void);
                 ;//void motor(void);
                 ;//void delay_msec(long int ha);
                 ;unsigned long Weight_Shiwu = 0,Weight_Maopi =0,Weight_Shiwu1 = 0,Weight_Maopi1 =0,Weight_Shiwu2 = 0,Weight_Maopi2 =0;
                 ;unsigned long HX711_Buffer = 0,HX711_Buffer1 = 0,HX711_Buffer2 = 0,HX711_Buffer_sum = 0,HX711_Buffer1_sum = 0,HX711_Buff ...
                 ;float         scale = 0,scale1 = 0,scale2 = 0 ,scale_array[25],scale1_array[25],scale2_array[25];
                 ;unsigned int timer2_counter,pw=75;//i,i2,i3,sw=0,i2;
                 ;unsigned char  buffer1[12];
                 ;unsigned char  buffer2[12];
                 ;unsigned char  buffer3[12];
                 ;char  buffer[30];
                 ;char  str1[10];
                 ;char  str2[10];
                 ;char  str3[10];
                 ;
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0000 0034 {
                 
                 	.CSEG
                 _timer2_ovf_isr:
                 ; .FSTART _timer2_ovf_isr
00008e 93ea      	ST   -Y,R30
00008f 93fa      	ST   -Y,R31
000090 b7ef      	IN   R30,SREG
000091 93ea      	ST   -Y,R30
                 ; 0000 0035 // Reinitialize Timer2 value
                 ; 0000 0036 TCNT2=0xB2;
000092 ebe2      	LDI  R30,LOW(178)
000093 bde4      	OUT  0x24,R30
                 ; 0000 0037 // Place your code here
                 ; 0000 0038 if(timer2_counter == pw ) PORTC.1 = 0;
                +
000094 1464     +CP R6 , R4
000095 0475     +CPC R7 , R5
                 	__CPWRR 6,7,4,5
000096 f409      	BRNE _0x3
000097 98a9      	CBI  0x15,1
                 ; 0000 0039 timer2_counter += 1;
                 _0x3:
000098 01f2      	MOVW R30,R4
000099 9631      	ADIW R30,1
00009a 012f      	MOVW R4,R30
                 ; 0000 003A if(timer2_counter >= 100){ timer2_counter = 0; PORTC.1 = 1;}
00009b e6e4      	LDI  R30,LOW(100)
00009c e0f0      	LDI  R31,HIGH(100)
00009d 164e      	CP   R4,R30
00009e 065f      	CPC  R5,R31
00009f f018      	BRLO _0x6
0000a0 2444      	CLR  R4
0000a1 2455      	CLR  R5
0000a2 9aa9      	SBI  0x15,1
                 ; 0000 003B }
                 _0x6:
0000a3 c01e      	RJMP _0x5B
                 ; .FEND
                 ;
                 ;void send( unsigned char Data1[12], unsigned char Data2[12], unsigned char Data3[12]);
                 ;unsigned char buffer1[12];
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 24
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index=0,rx_rd_index=0;
                 ;#else
                 ;unsigned int rx_wr_index=0,rx_rd_index=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE < 256
                 ;unsigned char rx_counter=0;
                 ;#else
                 ;unsigned int rx_counter=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 005A {
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
0000a4 93ea      	ST   -Y,R30
0000a5 93fa      	ST   -Y,R31
0000a6 b7ef      	IN   R30,SREG
0000a7 93ea      	ST   -Y,R30
                 ; 0000 005B char status,data;
                 ; 0000 005C status=UCSRA;
0000a8 931a      	ST   -Y,R17
0000a9 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
0000aa b11b      	IN   R17,11
                 ; 0000 005D data=UDR;
0000ab b10c      	IN   R16,12
                 ; 0000 005E if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
0000ac 2fe1      	MOV  R30,R17
0000ad 71ec      	ANDI R30,LOW(0x1C)
0000ae f489      	BRNE _0x9
                 ; 0000 005F    {
                 ; 0000 0060    rx_buffer[rx_wr_index++]=data;
0000af 2de9      	MOV  R30,R9
0000b0 9493      	INC  R9
0000b1 e0f0      	LDI  R31,0
0000b2 5de8      	SUBI R30,LOW(-_rx_buffer)
0000b3 4ffb      	SBCI R31,HIGH(-_rx_buffer)
0000b4 8300      	ST   Z,R16
                 ; 0000 0061 #if RX_BUFFER_SIZE == 256
                 ; 0000 0062    // special case for receiver buffer size=256
                 ; 0000 0063    if (++rx_counter == 0) rx_buffer_overflow=1;
                 ; 0000 0064 #else
                 ; 0000 0065    if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
0000b5 e1e8      	LDI  R30,LOW(24)
0000b6 15e9      	CP   R30,R9
0000b7 f409      	BRNE _0xA
0000b8 2499      	CLR  R9
                 ; 0000 0066    if (++rx_counter == RX_BUFFER_SIZE)
                 _0xA:
0000b9 94b3      	INC  R11
0000ba e1e8      	LDI  R30,LOW(24)
0000bb 15eb      	CP   R30,R11
0000bc f419      	BRNE _0xB
                 ; 0000 0067       {
                 ; 0000 0068       rx_counter=0;
0000bd 24bb      	CLR  R11
                 ; 0000 0069       rx_buffer_overflow=1;
0000be 9468      	SET
0000bf f820      	BLD  R2,0
                 ; 0000 006A       }
                 ; 0000 006B #endif
                 ; 0000 006C    }
                 _0xB:
                 ; 0000 006D }
                 _0x9:
0000c0 9109      	LD   R16,Y+
0000c1 9119      	LD   R17,Y+
                 _0x5B:
0000c2 91e9      	LD   R30,Y+
0000c3 bfef      	OUT  SREG,R30
0000c4 91f9      	LD   R31,Y+
0000c5 91e9      	LD   R30,Y+
0000c6 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 0074 {
                 ; 0000 0075 char data;
                 ; 0000 0076 while (rx_counter==0);
                 ;	data -> R17
                 ; 0000 0077 data=rx_buffer[rx_rd_index++];
                 ; 0000 0078 #if RX_BUFFER_SIZE != 256
                 ; 0000 0079 if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
                 ; 0000 007A #endif
                 ; 0000 007B #asm("cli")
                 ; 0000 007C --rx_counter;
                 ; 0000 007D #asm("sei")
                 ; 0000 007E return data;
                 ; 0000 007F }
                 ;#pragma used-
                 ;#endif
                 ;void main(void)
                 ; 0000 0083 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0084 
                 ; 0000 0085 PORTA=0x00;
0000c7 e0e0      	LDI  R30,LOW(0)
0000c8 bbeb      	OUT  0x1B,R30
                 ; 0000 0086 DDRA=0x00;
0000c9 bbea      	OUT  0x1A,R30
                 ; 0000 0087 
                 ; 0000 0088 //DDRD = (1<<DDD0);
                 ; 0000 0089 ///////////////////////
                 ; 0000 008A // Port B initialization
                 ; 0000 008B // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 008C DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
0000ca e0e1      	LDI  R30,LOW(1)
0000cb bbe7      	OUT  0x17,R30
                 ; 0000 008D // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=0
                 ; 0000 008E PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
0000cc e0e0      	LDI  R30,LOW(0)
0000cd bbe8      	OUT  0x18,R30
                 ; 0000 008F 
                 ; 0000 0090 // Port C initialization
                 ; 0000 0091 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
                 ; 0000 0092 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (1<<DDC0);
0000ce e0e3      	LDI  R30,LOW(3)
0000cf bbe4      	OUT  0x14,R30
                 ; 0000 0093 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=0
                 ; 0000 0094 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
0000d0 e0e0      	LDI  R30,LOW(0)
0000d1 bbe5      	OUT  0x15,R30
                 ; 0000 0095 
                 ; 0000 0096 // Port D initialization
                 ; 0000 0097 // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=In
                 ; 0000 0098 DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (0<<DDD3) | (1<<DDD2) | (1<<DDD1) | (0<<DDD0);
0000d2 e1e6      	LDI  R30,LOW(22)
0000d3 bbe1      	OUT  0x11,R30
                 ; 0000 0099 // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=T
                 ; 0000 009A PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
0000d4 e0e0      	LDI  R30,LOW(0)
0000d5 bbe2      	OUT  0x12,R30
                 ; 0000 009B ///////////////////////////
                 ; 0000 009C // USART initialization
                 ; 0000 009D // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 009E // USART Receiver: On
                 ; 0000 009F // USART Transmitter: On
                 ; 0000 00A0 // USART Mode: Asynchronous
                 ; 0000 00A1 // USART Baud Rate: 9600
                 ; 0000 00A2 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
0000d6 b9eb      	OUT  0xB,R30
                 ; 0000 00A3 UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000d7 e9e8      	LDI  R30,LOW(152)
0000d8 b9ea      	OUT  0xA,R30
                 ; 0000 00A4 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
0000d9 e8e6      	LDI  R30,LOW(134)
0000da bde0      	OUT  0x20,R30
                 ; 0000 00A5 UBRRH=0x00;
0000db e0e0      	LDI  R30,LOW(0)
0000dc bde0      	OUT  0x20,R30
                 ; 0000 00A6 UBRRL=0x33;
0000dd e3e3      	LDI  R30,LOW(51)
0000de b9e9      	OUT  0x9,R30
                 ; 0000 00A7 
                 ; 0000 00A8 get_offset();
0000df d251      	RCALL _get_offset
                 ; 0000 00A9 //get_offset1();
                 ; 0000 00AA //get_offset2();
                 ; 0000 00AB 
                 ; 0000 00AC 
                 ; 0000 00AD lcd_init(16);
0000e0 e1a0      	LDI  R26,LOW(16)
0000e1 940e 0482 	CALL _lcd_init
                 ; 0000 00AE lcd_putsf("Doctor naderi");
                +
0000e3 e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000e4 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000e5 940e 0471 	CALL _lcd_putsf
                 ; 0000 00AF delay_ms(1000);
0000e7 eea8      	LDI  R26,LOW(1000)
0000e8 e0b3      	LDI  R27,HIGH(1000)
0000e9 940e 0bf1 	CALL _delay_ms
                 ; 0000 00B0 
                 ; 0000 00B1 // Timer/Counter 2 initialization
                 ; 0000 00B2 // Clock source: System Clock
                 ; 0000 00B3 // Clock value: 7.813 kHz
                 ; 0000 00B4 // Mode: Normal top=0xFF
                 ; 0000 00B5 // OC2 output: Disconnected
                 ; 0000 00B6 // Timer Period: 9.984 ms
                 ; 0000 00B7 ASSR=0<<AS2;
0000eb e0e0      	LDI  R30,LOW(0)
0000ec bde2      	OUT  0x22,R30
                 ; 0000 00B8 TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (1<<CS22) | (1<<CS21) | (1<<CS20);
0000ed e0e7      	LDI  R30,LOW(7)
0000ee bde5      	OUT  0x25,R30
                 ; 0000 00B9 TCNT2=0xB2;
0000ef ebe2      	LDI  R30,LOW(178)
0000f0 bde4      	OUT  0x24,R30
                 ; 0000 00BA OCR2=0x00;
0000f1 e0e0      	LDI  R30,LOW(0)
0000f2 bde3      	OUT  0x23,R30
                 ; 0000 00BB 
                 ; 0000 00BC // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00BD TIMSK=(0<<OCIE2) | (1<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
0000f3 e4e0      	LDI  R30,LOW(64)
0000f4 bfe9      	OUT  0x39,R30
                 ; 0000 00BE 
                 ; 0000 00BF // Global enable interrupts
                 ; 0000 00C0 #asm("sei")
0000f5 9478      	sei
                 ; 0000 00C1 
                 ; 0000 00C2 while (1)
                 _0x10:
                 ; 0000 00C3       {
                 ; 0000 00C4         get_scale();
0000f6 d0e8      	RCALL _get_scale
                 ; 0000 00C5         //get_scale1();
                 ; 0000 00C6         //get_scale2();
                 ; 0000 00C7         ftoa(scale,2,str1);
0000f7 940e 094a 	CALL SUBOPT_0x0
0000f9 e0e2      	LDI  R30,LOW(2)
0000fa 93ea      	ST   -Y,R30
0000fb e0aa      	LDI  R26,LOW(_str1)
0000fc e0b4      	LDI  R27,HIGH(_str1)
0000fd 940e 081e 	CALL _ftoa
                 ; 0000 00C8         sprintf(buffer1,"%s",str1);
0000ff ece8      	LDI  R30,LOW(_buffer1)
000100 e0f3      	LDI  R31,HIGH(_buffer1)
000101 940e 0955 	CALL SUBOPT_0x1
000103 e0ea      	LDI  R30,LOW(_str1)
000104 e0f4      	LDI  R31,HIGH(_str1)
000105 940e 095c 	CALL SUBOPT_0x2
                 ; 0000 00C9         ftoa(scale1,2,str2);
000107 940e 0965 	CALL SUBOPT_0x3
000109 e0e2      	LDI  R30,LOW(2)
00010a 93ea      	ST   -Y,R30
00010b e1a4      	LDI  R26,LOW(_str2)
00010c e0b4      	LDI  R27,HIGH(_str2)
00010d 940e 081e 	CALL _ftoa
                 ; 0000 00CA         sprintf(buffer2,"%s",str2);
00010f ede4      	LDI  R30,LOW(_buffer2)
000110 e0f3      	LDI  R31,HIGH(_buffer2)
000111 940e 0955 	CALL SUBOPT_0x1
000113 e1e4      	LDI  R30,LOW(_str2)
000114 e0f4      	LDI  R31,HIGH(_str2)
000115 940e 095c 	CALL SUBOPT_0x2
                 ; 0000 00CB         ftoa(scale2,2,str3);
000117 940e 0970 	CALL SUBOPT_0x4
000119 e0e2      	LDI  R30,LOW(2)
00011a 93ea      	ST   -Y,R30
00011b e1ae      	LDI  R26,LOW(_str3)
00011c e0b4      	LDI  R27,HIGH(_str3)
00011d 940e 081e 	CALL _ftoa
                 ; 0000 00CC         sprintf(buffer3,"%s",str3);
00011f eee0      	LDI  R30,LOW(_buffer3)
000120 e0f3      	LDI  R31,HIGH(_buffer3)
000121 940e 0955 	CALL SUBOPT_0x1
000123 e1ee      	LDI  R30,LOW(_str3)
000124 e0f4      	LDI  R31,HIGH(_str3)
000125 940e 095c 	CALL SUBOPT_0x2
                 ; 0000 00CD         send(buffer1,buffer2,buffer3);
000127 ece8      	LDI  R30,LOW(_buffer1)
000128 e0f3      	LDI  R31,HIGH(_buffer1)
000129 93fa      	ST   -Y,R31
00012a 93ea      	ST   -Y,R30
00012b ede4      	LDI  R30,LOW(_buffer2)
00012c e0f3      	LDI  R31,HIGH(_buffer2)
00012d 93fa      	ST   -Y,R31
00012e 93ea      	ST   -Y,R30
00012f eea0      	LDI  R26,LOW(_buffer3)
000130 e0b3      	LDI  R27,HIGH(_buffer3)
000131 d264      	RCALL _send
                 ; 0000 00CE         sprintf(buffer," %4.1fg %4.1fg %4.1fg",scale,scale1,scale2);//sprintf(buffer," %ld ",Weight_Shiwu);//sprintf(buf ...
000132 eeec      	LDI  R30,LOW(_buffer)
000133 e0f3      	LDI  R31,HIGH(_buffer)
000134 93fa      	ST   -Y,R31
000135 93ea      	ST   -Y,R30
                +
000136 e7e9     +LDI R30 , LOW ( 2 * _0x0 + ( 17 ) )
000137 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 17 ) )
                 	__POINTW1FN _0x0,17
000138 93fa      	ST   -Y,R31
000139 93ea      	ST   -Y,R30
00013a 940e 094a 	CALL SUBOPT_0x0
00013c 940e 0965 	CALL SUBOPT_0x3
00013e 940e 0970 	CALL SUBOPT_0x4
000140 e08c      	LDI  R24,12
000141 940e 07ea 	CALL _sprintf
000143 9660      	ADIW R28,16
                 ; 0000 00CF         lcd_clear();
000144 940e 0446 	CALL _lcd_clear
                 ; 0000 00D0         lcd_gotoxy(0,0);
000146 e0e0      	LDI  R30,LOW(0)
000147 93ea      	ST   -Y,R30
000148 e0a0      	LDI  R26,LOW(0)
000149 940e 0439 	CALL _lcd_gotoxy
                 ; 0000 00D1         lcd_puts(buffer);
00014b eeac      	LDI  R26,LOW(_buffer)
00014c e0b3      	LDI  R27,HIGH(_buffer)
00014d 940e 0467 	CALL _lcd_puts
                 ; 0000 00D2 //        get_scale1();
                 ; 0000 00D3 //        sprintf(buffer,"%4.1fg",scale1);//sprintf(buffer," %ld ",Weight_Shiwu1);//sprintf(buffer," %1.3f --> Gram",sca ...
                 ; 0000 00D4 //        lcd_gotoxy(0,8);
                 ; 0000 00D5 //        lcd_puts(buffer);
                 ; 0000 00D6 //        get_scale2();
                 ; 0000 00D7 //        sprintf(buffer,"%4.1fg",scale2);//sprintf(buffer," %ld ",Weight_Shiwu2);//sprintf(buffer," %1.3f --> Gram",sca ...
                 ; 0000 00D8 //        lcd_gotoxy(1,0);
                 ; 0000 00D9 //        lcd_puts(buffer);
                 ; 0000 00DA         delay_ms(10);
00014f e0aa      	LDI  R26,LOW(10)
000150 e0b0      	LDI  R27,0
000151 940e 0bf1 	CALL _delay_ms
                 ; 0000 00DB         //motor();
                 ; 0000 00DC       }
000153 cfa2      	RJMP _0x10
                 ; 0000 00DD }
                 _0x13:
000154 cfff      	RJMP _0x13
                 ; .FEND
                 ;
                 ;
                 ;void HX711_Read(void)
                 ; 0000 00E1 {
                 _HX711_Read:
                 ; .FSTART _HX711_Read
                 ; 0000 00E2     unsigned char i;
                 ; 0000 00E3     unsigned long count = 0;
                 ; 0000 00E4     unsigned long count1 = 0;
                 ; 0000 00E5     unsigned long count2 = 0;
                 ; 0000 00E6 
                 ; 0000 00E7 
                 ; 0000 00E8     HX711_Buffer = 0;
000155 972c      	SBIW R28,12
000156 e08c      	LDI  R24,12
000157 e0a0      	LDI  R26,LOW(0)
000158 e0b0      	LDI  R27,HIGH(0)
000159 e5ec      	LDI  R30,LOW(_0x14*2)
00015a e0f0      	LDI  R31,HIGH(_0x14*2)
00015b 940e 0e79 	CALL __INITLOCB
00015d 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	count -> Y+9
                 ;	count1 -> Y+5
                 ;	count2 -> Y+1
00015e e0e0      	LDI  R30,LOW(0)
00015f 93e0 0278 	STS  _HX711_Buffer,R30
000161 93e0 0279 	STS  _HX711_Buffer+1,R30
000163 93e0 027a 	STS  _HX711_Buffer+2,R30
000165 93e0 027b 	STS  _HX711_Buffer+3,R30
                 ; 0000 00E9     HX711_Buffer1 = 0;
000167 93e0 027c 	STS  _HX711_Buffer1,R30
000169 93e0 027d 	STS  _HX711_Buffer1+1,R30
00016b 93e0 027e 	STS  _HX711_Buffer1+2,R30
00016d 93e0 027f 	STS  _HX711_Buffer1+3,R30
                 ; 0000 00EA     HX711_Buffer2 = 0;
00016f 93e0 0280 	STS  _HX711_Buffer2,R30
000171 93e0 0281 	STS  _HX711_Buffer2+1,R30
000173 93e0 0282 	STS  _HX711_Buffer2+2,R30
000175 93e0 0283 	STS  _HX711_Buffer2+3,R30
                 ; 0000 00EB 
                 ; 0000 00EC       HX711_DOUT=1;
000177 9a83      	SBI  0x10,3
                 ; 0000 00ED       HX711_SCK=0;
000178 9892      	CBI  0x12,2
                 ; 0000 00EE       HX711_DOUT1=1;
000179 9a85      	SBI  0x10,5
                 ; 0000 00EF       HX711_SCK1=0;
00017a 9894      	CBI  0x12,4
                 ; 0000 00F0       HX711_DOUT2=1;
00017b 9ab1      	SBI  0x16,1
                 ; 0000 00F1       HX711_SCK2=0;
00017c 98c0      	CBI  0x18,0
                 ; 0000 00F2 
                 ; 0000 00F3       while(HX711_DOUT);
                 _0x21:
00017d 9983      	SBIC 0x10,3
00017e cffe      	RJMP _0x21
                 ; 0000 00F4       for(i=0;i<24;i++)  //gain --> 128
00017f e010      	LDI  R17,LOW(0)
                 _0x25:
000180 3118      	CPI  R17,24
000181 f590      	BRSH _0x26
                 ; 0000 00F5         {
                 ; 0000 00F6             HX711_SCK=1;
000182 9a92      	SBI  0x12,2
                 ; 0000 00F7             HX711_SCK1=1;
000183 9a94      	SBI  0x12,4
                 ; 0000 00F8             HX711_SCK2=1;
000184 9ac0      	SBI  0x18,0
                 ; 0000 00F9             count=count<<1;
000185 940e 097b 	CALL SUBOPT_0x5
000187 940e 0dc4 	CALL __LSLD1
000189 940e 0980 	CALL SUBOPT_0x6
                 ; 0000 00FA             count1=count1<<1;
00018b 940e 0985 	CALL SUBOPT_0x7
00018d 940e 0dc4 	CALL __LSLD1
00018f 940e 098a 	CALL SUBOPT_0x8
                 ; 0000 00FB             count2=count2<<1;
000191 940e 098f 	CALL SUBOPT_0x9
000193 940e 0dc4 	CALL __LSLD1
000195 940e 0994 	CALL SUBOPT_0xA
                 ; 0000 00FC             //delay_us(1);
                 ; 0000 00FD             HX711_SCK=0;
000197 9892      	CBI  0x12,2
                 ; 0000 00FE             HX711_SCK1=0;
000198 9894      	CBI  0x12,4
                 ; 0000 00FF             HX711_SCK2=0;
000199 98c0      	CBI  0x18,0
                 ; 0000 0100 
                 ; 0000 0101             if(HX711_DOUT)
00019a 9b83      	SBIS 0x10,3
00019b c006      	RJMP _0x33
                 ; 0000 0102                 count++;
00019c 940e 097b 	CALL SUBOPT_0x5
00019e 940e 0999 	CALL SUBOPT_0xB
0001a0 940e 0980 	CALL SUBOPT_0x6
                 ; 0000 0103             if(HX711_DOUT1)
                 _0x33:
0001a2 9b85      	SBIS 0x10,5
0001a3 c006      	RJMP _0x34
                 ; 0000 0104                 count1++;
0001a4 940e 0985 	CALL SUBOPT_0x7
0001a6 940e 0999 	CALL SUBOPT_0xB
0001a8 940e 098a 	CALL SUBOPT_0x8
                 ; 0000 0105             if(HX711_DOUT2)
                 _0x34:
0001aa 9bb1      	SBIS 0x16,1
0001ab c006      	RJMP _0x35
                 ; 0000 0106                 count2++;
0001ac 940e 098f 	CALL SUBOPT_0x9
0001ae 940e 0999 	CALL SUBOPT_0xB
0001b0 940e 0994 	CALL SUBOPT_0xA
                 ; 0000 0107         }
                 _0x35:
0001b2 5f1f      	SUBI R17,-1
0001b3 cfcc      	RJMP _0x25
                 _0x26:
                 ; 0000 0108 
                 ; 0000 0109 
                 ; 0000 010A        HX711_SCK=1;
0001b4 9a92      	SBI  0x12,2
                 ; 0000 010B        HX711_SCK1=1;
0001b5 9a94      	SBI  0x12,4
                 ; 0000 010C        HX711_SCK2=1;
0001b6 9ac0      	SBI  0x18,0
                 ; 0000 010D 
                 ; 0000 010E       count=count ^ HX_COMPLEMENT;//2,s Complement
0001b7 940e 099e 	CALL SUBOPT_0xC
0001b9 940e 09a3 	CALL SUBOPT_0xD
0001bb 940e 0980 	CALL SUBOPT_0x6
                 ; 0000 010F       count1=count1 ^ HX_COMPLEMENT;//2,s Complement
                +
0001bd 81ad     +LDD R26 , Y + 5
0001be 81be     +LDD R27 , Y + 5 + 1
0001bf 818f     +LDD R24 , Y + 5 + 2
0001c0 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
0001c1 940e 09a3 	CALL SUBOPT_0xD
0001c3 940e 098a 	CALL SUBOPT_0x8
                 ; 0000 0110       count2=count2 ^ HX_COMPLEMENT;//2,s Complement
                +
0001c5 81a9     +LDD R26 , Y + 1
0001c6 81ba     +LDD R27 , Y + 1 + 1
0001c7 818b     +LDD R24 , Y + 1 + 2
0001c8 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
0001c9 940e 09a3 	CALL SUBOPT_0xD
0001cb 940e 0994 	CALL SUBOPT_0xA
                 ; 0000 0111 
                 ; 0000 0112       HX711_SCK=0;
0001cd 9892      	CBI  0x12,2
                 ; 0000 0113       HX711_SCK1=0;
0001ce 9894      	CBI  0x12,4
                 ; 0000 0114       HX711_SCK2=0;
0001cf 98c0      	CBI  0x18,0
                 ; 0000 0115 
                 ; 0000 0116       HX711_Buffer = count;
0001d0 940e 097b 	CALL SUBOPT_0x5
0001d2 940e 09aa 	CALL SUBOPT_0xE
                 ; 0000 0117       HX711_Buffer1 = count1;
0001d4 940e 0985 	CALL SUBOPT_0x7
0001d6 940e 09b3 	CALL SUBOPT_0xF
                 ; 0000 0118       HX711_Buffer2 = count2;
0001d8 940e 098f 	CALL SUBOPT_0x9
0001da 940e 09bc 	CALL SUBOPT_0x10
                 ; 0000 0119 }//HX711_Read
0001dc 8118      	LDD  R17,Y+0
0001dd 962d      	ADIW R28,13
0001de 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void get_scale(void)
                 ; 0000 011D {
                 _get_scale:
                 ; .FSTART _get_scale
                 ; 0000 011E     unsigned int i;
                 ; 0000 011F     unsigned int j;
                 ; 0000 0120 
                 ; 0000 0121     HX711_Buffer_sum = 0;
0001df 940e 0e6d 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
0001e1 940e 09c5 	CALL SUBOPT_0x11
                 ; 0000 0122     HX711_Buffer1_sum = 0;
                 ; 0000 0123     HX711_Buffer2_sum = 0;
                 ; 0000 0124 
                 ; 0000 0125 
                 ; 0000 0126     for(j=0 ; j<4 ;j++){
                +
0001e3 e020     +LDI R18 , LOW ( 0 )
0001e4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x43:
                +
0001e5 3024     +CPI R18 , LOW ( 4 )
0001e6 e0e0     +LDI R30 , HIGH ( 4 )
0001e7 073e     +CPC R19 , R30
                 	__CPWRN 18,19,4
0001e8 f008      	BRLO PC+2
0001e9 c10d      	RJMP _0x44
                 ; 0000 0127     for(i=0 ; i<25 ;i++){
                +
0001ea e000     +LDI R16 , LOW ( 0 )
0001eb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x46:
                +
0001ec 3109     +CPI R16 , LOW ( 25 )
0001ed e0e0     +LDI R30 , HIGH ( 25 )
0001ee 071e     +CPC R17 , R30
                 	__CPWRN 16,17,25
0001ef f008      	BRLO PC+2
0001f0 c0c7      	RJMP _0x47
                 ; 0000 0128     HX711_Read();
0001f1 df63      	RCALL _HX711_Read
                 ; 0000 0129 
                 ; 0000 012A     HX711_Buffer = HX711_Buffer/100;
0001f2 940e 09df 	CALL SUBOPT_0x12
0001f4 940e 09e8 	CALL SUBOPT_0x13
0001f6 940e 09aa 	CALL SUBOPT_0xE
                 ; 0000 012B     if(HX711_Buffer > Weight_Maopi)
0001f8 91e0 0264 	LDS  R30,_Weight_Maopi
0001fa 91f0 0265 	LDS  R31,_Weight_Maopi+1
0001fc 9160 0266 	LDS  R22,_Weight_Maopi+2
0001fe 9170 0267 	LDS  R23,_Weight_Maopi+3
000200 940e 09df 	CALL SUBOPT_0x12
000202 940e 0e66 	CALL __CPD12
000204 f538      	BRSH _0x48
                 ; 0000 012C     {
                 ; 0000 012D         Weight_Shiwu = HX711_Buffer;
000205 940e 09ef 	CALL SUBOPT_0x14
000207 940e 09f8 	CALL SUBOPT_0x15
                 ; 0000 012E         Weight_Shiwu = Weight_Shiwu - Weight_Maopi;
000209 91a0 0264 	LDS  R26,_Weight_Maopi
00020b 91b0 0265 	LDS  R27,_Weight_Maopi+1
00020d 9180 0266 	LDS  R24,_Weight_Maopi+2
00020f 9190 0267 	LDS  R25,_Weight_Maopi+3
000211 940e 0a01 	CALL SUBOPT_0x16
000213 940e 0dad 	CALL __SUBD12
000215 940e 09f8 	CALL SUBOPT_0x15
                 ; 0000 012F 
                 ; 0000 0130         Weight_Shiwu = ((float)Weight_Shiwu/HX_REF);
000217 940e 0a0a 	CALL SUBOPT_0x17
000219 940e 0a10 	CALL SUBOPT_0x18
00021b e6a0      	LDI  R26,LOW(_Weight_Shiwu)
00021c e0b2      	LDI  R27,HIGH(_Weight_Shiwu)
00021d 940e 0a17 	CALL SUBOPT_0x19
                 ; 0000 0131 
                 ; 0000 0132         scale_array[i] = (float)Weight_Shiwu/10;
00021f e9ac      	LDI  R26,LOW(_scale_array)
000220 e0b2      	LDI  R27,HIGH(_scale_array)
000221 940e 0a1d 	CALL SUBOPT_0x1A
000223 93ff      	PUSH R31
000224 93ef      	PUSH R30
000225 940e 0a0a 	CALL SUBOPT_0x17
000227 940e 0a22 	CALL SUBOPT_0x1B
000229 91af      	POP  R26
00022a 91bf      	POP  R27
00022b c005      	RJMP _0x58
                 ; 0000 0133     }
                 ; 0000 0134     else scale_array[i] = (float)0;
                 _0x48:
00022c 01f8      	MOVW R30,R16
00022d e9ac      	LDI  R26,LOW(_scale_array)
00022e e0b2      	LDI  R27,HIGH(_scale_array)
00022f 940e 0a29 	CALL SUBOPT_0x1C
                 _0x58:
000231 940e 0e32 	CALL __PUTDP1
                 ; 0000 0135 
                 ; 0000 0136 
                 ; 0000 0137     //scale = (scale_array[0] + scale_array[1] + scale_array[2]) / 3;
                 ; 0000 0138 
                 ; 0000 0139     HX711_Buffer1 = HX711_Buffer1/100;
000233 940e 0a32 	CALL SUBOPT_0x1D
000235 940e 09e8 	CALL SUBOPT_0x13
000237 940e 09b3 	CALL SUBOPT_0xF
                 ; 0000 013A     if(HX711_Buffer1 > Weight_Maopi1)
000239 91e0 026c 	LDS  R30,_Weight_Maopi1
00023b 91f0 026d 	LDS  R31,_Weight_Maopi1+1
00023d 9160 026e 	LDS  R22,_Weight_Maopi1+2
00023f 9170 026f 	LDS  R23,_Weight_Maopi1+3
000241 940e 0a32 	CALL SUBOPT_0x1D
000243 940e 0e66 	CALL __CPD12
000245 f538      	BRSH _0x4A
                 ; 0000 013B     {
                 ; 0000 013C         Weight_Shiwu1 = HX711_Buffer1;
000246 940e 0a3b 	CALL SUBOPT_0x1E
000248 940e 0a44 	CALL SUBOPT_0x1F
                 ; 0000 013D         Weight_Shiwu1 = Weight_Shiwu1 - Weight_Maopi1;
00024a 91a0 026c 	LDS  R26,_Weight_Maopi1
00024c 91b0 026d 	LDS  R27,_Weight_Maopi1+1
00024e 9180 026e 	LDS  R24,_Weight_Maopi1+2
000250 9190 026f 	LDS  R25,_Weight_Maopi1+3
000252 940e 0a4d 	CALL SUBOPT_0x20
000254 940e 0dad 	CALL __SUBD12
000256 940e 0a44 	CALL SUBOPT_0x1F
                 ; 0000 013E 
                 ; 0000 013F         Weight_Shiwu1 = ((float)Weight_Shiwu1/HX_REF);
000258 940e 0a56 	CALL SUBOPT_0x21
00025a 940e 0a10 	CALL SUBOPT_0x18
00025c e6a8      	LDI  R26,LOW(_Weight_Shiwu1)
00025d e0b2      	LDI  R27,HIGH(_Weight_Shiwu1)
00025e 940e 0a17 	CALL SUBOPT_0x19
                 ; 0000 0140 
                 ; 0000 0141         scale1_array[i] = (float)Weight_Shiwu1/10;
000260 e0a0      	LDI  R26,LOW(_scale1_array)
000261 e0b3      	LDI  R27,HIGH(_scale1_array)
000262 940e 0a1d 	CALL SUBOPT_0x1A
000264 93ff      	PUSH R31
000265 93ef      	PUSH R30
000266 940e 0a56 	CALL SUBOPT_0x21
000268 940e 0a22 	CALL SUBOPT_0x1B
00026a 91af      	POP  R26
00026b 91bf      	POP  R27
00026c c005      	RJMP _0x59
                 ; 0000 0142     }
                 ; 0000 0143     else scale1_array[i] = (float)0;
                 _0x4A:
00026d 01f8      	MOVW R30,R16
00026e e0a0      	LDI  R26,LOW(_scale1_array)
00026f e0b3      	LDI  R27,HIGH(_scale1_array)
000270 940e 0a29 	CALL SUBOPT_0x1C
                 _0x59:
000272 940e 0e32 	CALL __PUTDP1
                 ; 0000 0144 
                 ; 0000 0145 
                 ; 0000 0146     //scale1 = (scale1_array[0] + scale1_array[1] + scale1_array[2]) / 3;
                 ; 0000 0147 
                 ; 0000 0148     HX711_Buffer2 = HX711_Buffer2/100;
000274 940e 0a5c 	CALL SUBOPT_0x22
000276 940e 09e8 	CALL SUBOPT_0x13
000278 940e 09bc 	CALL SUBOPT_0x10
                 ; 0000 0149     if(HX711_Buffer2 > Weight_Maopi2)
00027a 91e0 0274 	LDS  R30,_Weight_Maopi2
00027c 91f0 0275 	LDS  R31,_Weight_Maopi2+1
00027e 9160 0276 	LDS  R22,_Weight_Maopi2+2
000280 9170 0277 	LDS  R23,_Weight_Maopi2+3
000282 940e 0a5c 	CALL SUBOPT_0x22
000284 940e 0e66 	CALL __CPD12
000286 f538      	BRSH _0x4C
                 ; 0000 014A     {
                 ; 0000 014B         Weight_Shiwu2 = HX711_Buffer2;
000287 940e 0a65 	CALL SUBOPT_0x23
000289 940e 0a6e 	CALL SUBOPT_0x24
                 ; 0000 014C         Weight_Shiwu2 = Weight_Shiwu2 - Weight_Maopi2;
00028b 91a0 0274 	LDS  R26,_Weight_Maopi2
00028d 91b0 0275 	LDS  R27,_Weight_Maopi2+1
00028f 9180 0276 	LDS  R24,_Weight_Maopi2+2
000291 9190 0277 	LDS  R25,_Weight_Maopi2+3
000293 940e 0a77 	CALL SUBOPT_0x25
000295 940e 0dad 	CALL __SUBD12
000297 940e 0a6e 	CALL SUBOPT_0x24
                 ; 0000 014D 
                 ; 0000 014E         Weight_Shiwu2 = ((float)Weight_Shiwu2/HX_REF);
000299 940e 0a80 	CALL SUBOPT_0x26
00029b 940e 0a10 	CALL SUBOPT_0x18
00029d e7a0      	LDI  R26,LOW(_Weight_Shiwu2)
00029e e0b2      	LDI  R27,HIGH(_Weight_Shiwu2)
00029f 940e 0a17 	CALL SUBOPT_0x19
                 ; 0000 014F 
                 ; 0000 0150         scale2_array[i] = (float)Weight_Shiwu2/10;
0002a1 e6a4      	LDI  R26,LOW(_scale2_array)
0002a2 e0b3      	LDI  R27,HIGH(_scale2_array)
0002a3 940e 0a1d 	CALL SUBOPT_0x1A
0002a5 93ff      	PUSH R31
0002a6 93ef      	PUSH R30
0002a7 940e 0a80 	CALL SUBOPT_0x26
0002a9 940e 0a22 	CALL SUBOPT_0x1B
0002ab 91af      	POP  R26
0002ac 91bf      	POP  R27
0002ad c005      	RJMP _0x5A
                 ; 0000 0151     }
                 ; 0000 0152     else scale2_array[i] = (float)0;
                 _0x4C:
0002ae 01f8      	MOVW R30,R16
0002af e6a4      	LDI  R26,LOW(_scale2_array)
0002b0 e0b3      	LDI  R27,HIGH(_scale2_array)
0002b1 940e 0a29 	CALL SUBOPT_0x1C
                 _0x5A:
0002b3 940e 0e32 	CALL __PUTDP1
                 ; 0000 0153     }
                +
0002b5 5f0f     +SUBI R16 , LOW ( - 1 )
0002b6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0002b7 cf34      	RJMP _0x46
                 _0x47:
                 ; 0000 0154     //scale2 = (scale2_array[0] = scale2_array[1] = scale2_array[2]) / 3;
                 ; 0000 0155         sort_array(scale_array,25);
0002b8 e9ec      	LDI  R30,LOW(_scale_array)
0002b9 e0f2      	LDI  R31,HIGH(_scale_array)
0002ba 940e 0a86 	CALL SUBOPT_0x27
                 ; 0000 0156         sort_array(scale1_array,25);
0002bc e0e0      	LDI  R30,LOW(_scale1_array)
0002bd e0f3      	LDI  R31,HIGH(_scale1_array)
0002be 940e 0a86 	CALL SUBOPT_0x27
                 ; 0000 0157         sort_array(scale2_array,25);
0002c0 e6e4      	LDI  R30,LOW(_scale2_array)
0002c1 e0f3      	LDI  R31,HIGH(_scale2_array)
0002c2 940e 0a86 	CALL SUBOPT_0x27
                 ; 0000 0158         HX711_Buffer_sum += scale_array[12]/100;
                +
0002c4 91a0 02cc+LDS R26 , _scale_array + ( 48 )
0002c6 91b0 02cd+LDS R27 , _scale_array + ( 48 ) + 1
0002c8 9180 02ce+LDS R24 , _scale_array + ( 48 ) + 2
0002ca 9190 02cf+LDS R25 , _scale_array + ( 48 ) + 3
                 	__GETD2MN _scale_array,48
0002cc 940e 0a8c 	CALL SUBOPT_0x28
0002ce 940e 0a93 	CALL SUBOPT_0x29
0002d0 940e 0a9c 	CALL SUBOPT_0x2A
0002d2 940e 0aa1 	CALL SUBOPT_0x2B
                 ; 0000 0159         HX711_Buffer1_sum += scale1_array[12]/100;
                +
0002d4 91a0 0330+LDS R26 , _scale1_array + ( 48 )
0002d6 91b0 0331+LDS R27 , _scale1_array + ( 48 ) + 1
0002d8 9180 0332+LDS R24 , _scale1_array + ( 48 ) + 2
0002da 9190 0333+LDS R25 , _scale1_array + ( 48 ) + 3
                 	__GETD2MN _scale1_array,48
0002dc 940e 0a8c 	CALL SUBOPT_0x28
0002de 940e 0aaa 	CALL SUBOPT_0x2C
0002e0 940e 0a9c 	CALL SUBOPT_0x2A
0002e2 940e 0ab3 	CALL SUBOPT_0x2D
                 ; 0000 015A         HX711_Buffer2_sum += scale2_array[12]/100;
                +
0002e4 91a0 0394+LDS R26 , _scale2_array + ( 48 )
0002e6 91b0 0395+LDS R27 , _scale2_array + ( 48 ) + 1
0002e8 9180 0396+LDS R24 , _scale2_array + ( 48 ) + 2
0002ea 9190 0397+LDS R25 , _scale2_array + ( 48 ) + 3
                 	__GETD2MN _scale2_array,48
0002ec 940e 0a8c 	CALL SUBOPT_0x28
0002ee 940e 0abc 	CALL SUBOPT_0x2E
0002f0 940e 0a9c 	CALL SUBOPT_0x2A
0002f2 940e 0ac5 	CALL SUBOPT_0x2F
                 ; 0000 015B     }
                +
0002f4 5f2f     +SUBI R18 , LOW ( - 1 )
0002f5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0002f6 ceee      	RJMP _0x43
                 _0x44:
                 ; 0000 015C     scale = (float)HX711_Buffer_sum / 4 ;
0002f7 91e0 0284 	LDS  R30,_HX711_Buffer_sum
0002f9 91f0 0285 	LDS  R31,_HX711_Buffer_sum+1
0002fb 9160 0286 	LDS  R22,_HX711_Buffer_sum+2
0002fd 9170 0287 	LDS  R23,_HX711_Buffer_sum+3
0002ff 940e 0ace 	CALL SUBOPT_0x30
000301 93e0 0290 	STS  _scale,R30
000303 93f0 0291 	STS  _scale+1,R31
000305 9360 0292 	STS  _scale+2,R22
000307 9370 0293 	STS  _scale+3,R23
                 ; 0000 015D     scale1 = (float)HX711_Buffer1_sum / 4 ;
000309 91e0 0288 	LDS  R30,_HX711_Buffer1_sum
00030b 91f0 0289 	LDS  R31,_HX711_Buffer1_sum+1
00030d 9160 028a 	LDS  R22,_HX711_Buffer1_sum+2
00030f 9170 028b 	LDS  R23,_HX711_Buffer1_sum+3
000311 940e 0ace 	CALL SUBOPT_0x30
000313 93e0 0294 	STS  _scale1,R30
000315 93f0 0295 	STS  _scale1+1,R31
000317 9360 0296 	STS  _scale1+2,R22
000319 9370 0297 	STS  _scale1+3,R23
                 ; 0000 015E     scale2 = (float)HX711_Buffer2_sum / 4 ;
00031b 91e0 028c 	LDS  R30,_HX711_Buffer2_sum
00031d 91f0 028d 	LDS  R31,_HX711_Buffer2_sum+1
00031f 9160 028e 	LDS  R22,_HX711_Buffer2_sum+2
000321 9170 028f 	LDS  R23,_HX711_Buffer2_sum+3
000323 940e 0ace 	CALL SUBOPT_0x30
000325 93e0 0298 	STS  _scale2,R30
000327 93f0 0299 	STS  _scale2+1,R31
000329 9360 029a 	STS  _scale2+2,R22
00032b 9370 029b 	STS  _scale2+3,R23
                 ; 0000 015F }
00032d 940e 0e74 	CALL __LOADLOCR4
00032f 9624      	ADIW R28,4
000330 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void get_offset(void)
                 ; 0000 0163 {
                 _get_offset:
                 ; .FSTART _get_offset
                 ; 0000 0164     int i=0;
                 ; 0000 0165 
                 ; 0000 0166     HX711_Buffer_sum = 0;
000331 931a      	ST   -Y,R17
000332 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
000333 e000     +LDI R16 , LOW ( 0 )
000334 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000335 940e 09c5 	CALL SUBOPT_0x11
                 ; 0000 0167     HX711_Buffer1_sum = 0;
                 ; 0000 0168     HX711_Buffer2_sum = 0;
                 ; 0000 0169    	for( i = 0 ; i < 10 ; i++)
                +
000337 e000     +LDI R16 , LOW ( 0 )
000338 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4F:
                +
000339 300a     +CPI R16 , LOW ( 10 )
00033a e0e0     +LDI R30 , HIGH ( 10 )
00033b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
00033c f504      	BRGE _0x50
                 ; 0000 016A 	{
                 ; 0000 016B         HX711_Read();
00033d de17      	RCALL _HX711_Read
                 ; 0000 016C 		HX711_Buffer_sum += HX711_Buffer ;
00033e 940e 09ef 	CALL SUBOPT_0x14
000340 940e 0a93 	CALL SUBOPT_0x29
000342 940e 0da8 	CALL __ADDD12
000344 940e 0aa1 	CALL SUBOPT_0x2B
                 ; 0000 016D         HX711_Buffer1_sum += HX711_Buffer1 ;
000346 940e 0a3b 	CALL SUBOPT_0x1E
000348 940e 0aaa 	CALL SUBOPT_0x2C
00034a 940e 0da8 	CALL __ADDD12
00034c 940e 0ab3 	CALL SUBOPT_0x2D
                 ; 0000 016E         HX711_Buffer2_sum += HX711_Buffer2 ;
00034e 940e 0a65 	CALL SUBOPT_0x23
000350 940e 0abc 	CALL SUBOPT_0x2E
000352 940e 0da8 	CALL __ADDD12
000354 940e 0ac5 	CALL SUBOPT_0x2F
                 ; 0000 016F         delay_us(500);
                +
000356 ee88     +LDI R24 , LOW ( 1000 )
000357 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000358 9701     +SBIW R24 , 1
000359 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
                 ; 0000 0170 	}
                +
00035a 5f0f     +SUBI R16 , LOW ( - 1 )
00035b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00035c cfdc      	RJMP _0x4F
                 _0x50:
                 ; 0000 0171     HX711_Buffer_sum = HX711_Buffer_sum /10;
00035d 940e 0a93 	CALL SUBOPT_0x29
00035f 940e 0ad9 	CALL SUBOPT_0x31
000361 940e 0aa1 	CALL SUBOPT_0x2B
                 ; 0000 0172     Weight_Maopi = HX711_Buffer_sum/100;
000363 940e 0a93 	CALL SUBOPT_0x29
000365 940e 09e8 	CALL SUBOPT_0x13
000367 93e0 0264 	STS  _Weight_Maopi,R30
000369 93f0 0265 	STS  _Weight_Maopi+1,R31
00036b 9360 0266 	STS  _Weight_Maopi+2,R22
00036d 9370 0267 	STS  _Weight_Maopi+3,R23
                 ; 0000 0173     HX711_Buffer1_sum = HX711_Buffer1_sum /10;
00036f 940e 0aaa 	CALL SUBOPT_0x2C
000371 940e 0ad9 	CALL SUBOPT_0x31
000373 940e 0ab3 	CALL SUBOPT_0x2D
                 ; 0000 0174     Weight_Maopi1 = HX711_Buffer1_sum/100;
000375 940e 0aaa 	CALL SUBOPT_0x2C
000377 940e 09e8 	CALL SUBOPT_0x13
000379 93e0 026c 	STS  _Weight_Maopi1,R30
00037b 93f0 026d 	STS  _Weight_Maopi1+1,R31
00037d 9360 026e 	STS  _Weight_Maopi1+2,R22
00037f 9370 026f 	STS  _Weight_Maopi1+3,R23
                 ; 0000 0175     HX711_Buffer2_sum = HX711_Buffer2_sum /10;
000381 940e 0abc 	CALL SUBOPT_0x2E
000383 940e 0ad9 	CALL SUBOPT_0x31
000385 940e 0ac5 	CALL SUBOPT_0x2F
                 ; 0000 0176     Weight_Maopi2 = HX711_Buffer2_sum/100;
000387 940e 0abc 	CALL SUBOPT_0x2E
000389 940e 09e8 	CALL SUBOPT_0x13
00038b 93e0 0274 	STS  _Weight_Maopi2,R30
00038d 93f0 0275 	STS  _Weight_Maopi2+1,R31
00038f 9360 0276 	STS  _Weight_Maopi2+2,R22
000391 9370 0277 	STS  _Weight_Maopi2+3,R23
                 ; 0000 0177 
                 ; 0000 0178 }//get_offset
000393 9109      	LD   R16,Y+
000394 9119      	LD   R17,Y+
000395 9508      	RET
                 ; .FEND
                 ;
                 ;
                 ;void send( unsigned char Data1[12], unsigned char Data2[12], unsigned char Data3[12])//,unsigned char Data2[12] )
                 ; 0000 017C {
                 _send:
                 ; .FSTART _send
                 ; 0000 017D //char ATN=0X44;
                 ; 0000 017E putchar('A');
000396 93ba      	ST   -Y,R27
000397 93aa      	ST   -Y,R26
                 ;	Data1 -> Y+4
                 ;	Data2 -> Y+2
                 ;	Data3 -> Y+0
000398 e4a1      	LDI  R26,LOW(65)
000399 940e 04af 	CALL _putchar
                 ; 0000 017F puts(Data1);
00039b 81ac      	LDD  R26,Y+4
00039c 81bd      	LDD  R27,Y+4+1
00039d 940e 04b6 	CALL _puts
                 ; 0000 0180 putchar('E');
00039f e4a5      	LDI  R26,LOW(69)
0003a0 940e 04af 	CALL _putchar
                 ; 0000 0181 putchar('B');
0003a2 e4a2      	LDI  R26,LOW(66)
0003a3 940e 04af 	CALL _putchar
                 ; 0000 0182 puts(Data2);
0003a5 81aa      	LDD  R26,Y+2
0003a6 81bb      	LDD  R27,Y+2+1
0003a7 940e 04b6 	CALL _puts
                 ; 0000 0183 putchar('E');
0003a9 e4a5      	LDI  R26,LOW(69)
0003aa 940e 04af 	CALL _putchar
                 ; 0000 0184 putchar('C');
0003ac e4a3      	LDI  R26,LOW(67)
0003ad 940e 04af 	CALL _putchar
                 ; 0000 0185 puts(Data3);
0003af 81a8      	LD   R26,Y
0003b0 81b9      	LDD  R27,Y+1
0003b1 940e 04b6 	CALL _puts
                 ; 0000 0186 putchar('N');
0003b3 e4ae      	LDI  R26,LOW(78)
0003b4 940e 04af 	CALL _putchar
                 ; 0000 0187 //puts(Data2);
                 ; 0000 0188 //putchar('M');
                 ; 0000 0189 }
0003b6 9626      	ADIW R28,6
0003b7 9508      	RET
                 ; .FEND
                 ;
                 ;void sort_array(float a[], int size) {
                 ; 0000 018B void sort_array(float a[], int size) {
                 _sort_array:
                 ; .FSTART _sort_array
                 ; 0000 018C     int i=0;
                 ; 0000 018D     int o=0;
                 ; 0000 018E     for(i=0; i<(size-1); i++) {
0003b8 93ba      	ST   -Y,R27
0003b9 93aa      	ST   -Y,R26
0003ba 940e 0e6d 	CALL __SAVELOCR4
                 ;	a -> Y+6
                 ;	size -> Y+4
                 ;	i -> R16,R17
                 ;	o -> R18,R19
                +
0003bc e000     +LDI R16 , LOW ( 0 )
0003bd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0003be e020     +LDI R18 , LOW ( 0 )
0003bf e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0003c0 e000     +LDI R16 , LOW ( 0 )
0003c1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x52:
0003c2 81ec      	LDD  R30,Y+4
0003c3 81fd      	LDD  R31,Y+4+1
0003c4 9731      	SBIW R30,1
0003c5 170e      	CP   R16,R30
0003c6 071f      	CPC  R17,R31
0003c7 f00c      	BRLT PC+2
0003c8 c04b      	RJMP _0x53
                 ; 0000 018F         for(o=0; o<(size-(i+1)); o++) {
                +
0003c9 e020     +LDI R18 , LOW ( 0 )
0003ca e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x55:
0003cb 01f8      	MOVW R30,R16
0003cc 9631      	ADIW R30,1
0003cd 81ac      	LDD  R26,Y+4
0003ce 81bd      	LDD  R27,Y+4+1
0003cf 940e 0e5b 	CALL __SWAPW12
0003d1 1bea      	SUB  R30,R26
0003d2 0bfb      	SBC  R31,R27
0003d3 172e      	CP   R18,R30
0003d4 073f      	CPC  R19,R31
0003d5 f5dc      	BRGE _0x56
                 ; 0000 0190                 if(a[o] > a[o+1]) {
0003d6 01f9      	MOVW R30,R18
0003d7 940e 0ae0 	CALL SUBOPT_0x32
0003d9 937f      	PUSH R23
0003da 936f      	PUSH R22
0003db 93ff      	PUSH R31
0003dc 93ef      	PUSH R30
0003dd 01f9      	MOVW R30,R18
0003de 9631      	ADIW R30,1
0003df 940e 0ae0 	CALL SUBOPT_0x32
0003e1 91af      	POP  R26
0003e2 91bf      	POP  R27
0003e3 918f      	POP  R24
0003e4 919f      	POP  R25
0003e5 940e 0d84 	CALL __CMPF12
0003e7 f009      	BREQ PC+2
0003e8 f408      	BRCC PC+2
0003e9 c024      	RJMP _0x57
                 ; 0000 0191                     int t = a[o];
                 ; 0000 0192                     a[o] = a[o+1];
0003ea 9722      	SBIW R28,2
                 ;	a -> Y+8
                 ;	size -> Y+6
                 ;	t -> Y+0
0003eb 01f9      	MOVW R30,R18
0003ec 940e 0ae9 	CALL SUBOPT_0x33
0003ee 940e 0e28 	CALL __GETW1P
0003f0 940e 0c2e 	CALL __CFD1U
0003f2 83e8      	ST   Y,R30
0003f3 83f9      	STD  Y+1,R31
0003f4 01f9      	MOVW R30,R18
0003f5 85a8      	LDD  R26,Y+8
0003f6 85b9      	LDD  R27,Y+8+1
0003f7 940e 0a1d 	CALL SUBOPT_0x1A
0003f9 010f      	MOVW R0,R30
0003fa 01f9      	MOVW R30,R18
0003fb 9631      	ADIW R30,1
0003fc 940e 0ae9 	CALL SUBOPT_0x33
0003fe 940e 0e2c 	CALL __GETD1P
000400 01d0      	MOVW R26,R0
000401 940e 0e32 	CALL __PUTDP1
                 ; 0000 0193                     a[o+1] = t;
000403 01f9      	MOVW R30,R18
000404 9631      	ADIW R30,1
000405 940e 0ae9 	CALL SUBOPT_0x33
000407 81e8      	LD   R30,Y
000408 81f9      	LDD  R31,Y+1
000409 940e 0af0 	CALL SUBOPT_0x34
00040b 940e 0e32 	CALL __PUTDP1
                 ; 0000 0194                 }
00040d 9622      	ADIW R28,2
                 ; 0000 0195         }
                 _0x57:
                +
00040e 5f2f     +SUBI R18 , LOW ( - 1 )
00040f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
000410 cfba      	RJMP _0x55
                 _0x56:
                 ; 0000 0196     }
                +
000411 5f0f     +SUBI R16 , LOW ( - 1 )
000412 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000413 cfae      	RJMP _0x52
                 _0x53:
                 ; 0000 0197 }
000414 940e 0e74 	CALL __LOADLOCR4
000416 9628      	ADIW R28,8
000417 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
000418 93aa      	ST   -Y,R26
000419 b3eb      	IN   R30,0x1B
00041a 70ef      	ANDI R30,LOW(0xF)
00041b 2fae      	MOV  R26,R30
00041c 81e8      	LD   R30,Y
00041d 7fe0      	ANDI R30,LOW(0xF0)
00041e 2bea      	OR   R30,R26
00041f bbeb      	OUT  0x1B,R30
                +
000420 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000421 958a     +DEC R24
000422 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000423 9ada      	SBI  0x1B,2
                +
000424 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000425 958a     +DEC R24
000426 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
000427 98da      	CBI  0x1B,2
                +
000428 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
000429 958a     +DEC R24
00042a f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
00042b 940c 04b4 	JMP  _0x20C0007
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
00042d 93aa      	ST   -Y,R26
00042e 81a8      	LD   R26,Y
00042f dfe8      	RCALL __lcd_write_nibble_G100
000430 81e8          ld    r30,y
000431 95e2          swap  r30
000432 83e8          st    y,r30
000433 81a8      	LD   R26,Y
000434 dfe3      	RCALL __lcd_write_nibble_G100
                +
000435 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000436 958a     +DEC R24
000437 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000438 c07b      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000439 93aa      	ST   -Y,R26
00043a 81e8      	LD   R30,Y
00043b e0f0      	LDI  R31,0
00043c 5ce0      	SUBI R30,LOW(-__base_y_G100)
00043d 4ffb      	SBCI R31,HIGH(-__base_y_G100)
00043e 81e0      	LD   R30,Z
00043f 81a9      	LDD  R26,Y+1
000440 0fae      	ADD  R26,R30
000441 dfeb      	RCALL __lcd_write_data
000442 80a9      	LDD  R10,Y+1
000443 80d8      	LDD  R13,Y+0
000444 9622      	ADIW R28,2
000445 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000446 e0a2      	LDI  R26,LOW(2)
000447 940e 0af5 	CALL SUBOPT_0x35
000449 e0ac      	LDI  R26,LOW(12)
00044a dfe2      	RCALL __lcd_write_data
00044b e0a1      	LDI  R26,LOW(1)
00044c 940e 0af5 	CALL SUBOPT_0x35
00044e e0e0      	LDI  R30,LOW(0)
00044f 2ede      	MOV  R13,R30
000450 2eae      	MOV  R10,R30
000451 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000452 93aa      	ST   -Y,R26
000453 81a8      	LD   R26,Y
000454 30aa      	CPI  R26,LOW(0xA)
000455 f011      	BREQ _0x2000005
000456 14ac      	CP   R10,R12
000457 f048      	BRLO _0x2000004
                 _0x2000005:
000458 e0e0      	LDI  R30,LOW(0)
000459 93ea      	ST   -Y,R30
00045a 94d3      	INC  R13
00045b 2dad      	MOV  R26,R13
00045c dfdc      	RCALL _lcd_gotoxy
00045d 81a8      	LD   R26,Y
00045e 30aa      	CPI  R26,LOW(0xA)
00045f f409      	BRNE _0x2000007
000460 c053      	RJMP _0x20C0007
                 _0x2000007:
                 _0x2000004:
000461 94a3      	INC  R10
000462 9ad8      	SBI  0x1B,0
000463 81a8      	LD   R26,Y
000464 dfc8      	RCALL __lcd_write_data
000465 98d8      	CBI  0x1B,0
000466 c04d      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000467 93ba      	ST   -Y,R27
000468 93aa      	ST   -Y,R26
000469 931a      	ST   -Y,R17
                 _0x2000008:
00046a 940e 0afb 	CALL SUBOPT_0x36
00046c f019      	BREQ _0x200000A
00046d 2fa1      	MOV  R26,R17
00046e dfe3      	RCALL _lcd_putchar
00046f cffa      	RJMP _0x2000008
                 _0x200000A:
000470 c050      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000471 93ba      	ST   -Y,R27
000472 93aa      	ST   -Y,R26
000473 931a      	ST   -Y,R17
                 _0x200000B:
000474 81e9      	LDD  R30,Y+1
000475 81fa      	LDD  R31,Y+1+1
000476 9631      	ADIW R30,1
000477 83e9      	STD  Y+1,R30
000478 83fa      	STD  Y+1+1,R31
000479 9731      	SBIW R30,1
00047a 91e4      	LPM  R30,Z
00047b 2f1e      	MOV  R17,R30
00047c 30e0      	CPI  R30,0
00047d f019      	BREQ _0x200000D
00047e 2fa1      	MOV  R26,R17
00047f dfd2      	RCALL _lcd_putchar
000480 cff3      	RJMP _0x200000B
                 _0x200000D:
000481 c03f      	RJMP _0x20C0006
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000482 93aa      	ST   -Y,R26
000483 b3ea      	IN   R30,0x1A
000484 6fe0      	ORI  R30,LOW(0xF0)
000485 bbea      	OUT  0x1A,R30
000486 9ad2      	SBI  0x1A,2
000487 9ad0      	SBI  0x1A,0
000488 9ad1      	SBI  0x1A,1
000489 98da      	CBI  0x1B,2
00048a 98d8      	CBI  0x1B,0
00048b 98d9      	CBI  0x1B,1
00048c 80c8      	LDD  R12,Y+0
00048d 81e8      	LD   R30,Y
00048e 58e0      	SUBI R30,-LOW(128)
                +
00048f 93e0 0442+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000491 81e8      	LD   R30,Y
000492 54e0      	SUBI R30,-LOW(192)
                +
000493 93e0 0443+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000495 e1a4      	LDI  R26,LOW(20)
000496 e0b0      	LDI  R27,0
000497 940e 0bf1 	CALL _delay_ms
000499 940e 0b03 	CALL SUBOPT_0x37
00049b 940e 0b03 	CALL SUBOPT_0x37
00049d 940e 0b03 	CALL SUBOPT_0x37
00049f e2a0      	LDI  R26,LOW(32)
0004a0 df77      	RCALL __lcd_write_nibble_G100
                +
0004a1 ec88     +LDI R24 , LOW ( 200 )
0004a2 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
0004a3 9701     +SBIW R24 , 1
0004a4 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
0004a5 e2a8      	LDI  R26,LOW(40)
0004a6 df86      	RCALL __lcd_write_data
0004a7 e0a4      	LDI  R26,LOW(4)
0004a8 df84      	RCALL __lcd_write_data
0004a9 e8a5      	LDI  R26,LOW(133)
0004aa df82      	RCALL __lcd_write_data
0004ab e0a6      	LDI  R26,LOW(6)
0004ac df80      	RCALL __lcd_write_data
0004ad df98      	RCALL _lcd_clear
0004ae c005      	RJMP _0x20C0007
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0004af 93aa      	ST   -Y,R26
                 putchar0:
0004b0 9b5d           sbis usr,udre
0004b1 cffe           rjmp putchar0
0004b2 81e8           ld   r30,y
0004b3 b9ec           out  udr,r30
                 _0x20C0007:
0004b4 9621      	ADIW R28,1
0004b5 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
0004b6 93ba      	ST   -Y,R27
0004b7 93aa      	ST   -Y,R26
0004b8 931a      	ST   -Y,R17
                 _0x2020003:
0004b9 940e 0afb 	CALL SUBOPT_0x36
0004bb f019      	BREQ _0x2020005
0004bc 2fa1      	MOV  R26,R17
0004bd dff1      	RCALL _putchar
0004be cffa      	RJMP _0x2020003
                 _0x2020005:
0004bf e0aa      	LDI  R26,LOW(10)
0004c0 dfee      	RCALL _putchar
                 _0x20C0006:
0004c1 8118      	LDD  R17,Y+0
0004c2 9623      	ADIW R28,3
0004c3 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
0004c4 93ba      	ST   -Y,R27
0004c5 93aa      	ST   -Y,R26
0004c6 931a      	ST   -Y,R17
0004c7 930a      	ST   -Y,R16
0004c8 81aa      	LDD  R26,Y+2
0004c9 81bb      	LDD  R27,Y+2+1
0004ca 9612      	ADIW R26,2
0004cb 940e 0e28 	CALL __GETW1P
0004cd 9730      	SBIW R30,0
0004ce f129      	BREQ _0x2020010
0004cf 81aa      	LDD  R26,Y+2
0004d0 81bb      	LDD  R27,Y+2+1
0004d1 9614      	ADIW R26,4
0004d2 940e 0e28 	CALL __GETW1P
0004d4 018f      	MOVW R16,R30
0004d5 9730      	SBIW R30,0
0004d6 f061      	BREQ _0x2020012
                +
0004d7 3002     +CPI R16 , LOW ( 2 )
0004d8 e0e0     +LDI R30 , HIGH ( 2 )
0004d9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0004da f080      	BRLO _0x2020013
0004db 01f8      	MOVW R30,R16
0004dc 9731      	SBIW R30,1
0004dd 018f      	MOVW R16,R30
                +
0004de 81aa     +LDD R26 , Y + 2
0004df 81bb     +LDD R27 , Y + 2 + 1
0004e0 9614     +ADIW R26 , 4
0004e1 93ed     +ST X + , R30
0004e2 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0004e3 81aa      	LDD  R26,Y+2
0004e4 81bb      	LDD  R27,Y+2+1
0004e5 9612      	ADIW R26,2
0004e6 940e 0b0b 	CALL SUBOPT_0x38
0004e8 9731      	SBIW R30,1
0004e9 81ac      	LDD  R26,Y+4
0004ea 83a0      	STD  Z+0,R26
                 _0x2020013:
0004eb 81aa      	LDD  R26,Y+2
0004ec 81bb      	LDD  R27,Y+2+1
0004ed 940e 0e28 	CALL __GETW1P
0004ef 23ff      	TST  R31
0004f0 f012      	BRMI _0x2020014
0004f1 940e 0b0b 	CALL SUBOPT_0x38
                 _0x2020014:
0004f3 c006      	RJMP _0x2020015
                 _0x2020010:
0004f4 81aa      	LDD  R26,Y+2
0004f5 81bb      	LDD  R27,Y+2+1
0004f6 efef      	LDI  R30,LOW(65535)
0004f7 efff      	LDI  R31,HIGH(65535)
0004f8 93ed      	ST   X+,R30
0004f9 93fc      	ST   X,R31
                 _0x2020015:
0004fa 8119      	LDD  R17,Y+1
0004fb 8108      	LDD  R16,Y+0
0004fc 9625      	ADIW R28,5
0004fd 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0004fe 940e 0b11 	CALL SUBOPT_0x39
000500 e8e0      	LDI  R30,LOW(128)
000501 83ea      	STD  Y+2,R30
000502 e3ef      	LDI  R30,LOW(63)
000503 83eb      	STD  Y+3,R30
000504 940e 0e6d 	CALL __SAVELOCR4
000506 85ee      	LDD  R30,Y+14
000507 85ff      	LDD  R31,Y+14+1
000508 3fef      	CPI  R30,LOW(0xFFFF)
000509 efaf      	LDI  R26,HIGH(0xFFFF)
00050a 07fa      	CPC  R31,R26
00050b f449      	BRNE _0x2020019
00050c 85e8      	LDD  R30,Y+8
00050d 85f9      	LDD  R31,Y+8+1
00050e 93fa      	ST   -Y,R31
00050f 93ea      	ST   -Y,R30
                +
000510 e9a2     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
000511 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
000512 940e 08dc 	CALL _strcpyf
000514 c0b7      	RJMP _0x20C0005
                 _0x2020019:
000515 3fef      	CPI  R30,LOW(0x7FFF)
000516 e7af      	LDI  R26,HIGH(0x7FFF)
000517 07fa      	CPC  R31,R26
000518 f449      	BRNE _0x2020018
000519 85e8      	LDD  R30,Y+8
00051a 85f9      	LDD  R31,Y+8+1
00051b 93fa      	ST   -Y,R31
00051c 93ea      	ST   -Y,R30
                +
00051d e9a3     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
00051e e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
00051f 940e 08dc 	CALL _strcpyf
000521 c0aa      	RJMP _0x20C0005
                 _0x2020018:
000522 85ab      	LDD  R26,Y+11
000523 30a7      	CPI  R26,LOW(0x7)
000524 f010      	BRLO _0x202001B
000525 e0e6      	LDI  R30,LOW(6)
000526 87eb      	STD  Y+11,R30
                 _0x202001B:
000527 851b      	LDD  R17,Y+11
                 _0x202001C:
000528 2fe1      	MOV  R30,R17
000529 5011      	SUBI R17,1
00052a 30e0      	CPI  R30,0
00052b f019      	BREQ _0x202001E
00052c 940e 0b18 	CALL SUBOPT_0x3A
00052e cff9      	RJMP _0x202001C
                 _0x202001E:
                +
00052f 85ec     +LDD R30 , Y + 12
000530 85fd     +LDD R31 , Y + 12 + 1
000531 856e     +LDD R22 , Y + 12 + 2
000532 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000533 940e 0e62 	CALL __CPD10
000535 f421      	BRNE _0x202001F
000536 e030      	LDI  R19,LOW(0)
000537 940e 0b18 	CALL SUBOPT_0x3A
000539 c02d      	RJMP _0x2020020
                 _0x202001F:
00053a 853b      	LDD  R19,Y+11
00053b 940e 0b27 	CALL SUBOPT_0x3B
00053d f009      	BREQ PC+2
00053e f408      	BRCC PC+2
00053f c00b      	RJMP _0x2020021
000540 940e 0b18 	CALL SUBOPT_0x3A
                 _0x2020022:
000542 940e 0b27 	CALL SUBOPT_0x3B
000544 f028      	BRLO _0x2020024
000545 940e 0b32 	CALL SUBOPT_0x3C
000547 940e 0b37 	CALL SUBOPT_0x3D
000549 cff8      	RJMP _0x2020022
                 _0x2020024:
00054a c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
00054b 940e 0b27 	CALL SUBOPT_0x3B
00054d f440      	BRSH _0x2020028
00054e 940e 0b32 	CALL SUBOPT_0x3C
000550 940e 0b43 	CALL SUBOPT_0x3E
000552 940e 0b4a 	CALL SUBOPT_0x3F
000554 5031      	SUBI R19,LOW(1)
000555 cff5      	RJMP _0x2020026
                 _0x2020028:
000556 940e 0b18 	CALL SUBOPT_0x3A
                 _0x2020025:
                +
000558 85ec     +LDD R30 , Y + 12
000559 85fd     +LDD R31 , Y + 12 + 1
00055a 856e     +LDD R22 , Y + 12 + 2
00055b 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00055c 940e 0b4f 	CALL SUBOPT_0x40
00055e 940e 0b4a 	CALL SUBOPT_0x3F
000560 940e 0b27 	CALL SUBOPT_0x3B
000562 f020      	BRLO _0x2020029
000563 940e 0b32 	CALL SUBOPT_0x3C
000565 940e 0b37 	CALL SUBOPT_0x3D
                 _0x2020029:
                 _0x2020020:
000567 e010      	LDI  R17,LOW(0)
                 _0x202002A:
000568 85eb      	LDD  R30,Y+11
000569 17e1      	CP   R30,R17
00056a f1a8      	BRLO _0x202002C
                +
00056b 81ac     +LDD R26 , Y + 4
00056c 81bd     +LDD R27 , Y + 4 + 1
00056d 818e     +LDD R24 , Y + 4 + 2
00056e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00056f 940e 0b56 	CALL SUBOPT_0x41
000571 940e 0b4f 	CALL SUBOPT_0x40
000573 01df      	MOVW R26,R30
000574 01cb      	MOVW R24,R22
000575 940e 0933 	CALL _floor
                +
000577 83ec     +STD Y + 4 , R30
000578 83fd     +STD Y + 4 + 1 , R31
000579 836e     +STD Y + 4 + 2 , R22
00057a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00057b 940e 0b32 	CALL SUBOPT_0x3C
00057d 940e 0d3f 	CALL __DIVF21
00057f 940e 0c2e 	CALL __CFD1U
000581 2f0e      	MOV  R16,R30
000582 940e 0b5d 	CALL SUBOPT_0x42
000584 940e 0b64 	CALL SUBOPT_0x43
000586 27ff      	CLR  R31
000587 2766      	CLR  R22
000588 2777      	CLR  R23
000589 940e 0c67 	CALL __CDF1
                +
00058b 81ac     +LDD R26 , Y + 4
00058c 81bd     +LDD R27 , Y + 4 + 1
00058d 818e     +LDD R24 , Y + 4 + 2
00058e 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00058f 940e 0cf1 	CALL __MULF12
000591 940e 0b32 	CALL SUBOPT_0x3C
000593 940e 0b69 	CALL SUBOPT_0x44
000595 940e 0b4a 	CALL SUBOPT_0x3F
000597 2fe1      	MOV  R30,R17
000598 5f1f      	SUBI R17,-1
000599 30e0      	CPI  R30,0
00059a f669      	BRNE _0x202002A
00059b 940e 0b5d 	CALL SUBOPT_0x42
00059d e2ee      	LDI  R30,LOW(46)
00059e 93ec      	ST   X,R30
00059f cfc8      	RJMP _0x202002A
                 _0x202002C:
0005a0 940e 0b6e 	CALL SUBOPT_0x45
0005a2 9731      	SBIW R30,1
0005a3 85aa      	LDD  R26,Y+10
0005a4 83a0      	STD  Z+0,R26
0005a5 3030      	CPI  R19,0
0005a6 f42c      	BRGE _0x202002E
0005a7 9531      	NEG  R19
0005a8 85a8      	LDD  R26,Y+8
0005a9 85b9      	LDD  R27,Y+8+1
0005aa e2ed      	LDI  R30,LOW(45)
0005ab c003      	RJMP _0x2020113
                 _0x202002E:
0005ac 85a8      	LDD  R26,Y+8
0005ad 85b9      	LDD  R27,Y+8+1
0005ae e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
0005af 93ec      	ST   X,R30
0005b0 940e 0b6e 	CALL SUBOPT_0x45
0005b2 940e 0b6e 	CALL SUBOPT_0x45
0005b4 9731      	SBIW R30,1
0005b5 01bf      	MOVW R22,R30
0005b6 2fa3      	MOV  R26,R19
0005b7 e0ea      	LDI  R30,LOW(10)
0005b8 940e 0de2 	CALL __DIVB21
0005ba 5de0      	SUBI R30,-LOW(48)
0005bb 01db      	MOVW R26,R22
0005bc 93ec      	ST   X,R30
0005bd 940e 0b6e 	CALL SUBOPT_0x45
0005bf 9731      	SBIW R30,1
0005c0 01bf      	MOVW R22,R30
0005c1 2fa3      	MOV  R26,R19
0005c2 e0ea      	LDI  R30,LOW(10)
0005c3 940e 0e0c 	CALL __MODB21
0005c5 5de0      	SUBI R30,-LOW(48)
0005c6 01db      	MOVW R26,R22
0005c7 93ec      	ST   X,R30
0005c8 85a8      	LDD  R26,Y+8
0005c9 85b9      	LDD  R27,Y+8+1
0005ca e0e0      	LDI  R30,LOW(0)
0005cb 93ec      	ST   X,R30
                 _0x20C0005:
0005cc 940e 0e74 	CALL __LOADLOCR4
0005ce 9660      	ADIW R28,16
0005cf 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
0005d0 93ba      	ST   -Y,R27
0005d1 93aa      	ST   -Y,R26
0005d2 97ef      	SBIW R28,63
0005d3 9761      	SBIW R28,17
0005d4 940e 0e6b 	CALL __SAVELOCR6
0005d6 e010      	LDI  R17,0
                +
0005d7 01fe     +MOVW R30 , R28
0005d8 5ae8     +SUBI R30 , LOW ( - 88 )
0005d9 4fff     +SBCI R31 , HIGH ( - 88 )
0005da 9001     +LD R0 , Z +
0005db 81f0     +LD R31 , Z
0005dc 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005dd 87e8      	STD  Y+8,R30
0005de 87f9      	STD  Y+8+1,R31
                +
0005df 01fe     +MOVW R30 , R28
0005e0 5aea     +SUBI R30 , LOW ( - 86 )
0005e1 4fff     +SBCI R31 , HIGH ( - 86 )
0005e2 9001     +LD R0 , Z +
0005e3 81f0     +LD R31 , Z
0005e4 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005e5 83ee      	STD  Y+6,R30
0005e6 83ff      	STD  Y+6+1,R31
0005e7 81ae      	LDD  R26,Y+6
0005e8 81bf      	LDD  R27,Y+6+1
0005e9 e0e0      	LDI  R30,LOW(0)
0005ea e0f0      	LDI  R31,HIGH(0)
0005eb 93ed      	ST   X+,R30
0005ec 93fc      	ST   X,R31
                 _0x2020030:
0005ed 01de      	MOVW R26,R28
0005ee 5aa4      	SUBI R26,LOW(-(92))
0005ef 4fbf      	SBCI R27,HIGH(-(92))
0005f0 940e 0b0b 	CALL SUBOPT_0x38
0005f2 9731      	SBIW R30,1
0005f3 91e4      	LPM  R30,Z
0005f4 2f2e      	MOV  R18,R30
0005f5 30e0      	CPI  R30,0
0005f6 f409      	BRNE PC+2
0005f7 c1e9      	RJMP _0x2020032
0005f8 2fe1      	MOV  R30,R17
0005f9 30e0      	CPI  R30,0
0005fa f439      	BRNE _0x2020036
0005fb 3225      	CPI  R18,37
0005fc f411      	BRNE _0x2020037
0005fd e011      	LDI  R17,LOW(1)
0005fe c002      	RJMP _0x2020038
                 _0x2020037:
0005ff 940e 0b74 	CALL SUBOPT_0x46
                 _0x2020038:
000601 c1de      	RJMP _0x2020035
                 _0x2020036:
000602 30e1      	CPI  R30,LOW(0x1)
000603 f4c1      	BRNE _0x2020039
000604 3225      	CPI  R18,37
000605 f419      	BRNE _0x202003A
000606 940e 0b74 	CALL SUBOPT_0x46
000608 c1d6      	RJMP _0x2020114
                 _0x202003A:
000609 e012      	LDI  R17,LOW(2)
00060a e0e0      	LDI  R30,LOW(0)
00060b 8bed      	STD  Y+21,R30
00060c e000      	LDI  R16,LOW(0)
00060d 322d      	CPI  R18,45
00060e f411      	BRNE _0x202003B
00060f e001      	LDI  R16,LOW(1)
000610 c1cf      	RJMP _0x2020035
                 _0x202003B:
000611 322b      	CPI  R18,43
000612 f419      	BRNE _0x202003C
000613 e2eb      	LDI  R30,LOW(43)
000614 8bed      	STD  Y+21,R30
000615 c1ca      	RJMP _0x2020035
                 _0x202003C:
000616 3220      	CPI  R18,32
000617 f419      	BRNE _0x202003D
000618 e2e0      	LDI  R30,LOW(32)
000619 8bed      	STD  Y+21,R30
00061a c1c5      	RJMP _0x2020035
                 _0x202003D:
00061b c002      	RJMP _0x202003E
                 _0x2020039:
00061c 30e2      	CPI  R30,LOW(0x2)
00061d f439      	BRNE _0x202003F
                 _0x202003E:
00061e e050      	LDI  R21,LOW(0)
00061f e013      	LDI  R17,LOW(3)
000620 3320      	CPI  R18,48
000621 f411      	BRNE _0x2020040
000622 6800      	ORI  R16,LOW(128)
000623 c1bc      	RJMP _0x2020035
                 _0x2020040:
000624 c002      	RJMP _0x2020041
                 _0x202003F:
000625 30e3      	CPI  R30,LOW(0x3)
000626 f491      	BRNE _0x2020042
                 _0x2020041:
000627 3320      	CPI  R18,48
000628 f010      	BRLO _0x2020044
000629 332a      	CPI  R18,58
00062a f008      	BRLO _0x2020045
                 _0x2020044:
00062b c007      	RJMP _0x2020043
                 _0x2020045:
00062c e0aa      	LDI  R26,LOW(10)
00062d 9f5a      	MUL  R21,R26
00062e 2d50      	MOV  R21,R0
00062f 2fe2      	MOV  R30,R18
000630 53e0      	SUBI R30,LOW(48)
000631 0f5e      	ADD  R21,R30
000632 c1ad      	RJMP _0x2020035
                 _0x2020043:
000633 e040      	LDI  R20,LOW(0)
000634 322e      	CPI  R18,46
000635 f411      	BRNE _0x2020046
000636 e014      	LDI  R17,LOW(4)
000637 c1a8      	RJMP _0x2020035
                 _0x2020046:
000638 c00f      	RJMP _0x2020047
                 _0x2020042:
000639 30e4      	CPI  R30,LOW(0x4)
00063a f499      	BRNE _0x2020049
00063b 3320      	CPI  R18,48
00063c f010      	BRLO _0x202004B
00063d 332a      	CPI  R18,58
00063e f008      	BRLO _0x202004C
                 _0x202004B:
00063f c008      	RJMP _0x202004A
                 _0x202004C:
000640 6200      	ORI  R16,LOW(32)
000641 e0aa      	LDI  R26,LOW(10)
000642 9f4a      	MUL  R20,R26
000643 2d40      	MOV  R20,R0
000644 2fe2      	MOV  R30,R18
000645 53e0      	SUBI R30,LOW(48)
000646 0f4e      	ADD  R20,R30
000647 c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
000648 362c      	CPI  R18,108
000649 f419      	BRNE _0x202004D
00064a 6002      	ORI  R16,LOW(2)
00064b e015      	LDI  R17,LOW(5)
00064c c193      	RJMP _0x2020035
                 _0x202004D:
00064d c003      	RJMP _0x202004E
                 _0x2020049:
00064e 30e5      	CPI  R30,LOW(0x5)
00064f f009      	BREQ PC+2
000650 c18f      	RJMP _0x2020035
                 _0x202004E:
000651 2fe2      	MOV  R30,R18
000652 36e3      	CPI  R30,LOW(0x63)
000653 f459      	BRNE _0x2020053
000654 940e 0b7b 	CALL SUBOPT_0x47
000656 940e 0b82 	CALL SUBOPT_0x48
000658 940e 0b7b 	CALL SUBOPT_0x47
00065a 81a4      	LDD  R26,Z+4
00065b 93aa      	ST   -Y,R26
00065c 940e 0b89 	CALL SUBOPT_0x49
00065e c180      	RJMP _0x2020054
                 _0x2020053:
00065f 34e5      	CPI  R30,LOW(0x45)
000660 f011      	BREQ _0x2020057
000661 36e5      	CPI  R30,LOW(0x65)
000662 f409      	BRNE _0x2020058
                 _0x2020057:
000663 c003      	RJMP _0x2020059
                 _0x2020058:
000664 36e6      	CPI  R30,LOW(0x66)
000665 f009      	BREQ PC+2
000666 c048      	RJMP _0x202005A
                 _0x2020059:
000667 01fe      	MOVW R30,R28
000668 9676      	ADIW R30,22
000669 87ee      	STD  Y+14,R30
00066a 87ff      	STD  Y+14+1,R31
00066b 940e 0b8f 	CALL SUBOPT_0x4A
00066d 940e 0e2c 	CALL __GETD1P
00066f 940e 0b96 	CALL SUBOPT_0x4B
000671 940e 0b9b 	CALL SUBOPT_0x4C
000673 85ad      	LDD  R26,Y+13
000674 23aa      	TST  R26
000675 f032      	BRMI _0x202005B
000676 89ad      	LDD  R26,Y+21
000677 32ab      	CPI  R26,LOW(0x2B)
000678 f059      	BREQ _0x202005D
000679 32a0      	CPI  R26,LOW(0x20)
00067a f081      	BREQ _0x202005F
00067b c017      	RJMP _0x2020060
                 _0x202005B:
00067c 940e 0b9d 	CALL SUBOPT_0x4D
00067e 940e 0bfb 	CALL __ANEGF1
000680 940e 0b96 	CALL SUBOPT_0x4B
000682 e2ed      	LDI  R30,LOW(45)
000683 8bed      	STD  Y+21,R30
                 _0x202005D:
000684 ff07      	SBRS R16,7
000685 c005      	RJMP _0x2020061
000686 89ed      	LDD  R30,Y+21
000687 93ea      	ST   -Y,R30
000688 940e 0b89 	CALL SUBOPT_0x49
00068a c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
00068b 85ee      	LDD  R30,Y+14
00068c 85ff      	LDD  R31,Y+14+1
00068d 9631      	ADIW R30,1
00068e 87ee      	STD  Y+14,R30
00068f 87ff      	STD  Y+14+1,R31
000690 9731      	SBIW R30,1
000691 89ad      	LDD  R26,Y+21
000692 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
000693 ff05      	SBRS R16,5
000694 e046      	LDI  R20,LOW(6)
000695 3626      	CPI  R18,102
000696 f451      	BRNE _0x2020064
000697 940e 0b9d 	CALL SUBOPT_0x4D
000699 940e 0e46 	CALL __PUTPARD1
00069b 934a      	ST   -Y,R20
00069c 89ab      	LDD  R26,Y+19
00069d 89bc      	LDD  R27,Y+19+1
00069e 940e 081e 	CALL _ftoa
0006a0 c009      	RJMP _0x2020065
                 _0x2020064:
0006a1 940e 0b9d 	CALL SUBOPT_0x4D
0006a3 940e 0e46 	CALL __PUTPARD1
0006a5 934a      	ST   -Y,R20
0006a6 932a      	ST   -Y,R18
0006a7 89ac      	LDD  R26,Y+20
0006a8 89bd      	LDD  R27,Y+20+1
0006a9 de54      	RCALL __ftoe_G101
                 _0x2020065:
0006aa 01fe      	MOVW R30,R28
0006ab 9676      	ADIW R30,22
0006ac 940e 0ba2 	CALL SUBOPT_0x4E
0006ae c01e      	RJMP _0x2020066
                 _0x202005A:
0006af 37e3      	CPI  R30,LOW(0x73)
0006b0 f439      	BRNE _0x2020068
0006b1 940e 0b9b 	CALL SUBOPT_0x4C
0006b3 940e 0baa 	CALL SUBOPT_0x4F
0006b5 940e 0ba2 	CALL SUBOPT_0x4E
0006b7 c00e      	RJMP _0x2020069
                 _0x2020068:
0006b8 37e0      	CPI  R30,LOW(0x70)
0006b9 f4c1      	BRNE _0x202006B
0006ba 940e 0b9b 	CALL SUBOPT_0x4C
0006bc 940e 0baa 	CALL SUBOPT_0x4F
0006be 87ee      	STD  Y+14,R30
0006bf 87ff      	STD  Y+14+1,R31
0006c0 85ae      	LDD  R26,Y+14
0006c1 85bf      	LDD  R27,Y+14+1
0006c2 940e 08f5 	CALL _strlenf
0006c4 2f1e      	MOV  R17,R30
0006c5 6008      	ORI  R16,LOW(8)
                 _0x2020069:
0006c6 770f      	ANDI R16,LOW(127)
0006c7 3040      	CPI  R20,0
0006c8 f011      	BREQ _0x202006D
0006c9 1741      	CP   R20,R17
0006ca f008      	BRLO _0x202006E
                 _0x202006D:
0006cb c001      	RJMP _0x202006C
                 _0x202006E:
0006cc 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
0006cd e040      	LDI  R20,LOW(0)
0006ce e0e0      	LDI  R30,LOW(0)
0006cf 8bec      	STD  Y+20,R30
0006d0 e030      	LDI  R19,LOW(0)
0006d1 c06d      	RJMP _0x202006F
                 _0x202006B:
0006d2 36e4      	CPI  R30,LOW(0x64)
0006d3 f011      	BREQ _0x2020072
0006d4 36e9      	CPI  R30,LOW(0x69)
0006d5 f411      	BRNE _0x2020073
                 _0x2020072:
0006d6 6004      	ORI  R16,LOW(4)
0006d7 c002      	RJMP _0x2020074
                 _0x2020073:
0006d8 37e5      	CPI  R30,LOW(0x75)
0006d9 f4a1      	BRNE _0x2020075
                 _0x2020074:
0006da e0ea      	LDI  R30,LOW(10)
0006db 8bec      	STD  Y+20,R30
0006dc ff01      	SBRS R16,1
0006dd c008      	RJMP _0x2020076
                +
0006de e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0006df ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0006e0 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0006e1 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0006e2 940e 0baf 	CALL SUBOPT_0x50
0006e4 e01a      	LDI  R17,LOW(10)
0006e5 c022      	RJMP _0x2020077
                 _0x2020076:
                +
0006e6 e1e0     +LDI R30 , LOW ( 0x2710 )
0006e7 e2f7     +LDI R31 , HIGH ( 0x2710 )
0006e8 e060     +LDI R22 , BYTE3 ( 0x2710 )
0006e9 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0006ea 940e 0baf 	CALL SUBOPT_0x50
0006ec e015      	LDI  R17,LOW(5)
0006ed c01a      	RJMP _0x2020077
                 _0x2020075:
0006ee 35e8      	CPI  R30,LOW(0x58)
0006ef f411      	BRNE _0x2020079
0006f0 6008      	ORI  R16,LOW(8)
0006f1 c003      	RJMP _0x202007A
                 _0x2020079:
0006f2 37e8      	CPI  R30,LOW(0x78)
0006f3 f009      	BREQ PC+2
0006f4 c0ea      	RJMP _0x20200B8
                 _0x202007A:
0006f5 e1e0      	LDI  R30,LOW(16)
0006f6 8bec      	STD  Y+20,R30
0006f7 ff01      	SBRS R16,1
0006f8 c008      	RJMP _0x202007C
                +
0006f9 e0e0     +LDI R30 , LOW ( 0x10000000 )
0006fa e0f0     +LDI R31 , HIGH ( 0x10000000 )
0006fb e060     +LDI R22 , BYTE3 ( 0x10000000 )
0006fc e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0006fd 940e 0baf 	CALL SUBOPT_0x50
0006ff e018      	LDI  R17,LOW(8)
000700 c007      	RJMP _0x2020077
                 _0x202007C:
                +
000701 e0e0     +LDI R30 , LOW ( 0x1000 )
000702 e1f0     +LDI R31 , HIGH ( 0x1000 )
000703 e060     +LDI R22 , BYTE3 ( 0x1000 )
000704 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
000705 940e 0baf 	CALL SUBOPT_0x50
000707 e014      	LDI  R17,LOW(4)
                 _0x2020077:
000708 3040      	CPI  R20,0
000709 f011      	BREQ _0x202007D
00070a 770f      	ANDI R16,LOW(127)
00070b c001      	RJMP _0x202007E
                 _0x202007D:
00070c e041      	LDI  R20,LOW(1)
                 _0x202007E:
00070d ff01      	SBRS R16,1
00070e c008      	RJMP _0x202007F
00070f 940e 0b9b 	CALL SUBOPT_0x4C
000711 940e 0b8f 	CALL SUBOPT_0x4A
000713 9614      	ADIW R26,4
000714 940e 0e2c 	CALL __GETD1P
000716 c00f      	RJMP _0x2020115
                 _0x202007F:
000717 ff02      	SBRS R16,2
000718 c007      	RJMP _0x2020081
000719 940e 0b9b 	CALL SUBOPT_0x4C
00071b 940e 0baa 	CALL SUBOPT_0x4F
00071d 940e 0dcf 	CALL __CWD1
00071f c006      	RJMP _0x2020115
                 _0x2020081:
000720 940e 0b9b 	CALL SUBOPT_0x4C
000722 940e 0baa 	CALL SUBOPT_0x4F
000724 2766      	CLR  R22
000725 2777      	CLR  R23
                 _0x2020115:
                +
000726 87ea     +STD Y + 10 , R30
000727 87fb     +STD Y + 10 + 1 , R31
000728 876c     +STD Y + 10 + 2 , R22
000729 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00072a ff02      	SBRS R16,2
00072b c012      	RJMP _0x2020083
00072c 85ad      	LDD  R26,Y+13
00072d 23aa      	TST  R26
00072e f442      	BRPL _0x2020084
00072f 940e 0b9d 	CALL SUBOPT_0x4D
000731 940e 0db7 	CALL __ANEGD1
000733 940e 0b96 	CALL SUBOPT_0x4B
000735 e2ed      	LDI  R30,LOW(45)
000736 8bed      	STD  Y+21,R30
                 _0x2020084:
000737 89ed      	LDD  R30,Y+21
000738 30e0      	CPI  R30,0
000739 f019      	BREQ _0x2020085
00073a 5f1f      	SUBI R17,-LOW(1)
00073b 5f4f      	SUBI R20,-LOW(1)
00073c c001      	RJMP _0x2020086
                 _0x2020085:
00073d 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
00073e 2f34      	MOV  R19,R20
                 _0x202006F:
00073f fd00      	SBRC R16,0
000740 c014      	RJMP _0x2020087
                 _0x2020088:
000741 1715      	CP   R17,R21
000742 f410      	BRSH _0x202008B
000743 1735      	CP   R19,R21
000744 f008      	BRLO _0x202008C
                 _0x202008B:
000745 c00f      	RJMP _0x202008A
                 _0x202008C:
000746 ff07      	SBRS R16,7
000747 c008      	RJMP _0x202008D
000748 ff02      	SBRS R16,2
000749 c004      	RJMP _0x202008E
00074a 7f0b      	ANDI R16,LOW(251)
00074b 892d      	LDD  R18,Y+21
00074c 5011      	SUBI R17,LOW(1)
00074d c001      	RJMP _0x202008F
                 _0x202008E:
00074e e320      	LDI  R18,LOW(48)
                 _0x202008F:
00074f c001      	RJMP _0x2020090
                 _0x202008D:
000750 e220      	LDI  R18,LOW(32)
                 _0x2020090:
000751 940e 0b74 	CALL SUBOPT_0x46
000753 5051      	SUBI R21,LOW(1)
000754 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000755 1714      	CP   R17,R20
000756 f490      	BRSH _0x2020093
000757 6100      	ORI  R16,LOW(16)
000758 ff02      	SBRS R16,2
000759 c006      	RJMP _0x2020094
00075a 940e 0bb4 	CALL SUBOPT_0x51
00075c f009      	BREQ _0x2020095
00075d 5051      	SUBI R21,LOW(1)
                 _0x2020095:
00075e 5011      	SUBI R17,LOW(1)
00075f 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000760 e3e0      	LDI  R30,LOW(48)
000761 93ea      	ST   -Y,R30
000762 940e 0b89 	CALL SUBOPT_0x49
000764 3050      	CPI  R21,0
000765 f009      	BREQ _0x2020096
000766 5051      	SUBI R21,LOW(1)
                 _0x2020096:
000767 5041      	SUBI R20,LOW(1)
000768 cfec      	RJMP _0x2020091
                 _0x2020093:
000769 2f31      	MOV  R19,R17
00076a 89ec      	LDD  R30,Y+20
00076b 30e0      	CPI  R30,0
00076c f4b9      	BRNE _0x2020097
                 _0x2020098:
00076d 3030      	CPI  R19,0
00076e f0a1      	BREQ _0x202009A
00076f ff03      	SBRS R16,3
000770 c006      	RJMP _0x202009B
000771 85ee      	LDD  R30,Y+14
000772 85ff      	LDD  R31,Y+14+1
000773 9125      	LPM  R18,Z+
000774 87ee      	STD  Y+14,R30
000775 87ff      	STD  Y+14+1,R31
000776 c005      	RJMP _0x202009C
                 _0x202009B:
000777 85ae      	LDD  R26,Y+14
000778 85bf      	LDD  R27,Y+14+1
000779 912d      	LD   R18,X+
00077a 87ae      	STD  Y+14,R26
00077b 87bf      	STD  Y+14+1,R27
                 _0x202009C:
00077c 940e 0b74 	CALL SUBOPT_0x46
00077e 3050      	CPI  R21,0
00077f f009      	BREQ _0x202009D
000780 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000781 5031      	SUBI R19,LOW(1)
000782 cfea      	RJMP _0x2020098
                 _0x202009A:
000783 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
000784 940e 0bc6 	CALL SUBOPT_0x52
000786 940e 0de7 	CALL __DIVD21U
000788 2f2e      	MOV  R18,R30
000789 302a      	CPI  R18,10
00078a f030      	BRLO _0x20200A2
00078b ff03      	SBRS R16,3
00078c c002      	RJMP _0x20200A3
00078d 5c29      	SUBI R18,-LOW(55)
00078e c001      	RJMP _0x20200A4
                 _0x20200A3:
00078f 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000790 c001      	RJMP _0x20200A5
                 _0x20200A2:
000791 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000792 fd04      	SBRC R16,4
000793 c021      	RJMP _0x20200A7
000794 3321      	CPI  R18,49
000795 f460      	BRSH _0x20200A9
                +
000796 89a8     +LDD R26 , Y + 16
000797 89b9     +LDD R27 , Y + 16 + 1
000798 898a     +LDD R24 , Y + 16 + 2
000799 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00079a 30a1     +CPI R26 , LOW ( 0x1 )
00079b e0e0     +LDI R30 , HIGH ( 0x1 )
00079c 07be     +CPC R27 , R30
00079d e0e0     +LDI R30 , BYTE3 ( 0x1 )
00079e 078e     +CPC R24 , R30
00079f e0e0     +LDI R30 , BYTE4 ( 0x1 )
0007a0 079e     +CPC R25 , R30
                 	__CPD2N 0x1
0007a1 f409      	BRNE _0x20200A8
                 _0x20200A9:
0007a2 c00b      	RJMP _0x20200AB
                 _0x20200A8:
0007a3 1743      	CP   R20,R19
0007a4 f440      	BRSH _0x2020116
0007a5 1753      	CP   R21,R19
0007a6 f010      	BRLO _0x20200AE
0007a7 ff00      	SBRS R16,0
0007a8 c001      	RJMP _0x20200AF
                 _0x20200AE:
0007a9 c010      	RJMP _0x20200AD
                 _0x20200AF:
0007aa e220      	LDI  R18,LOW(32)
0007ab ff07      	SBRS R16,7
0007ac c008      	RJMP _0x20200B0
                 _0x2020116:
0007ad e320      	LDI  R18,LOW(48)
                 _0x20200AB:
0007ae 6100      	ORI  R16,LOW(16)
0007af ff02      	SBRS R16,2
0007b0 c004      	RJMP _0x20200B1
0007b1 940e 0bb4 	CALL SUBOPT_0x51
0007b3 f009      	BREQ _0x20200B2
0007b4 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
0007b5 940e 0b74 	CALL SUBOPT_0x46
0007b7 3050      	CPI  R21,0
0007b8 f009      	BREQ _0x20200B3
0007b9 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
0007ba 5031      	SUBI R19,LOW(1)
0007bb 940e 0bc6 	CALL SUBOPT_0x52
0007bd 940e 0e18 	CALL __MODD21U
0007bf 940e 0b96 	CALL SUBOPT_0x4B
0007c1 89ec      	LDD  R30,Y+20
                +
0007c2 89a8     +LDD R26 , Y + 16
0007c3 89b9     +LDD R27 , Y + 16 + 1
0007c4 898a     +LDD R24 , Y + 16 + 2
0007c5 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
0007c6 27ff      	CLR  R31
0007c7 2766      	CLR  R22
0007c8 2777      	CLR  R23
0007c9 940e 0de7 	CALL __DIVD21U
0007cb 940e 0baf 	CALL SUBOPT_0x50
                +
0007cd 89e8     +LDD R30 , Y + 16
0007ce 89f9     +LDD R31 , Y + 16 + 1
0007cf 896a     +LDD R22 , Y + 16 + 2
0007d0 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
0007d1 940e 0e62 	CALL __CPD10
0007d3 f009      	BREQ _0x20200A1
0007d4 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
0007d5 ff00      	SBRS R16,0
0007d6 c008      	RJMP _0x20200B4
                 _0x20200B5:
0007d7 3050      	CPI  R21,0
0007d8 f031      	BREQ _0x20200B7
0007d9 5051      	SUBI R21,LOW(1)
0007da e2e0      	LDI  R30,LOW(32)
0007db 93ea      	ST   -Y,R30
0007dc 940e 0b89 	CALL SUBOPT_0x49
0007de cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0007df e010      	LDI  R17,LOW(0)
                 _0x2020035:
0007e0 ce0c      	RJMP _0x2020030
                 _0x2020032:
0007e1 81ae      	LDD  R26,Y+6
0007e2 81bf      	LDD  R27,Y+6+1
0007e3 940e 0e28 	CALL __GETW1P
0007e5 940e 0e72 	CALL __LOADLOCR6
0007e7 96ef      	ADIW R28,63
0007e8 966f      	ADIW R28,31
0007e9 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007ea 92ff      	PUSH R15
0007eb 2ef8      	MOV  R15,R24
0007ec 9726      	SBIW R28,6
0007ed 940e 0e6d 	CALL __SAVELOCR4
0007ef 940e 0bcf 	CALL SUBOPT_0x53
0007f1 9730      	SBIW R30,0
0007f2 f419      	BRNE _0x20200B9
0007f3 efef      	LDI  R30,LOW(65535)
0007f4 efff      	LDI  R31,HIGH(65535)
0007f5 c023      	RJMP _0x20C0004
                 _0x20200B9:
0007f6 01de      	MOVW R26,R28
0007f7 9616      	ADIW R26,6
0007f8 940e 0da4 	CALL __ADDW2R15
0007fa 018d      	MOVW R16,R26
0007fb 940e 0bcf 	CALL SUBOPT_0x53
0007fd 83ee      	STD  Y+6,R30
0007fe 83ff      	STD  Y+6+1,R31
0007ff e0e0      	LDI  R30,LOW(0)
000800 87e8      	STD  Y+8,R30
000801 87e9      	STD  Y+8+1,R30
000802 01de      	MOVW R26,R28
000803 961a      	ADIW R26,10
000804 940e 0da4 	CALL __ADDW2R15
000806 940e 0e28 	CALL __GETW1P
000808 93fa      	ST   -Y,R31
000809 93ea      	ST   -Y,R30
00080a 931a      	ST   -Y,R17
00080b 930a      	ST   -Y,R16
00080c ece4      	LDI  R30,LOW(_put_buff_G101)
00080d e0f4      	LDI  R31,HIGH(_put_buff_G101)
00080e 93fa      	ST   -Y,R31
00080f 93ea      	ST   -Y,R30
000810 01de      	MOVW R26,R28
000811 961a      	ADIW R26,10
000812 ddbd      	RCALL __print_G101
000813 019f      	MOVW R18,R30
000814 81ae      	LDD  R26,Y+6
000815 81bf      	LDD  R27,Y+6+1
000816 e0e0      	LDI  R30,LOW(0)
000817 93ec      	ST   X,R30
000818 01f9      	MOVW R30,R18
                 _0x20C0004:
000819 940e 0e74 	CALL __LOADLOCR4
00081b 962a      	ADIW R28,10
00081c 90ff      	POP  R15
00081d 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
00081e 940e 0b11 	CALL SUBOPT_0x39
000820 e0e0      	LDI  R30,LOW(0)
000821 83ea      	STD  Y+2,R30
000822 e3ef      	LDI  R30,LOW(63)
000823 83eb      	STD  Y+3,R30
000824 931a      	ST   -Y,R17
000825 930a      	ST   -Y,R16
000826 85eb      	LDD  R30,Y+11
000827 85fc      	LDD  R31,Y+11+1
000828 3fef      	CPI  R30,LOW(0xFFFF)
000829 efaf      	LDI  R26,HIGH(0xFFFF)
00082a 07fa      	CPC  R31,R26
00082b f439      	BRNE _0x204000D
00082c 940e 0bd6 	CALL SUBOPT_0x54
                +
00082e e9aa     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
00082f e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
000830 940e 08dc 	CALL _strcpyf
000832 c0a5      	RJMP _0x20C0003
                 _0x204000D:
000833 3fef      	CPI  R30,LOW(0x7FFF)
000834 e7af      	LDI  R26,HIGH(0x7FFF)
000835 07fa      	CPC  R31,R26
000836 f439      	BRNE _0x204000C
000837 940e 0bd6 	CALL SUBOPT_0x54
                +
000839 e9ab     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
00083a e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
00083b 940e 08dc 	CALL _strcpyf
00083d c09a      	RJMP _0x20C0003
                 _0x204000C:
00083e 85ac      	LDD  R26,Y+12
00083f 23aa      	TST  R26
000840 f452      	BRPL _0x204000F
000841 940e 097b 	CALL SUBOPT_0x5
000843 940e 0bfb 	CALL __ANEGF1
000845 940e 0980 	CALL SUBOPT_0x6
000847 940e 0bdb 	CALL SUBOPT_0x55
000849 e2ed      	LDI  R30,LOW(45)
00084a 93ec      	ST   X,R30
                 _0x204000F:
00084b 85a8      	LDD  R26,Y+8
00084c 30a7      	CPI  R26,LOW(0x7)
00084d f010      	BRLO _0x2040010
00084e e0e6      	LDI  R30,LOW(6)
00084f 87e8      	STD  Y+8,R30
                 _0x2040010:
000850 8518      	LDD  R17,Y+8
                 _0x2040011:
000851 2fe1      	MOV  R30,R17
000852 5011      	SUBI R17,1
000853 30e0      	CPI  R30,0
000854 f039      	BREQ _0x2040013
000855 940e 0be2 	CALL SUBOPT_0x56
000857 940e 0b56 	CALL SUBOPT_0x41
000859 940e 0be7 	CALL SUBOPT_0x57
00085b cff5      	RJMP _0x2040011
                 _0x2040013:
00085c 940e 0bec 	CALL SUBOPT_0x58
00085e 940e 0ca1 	CALL __ADDF12
000860 940e 0980 	CALL SUBOPT_0x6
000862 e010      	LDI  R17,LOW(0)
                +
000863 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000864 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000865 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000866 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
000867 940e 0be7 	CALL SUBOPT_0x57
                 _0x2040014:
000869 940e 0bec 	CALL SUBOPT_0x58
00086b 940e 0d84 	CALL __CMPF12
00086d f088      	BRLO _0x2040016
00086e 940e 0be2 	CALL SUBOPT_0x56
000870 940e 0b43 	CALL SUBOPT_0x3E
000872 940e 0be7 	CALL SUBOPT_0x57
000874 5f1f      	SUBI R17,-LOW(1)
000875 3217      	CPI  R17,39
000876 f038      	BRLO _0x2040017
000877 940e 0bd6 	CALL SUBOPT_0x54
                +
000879 e9af     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
00087a e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
00087b 940e 08dc 	CALL _strcpyf
00087d c05a      	RJMP _0x20C0003
                 _0x2040017:
00087e cfea      	RJMP _0x2040014
                 _0x2040016:
00087f 3010      	CPI  R17,0
000880 f429      	BRNE _0x2040018
000881 940e 0bdb 	CALL SUBOPT_0x55
000883 e3e0      	LDI  R30,LOW(48)
000884 93ec      	ST   X,R30
000885 c029      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
000886 2fe1      	MOV  R30,R17
000887 5011      	SUBI R17,1
000888 30e0      	CPI  R30,0
000889 f129      	BREQ _0x204001C
00088a 940e 0be2 	CALL SUBOPT_0x56
00088c 940e 0b56 	CALL SUBOPT_0x41
00088e 940e 0b4f 	CALL SUBOPT_0x40
000890 01df      	MOVW R26,R30
000891 01cb      	MOVW R24,R22
000892 940e 0933 	CALL _floor
000894 940e 0be7 	CALL SUBOPT_0x57
000896 940e 0bec 	CALL SUBOPT_0x58
000898 940e 0d3f 	CALL __DIVF21
00089a 940e 0c2e 	CALL __CFD1U
00089c 2f0e      	MOV  R16,R30
00089d 940e 0bdb 	CALL SUBOPT_0x55
00089f 940e 0b64 	CALL SUBOPT_0x43
0008a1 e0f0      	LDI  R31,0
0008a2 940e 0be2 	CALL SUBOPT_0x56
0008a4 940e 0af0 	CALL SUBOPT_0x34
0008a6 940e 0cf1 	CALL __MULF12
0008a8 940e 099e 	CALL SUBOPT_0xC
0008aa 940e 0b69 	CALL SUBOPT_0x44
0008ac 940e 0980 	CALL SUBOPT_0x6
0008ae cfd7      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
0008af 85e8      	LDD  R30,Y+8
0008b0 30e0      	CPI  R30,0
0008b1 f111      	BREQ _0x20C0002
0008b2 940e 0bdb 	CALL SUBOPT_0x55
0008b4 e2ee      	LDI  R30,LOW(46)
0008b5 93ec      	ST   X,R30
                 _0x204001E:
0008b6 85e8      	LDD  R30,Y+8
0008b7 50e1      	SUBI R30,LOW(1)
0008b8 87e8      	STD  Y+8,R30
0008b9 5fef      	SUBI R30,-LOW(1)
0008ba f0c9      	BREQ _0x2040020
0008bb 940e 099e 	CALL SUBOPT_0xC
0008bd 940e 0b43 	CALL SUBOPT_0x3E
0008bf 940e 0980 	CALL SUBOPT_0x6
0008c1 940e 097b 	CALL SUBOPT_0x5
0008c3 940e 0c2e 	CALL __CFD1U
0008c5 2f0e      	MOV  R16,R30
0008c6 940e 0bdb 	CALL SUBOPT_0x55
0008c8 940e 0b64 	CALL SUBOPT_0x43
0008ca e0f0      	LDI  R31,0
0008cb 940e 099e 	CALL SUBOPT_0xC
0008cd 940e 0af0 	CALL SUBOPT_0x34
0008cf 940e 0b69 	CALL SUBOPT_0x44
0008d1 940e 0980 	CALL SUBOPT_0x6
0008d3 cfe2      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
0008d4 81ae      	LDD  R26,Y+6
0008d5 81bf      	LDD  R27,Y+6+1
0008d6 e0e0      	LDI  R30,LOW(0)
0008d7 93ec      	ST   X,R30
                 _0x20C0003:
0008d8 8119      	LDD  R17,Y+1
0008d9 8108      	LDD  R16,Y+0
0008da 962d      	ADIW R28,13
0008db 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0008dc 93ba      	ST   -Y,R27
0008dd 93aa      	ST   -Y,R26
0008de 91e9          ld   r30,y+
0008df 91f9          ld   r31,y+
0008e0 91a9          ld   r26,y+
0008e1 91b9          ld   r27,y+
0008e2 01cd          movw r24,r26
                 strcpyf0:
0008e3 9005      	lpm  r0,z+
0008e4 920d          st   x+,r0
0008e5 2000          tst  r0
0008e6 f7e1          brne strcpyf0
0008e7 01fc          movw r30,r24
0008e8 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0008e9 93ba      	ST   -Y,R27
0008ea 93aa      	ST   -Y,R26
0008eb 91a9          ld   r26,y+
0008ec 91b9          ld   r27,y+
0008ed 27ee          clr  r30
0008ee 27ff          clr  r31
                 strlen0:
0008ef 916d          ld   r22,x+
0008f0 2366          tst  r22
0008f1 f011          breq strlen1
0008f2 9631          adiw r30,1
0008f3 cffb          rjmp strlen0
                 strlen1:
0008f4 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0008f5 93ba      	ST   -Y,R27
0008f6 93aa      	ST   -Y,R26
0008f7 27aa          clr  r26
0008f8 27bb          clr  r27
0008f9 91e9          ld   r30,y+
0008fa 91f9          ld   r31,y+
                 strlenf0:
0008fb 9005      	lpm  r0,z+
0008fc 2000          tst  r0
0008fd f011          breq strlenf1
0008fe 9611          adiw r26,1
0008ff cffb          rjmp strlenf0
                 strlenf1:
000900 01fd          movw r30,r26
000901 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
000902 940e 0e4b 	CALL __PUTPARD2
000904 817b         ldd  r23,y+3
000905 816a         ldd  r22,y+2
000906 81f9         ldd  r31,y+1
000907 81e8         ld   r30,y
000908 fb77         bst  r23,7
000909 0f77         lsl  r23
00090a fd67         sbrc r22,7
00090b 6071         sbr  r23,1
00090c 2f97         mov  r25,r23
00090d 579e         subi r25,0x7e
00090e f081         breq __ftrunc0
00090f f078         brcs __ftrunc0
000910 3198         cpi  r25,24
000911 f490         brsh __ftrunc1
000912 27aa         clr  r26
000913 27bb         clr  r27
000914 2788         clr  r24
                 __ftrunc2:
000915 9408         sec
000916 9587         ror  r24
000917 95b7         ror  r27
000918 95a7         ror  r26
000919 959a         dec  r25
00091a f7d1         brne __ftrunc2
00091b 23ea         and  r30,r26
00091c 23fb         and  r31,r27
00091d 2368         and  r22,r24
00091e c005         rjmp __ftrunc1
                 __ftrunc0:
00091f 94e8         clt
000920 2777         clr  r23
000921 27ee         clr  r30
000922 27ff         clr  r31
000923 2766         clr  r22
                 __ftrunc1:
000924 776f         cbr  r22,0x80
000925 9576         lsr  r23
000926 f408         brcc __ftrunc3
000927 6860         sbr  r22,0x80
                 __ftrunc3:
000928 f977         bld  r23,7
000929 91a9         ld   r26,y+
00092a 91b9         ld   r27,y+
00092b 9189         ld   r24,y+
00092c 9199         ld   r25,y+
00092d 17ea         cp   r30,r26
00092e 07fb         cpc  r31,r27
00092f 0768         cpc  r22,r24
000930 0779         cpc  r23,r25
000931 fb97         bst  r25,7
000932 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
000933 940e 0e4b 	CALL __PUTPARD2
000935 940e 0e3c 	CALL __GETD2S0
000937 940e 0902 	CALL _ftrunc
000939 940e 0e41 	CALL __PUTD1S0
00093b f419          brne __floor1
                 __floor0:
00093c 940e 0e37 	CALL __GETD1S0
00093e c009      	RJMP _0x20C0001
                 __floor1:
00093f f7e6          brtc __floor0
000940 940e 0e37 	CALL __GETD1S0
                +
000942 e0a0     +LDI R26 , LOW ( 0x3F800000 )
000943 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000944 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000945 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000946 940e 0c9a 	CALL __SUBF12
                 _0x20C0001:
000948 9624      	ADIW R28,4
000949 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _Weight_Shiwu:
000260           	.BYTE 0x4
                 _Weight_Maopi:
000264           	.BYTE 0x4
                 _Weight_Shiwu1:
000268           	.BYTE 0x4
                 _Weight_Maopi1:
00026c           	.BYTE 0x4
                 _Weight_Shiwu2:
000270           	.BYTE 0x4
                 _Weight_Maopi2:
000274           	.BYTE 0x4
                 _HX711_Buffer:
000278           	.BYTE 0x4
                 _HX711_Buffer1:
00027c           	.BYTE 0x4
                 _HX711_Buffer2:
000280           	.BYTE 0x4
                 _HX711_Buffer_sum:
000284           	.BYTE 0x4
                 _HX711_Buffer1_sum:
000288           	.BYTE 0x4
                 _HX711_Buffer2_sum:
00028c           	.BYTE 0x4
                 _scale:
000290           	.BYTE 0x4
                 _scale1:
000294           	.BYTE 0x4
                 _scale2:
000298           	.BYTE 0x4
                 _scale_array:
00029c           	.BYTE 0x64
                 _scale1_array:
000300           	.BYTE 0x64
                 _scale2_array:
000364           	.BYTE 0x64
                 _buffer1:
0003c8           	.BYTE 0xC
                 _buffer2:
0003d4           	.BYTE 0xC
                 _buffer3:
0003e0           	.BYTE 0xC
                 _buffer:
0003ec           	.BYTE 0x1E
                 _str1:
00040a           	.BYTE 0xA
                 _str2:
000414           	.BYTE 0xA
                 _str3:
00041e           	.BYTE 0xA
                 _rx_buffer:
000428           	.BYTE 0x18
                 __base_y_G100:
000440           	.BYTE 0x4
                 __seed_G102:
000444           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
00094a 91e0 0290 	LDS  R30,_scale
00094c 91f0 0291 	LDS  R31,_scale+1
00094e 9160 0292 	LDS  R22,_scale+2
000950 9170 0293 	LDS  R23,_scale+3
000952 940e 0e46 	CALL __PUTPARD1
000954 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
000955 93fa      	ST   -Y,R31
000956 93ea      	ST   -Y,R30
                +
000957 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 14 ) )
000958 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 14 ) )
                 	__POINTW1FN _0x0,14
000959 93fa      	ST   -Y,R31
00095a 93ea      	ST   -Y,R30
00095b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2:
00095c 2766      	CLR  R22
00095d 2777      	CLR  R23
00095e 940e 0e46 	CALL __PUTPARD1
000960 e084      	LDI  R24,4
000961 940e 07ea 	CALL _sprintf
000963 9628      	ADIW R28,8
000964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000965 91e0 0294 	LDS  R30,_scale1
000967 91f0 0295 	LDS  R31,_scale1+1
000969 9160 0296 	LDS  R22,_scale1+2
00096b 9170 0297 	LDS  R23,_scale1+3
00096d 940e 0e46 	CALL __PUTPARD1
00096f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4:
000970 91e0 0298 	LDS  R30,_scale2
000972 91f0 0299 	LDS  R31,_scale2+1
000974 9160 029a 	LDS  R22,_scale2+2
000976 9170 029b 	LDS  R23,_scale2+3
000978 940e 0e46 	CALL __PUTPARD1
00097a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x5:
                +
00097b 85e9     +LDD R30 , Y + 9
00097c 85fa     +LDD R31 , Y + 9 + 1
00097d 856b     +LDD R22 , Y + 9 + 2
00097e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00097f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x6:
                +
000980 87e9     +STD Y + 9 , R30
000981 87fa     +STD Y + 9 + 1 , R31
000982 876b     +STD Y + 9 + 2 , R22
000983 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000984 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7:
                +
000985 81ed     +LDD R30 , Y + 5
000986 81fe     +LDD R31 , Y + 5 + 1
000987 816f     +LDD R22 , Y + 5 + 2
000988 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
000989 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8:
                +
00098a 83ed     +STD Y + 5 , R30
00098b 83fe     +STD Y + 5 + 1 , R31
00098c 836f     +STD Y + 5 + 2 , R22
00098d 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00098e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
                +
00098f 81e9     +LDD R30 , Y + 1
000990 81fa     +LDD R31 , Y + 1 + 1
000991 816b     +LDD R22 , Y + 1 + 2
000992 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
000993 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA:
                +
000994 83e9     +STD Y + 1 , R30
000995 83fa     +STD Y + 1 + 1 , R31
000996 836b     +STD Y + 1 + 2 , R22
000997 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
000998 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB:
                +
000999 5fef     +SUBI R30 , LOW ( - 1 )
00099a 4fff     +SBCI R31 , HIGH ( - 1 )
00099b 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00099c 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00099d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xC:
                +
00099e 85a9     +LDD R26 , Y + 9
00099f 85ba     +LDD R27 , Y + 9 + 1
0009a0 858b     +LDD R24 , Y + 9 + 2
0009a1 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
0009a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD:
                +
0009a3 e0e0     +LDI R30 , LOW ( 0x800000 )
0009a4 e0f0     +LDI R31 , HIGH ( 0x800000 )
0009a5 e860     +LDI R22 , BYTE3 ( 0x800000 )
0009a6 e070     +LDI R23 , BYTE4 ( 0x800000 )
                 	__GETD1N 0x800000
0009a7 940e 0db2 	CALL __XORD12
0009a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE:
0009aa 93e0 0278 	STS  _HX711_Buffer,R30
0009ac 93f0 0279 	STS  _HX711_Buffer+1,R31
0009ae 9360 027a 	STS  _HX711_Buffer+2,R22
0009b0 9370 027b 	STS  _HX711_Buffer+3,R23
0009b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
0009b3 93e0 027c 	STS  _HX711_Buffer1,R30
0009b5 93f0 027d 	STS  _HX711_Buffer1+1,R31
0009b7 9360 027e 	STS  _HX711_Buffer1+2,R22
0009b9 9370 027f 	STS  _HX711_Buffer1+3,R23
0009bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
0009bc 93e0 0280 	STS  _HX711_Buffer2,R30
0009be 93f0 0281 	STS  _HX711_Buffer2+1,R31
0009c0 9360 0282 	STS  _HX711_Buffer2+2,R22
0009c2 9370 0283 	STS  _HX711_Buffer2+3,R23
0009c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
0009c5 e0e0      	LDI  R30,LOW(0)
0009c6 93e0 0284 	STS  _HX711_Buffer_sum,R30
0009c8 93e0 0285 	STS  _HX711_Buffer_sum+1,R30
0009ca 93e0 0286 	STS  _HX711_Buffer_sum+2,R30
0009cc 93e0 0287 	STS  _HX711_Buffer_sum+3,R30
0009ce 93e0 0288 	STS  _HX711_Buffer1_sum,R30
0009d0 93e0 0289 	STS  _HX711_Buffer1_sum+1,R30
0009d2 93e0 028a 	STS  _HX711_Buffer1_sum+2,R30
0009d4 93e0 028b 	STS  _HX711_Buffer1_sum+3,R30
0009d6 93e0 028c 	STS  _HX711_Buffer2_sum,R30
0009d8 93e0 028d 	STS  _HX711_Buffer2_sum+1,R30
0009da 93e0 028e 	STS  _HX711_Buffer2_sum+2,R30
0009dc 93e0 028f 	STS  _HX711_Buffer2_sum+3,R30
0009de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12:
0009df 91a0 0278 	LDS  R26,_HX711_Buffer
0009e1 91b0 0279 	LDS  R27,_HX711_Buffer+1
0009e3 9180 027a 	LDS  R24,_HX711_Buffer+2
0009e5 9190 027b 	LDS  R25,_HX711_Buffer+3
0009e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x13:
                +
0009e8 e6e4     +LDI R30 , LOW ( 0x64 )
0009e9 e0f0     +LDI R31 , HIGH ( 0x64 )
0009ea e060     +LDI R22 , BYTE3 ( 0x64 )
0009eb e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
0009ec 940e 0de7 	CALL __DIVD21U
0009ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0009ef 91e0 0278 	LDS  R30,_HX711_Buffer
0009f1 91f0 0279 	LDS  R31,_HX711_Buffer+1
0009f3 9160 027a 	LDS  R22,_HX711_Buffer+2
0009f5 9170 027b 	LDS  R23,_HX711_Buffer+3
0009f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15:
0009f8 93e0 0260 	STS  _Weight_Shiwu,R30
0009fa 93f0 0261 	STS  _Weight_Shiwu+1,R31
0009fc 9360 0262 	STS  _Weight_Shiwu+2,R22
0009fe 9370 0263 	STS  _Weight_Shiwu+3,R23
000a00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x16:
000a01 91e0 0260 	LDS  R30,_Weight_Shiwu
000a03 91f0 0261 	LDS  R31,_Weight_Shiwu+1
000a05 9160 0262 	LDS  R22,_Weight_Shiwu+2
000a07 9170 0263 	LDS  R23,_Weight_Shiwu+3
000a09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x17:
000a0a dff6      	RCALL SUBOPT_0x16
000a0b 940e 0c65 	CALL __CDF1U
000a0d 01df      	MOVW R26,R30
000a0e 01cb      	MOVW R24,R22
000a0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18:
                +
000a10 e4ed     +LDI R30 , LOW ( 0x3EB8A04D )
000a11 eaf0     +LDI R31 , HIGH ( 0x3EB8A04D )
000a12 eb68     +LDI R22 , BYTE3 ( 0x3EB8A04D )
000a13 e37e     +LDI R23 , BYTE4 ( 0x3EB8A04D )
                 	__GETD1N 0x3EB8A04D
000a14 940e 0d3f 	CALL __DIVF21
000a16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
000a17 940e 0c2e 	CALL __CFD1U
000a19 940e 0e32 	CALL __PUTDP1
000a1b 01f8      	MOVW R30,R16
000a1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A:
000a1d 940e 0dbf 	CALL __LSLW2
000a1f 0fea      	ADD  R30,R26
000a20 1ffb      	ADC  R31,R27
000a21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B:
                +
000a22 e0e0     +LDI R30 , LOW ( 0x41200000 )
000a23 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000a24 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000a25 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000a26 940e 0d3f 	CALL __DIVF21
000a28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C:
000a29 940e 0dbf 	CALL __LSLW2
000a2b 0fae      	ADD  R26,R30
000a2c 1fbf      	ADC  R27,R31
                +
000a2d e0e0     +LDI R30 , LOW ( 0x0 )
000a2e e0f0     +LDI R31 , HIGH ( 0x0 )
000a2f e060     +LDI R22 , BYTE3 ( 0x0 )
000a30 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
000a31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D:
000a32 91a0 027c 	LDS  R26,_HX711_Buffer1
000a34 91b0 027d 	LDS  R27,_HX711_Buffer1+1
000a36 9180 027e 	LDS  R24,_HX711_Buffer1+2
000a38 9190 027f 	LDS  R25,_HX711_Buffer1+3
000a3a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E:
000a3b 91e0 027c 	LDS  R30,_HX711_Buffer1
000a3d 91f0 027d 	LDS  R31,_HX711_Buffer1+1
000a3f 9160 027e 	LDS  R22,_HX711_Buffer1+2
000a41 9170 027f 	LDS  R23,_HX711_Buffer1+3
000a43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000a44 93e0 0268 	STS  _Weight_Shiwu1,R30
000a46 93f0 0269 	STS  _Weight_Shiwu1+1,R31
000a48 9360 026a 	STS  _Weight_Shiwu1+2,R22
000a4a 9370 026b 	STS  _Weight_Shiwu1+3,R23
000a4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
000a4d 91e0 0268 	LDS  R30,_Weight_Shiwu1
000a4f 91f0 0269 	LDS  R31,_Weight_Shiwu1+1
000a51 9160 026a 	LDS  R22,_Weight_Shiwu1+2
000a53 9170 026b 	LDS  R23,_Weight_Shiwu1+3
000a55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000a56 dff6      	RCALL SUBOPT_0x20
000a57 940e 0c65 	CALL __CDF1U
000a59 01df      	MOVW R26,R30
000a5a 01cb      	MOVW R24,R22
000a5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
000a5c 91a0 0280 	LDS  R26,_HX711_Buffer2
000a5e 91b0 0281 	LDS  R27,_HX711_Buffer2+1
000a60 9180 0282 	LDS  R24,_HX711_Buffer2+2
000a62 9190 0283 	LDS  R25,_HX711_Buffer2+3
000a64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
000a65 91e0 0280 	LDS  R30,_HX711_Buffer2
000a67 91f0 0281 	LDS  R31,_HX711_Buffer2+1
000a69 9160 0282 	LDS  R22,_HX711_Buffer2+2
000a6b 9170 0283 	LDS  R23,_HX711_Buffer2+3
000a6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
000a6e 93e0 0270 	STS  _Weight_Shiwu2,R30
000a70 93f0 0271 	STS  _Weight_Shiwu2+1,R31
000a72 9360 0272 	STS  _Weight_Shiwu2+2,R22
000a74 9370 0273 	STS  _Weight_Shiwu2+3,R23
000a76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x25:
000a77 91e0 0270 	LDS  R30,_Weight_Shiwu2
000a79 91f0 0271 	LDS  R31,_Weight_Shiwu2+1
000a7b 9160 0272 	LDS  R22,_Weight_Shiwu2+2
000a7d 9170 0273 	LDS  R23,_Weight_Shiwu2+3
000a7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26:
000a80 dff6      	RCALL SUBOPT_0x25
000a81 940e 0c65 	CALL __CDF1U
000a83 01df      	MOVW R26,R30
000a84 01cb      	MOVW R24,R22
000a85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27:
000a86 93fa      	ST   -Y,R31
000a87 93ea      	ST   -Y,R30
000a88 e1a9      	LDI  R26,LOW(25)
000a89 e0b0      	LDI  R27,0
000a8a 940c 03b8 	JMP  _sort_array
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28:
                +
000a8c e0e0     +LDI R30 , LOW ( 0x42C80000 )
000a8d e0f0     +LDI R31 , HIGH ( 0x42C80000 )
000a8e ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
000a8f e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
000a90 940e 0d3f 	CALL __DIVF21
000a92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x29:
000a93 91a0 0284 	LDS  R26,_HX711_Buffer_sum
000a95 91b0 0285 	LDS  R27,_HX711_Buffer_sum+1
000a97 9180 0286 	LDS  R24,_HX711_Buffer_sum+2
000a99 9190 0287 	LDS  R25,_HX711_Buffer_sum+3
000a9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
000a9c 940e 0e50 	CALL __CDF2U
000a9e 940e 0ca1 	CALL __ADDF12
000aa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B:
000aa1 93e0 0284 	STS  _HX711_Buffer_sum,R30
000aa3 93f0 0285 	STS  _HX711_Buffer_sum+1,R31
000aa5 9360 0286 	STS  _HX711_Buffer_sum+2,R22
000aa7 9370 0287 	STS  _HX711_Buffer_sum+3,R23
000aa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2C:
000aaa 91a0 0288 	LDS  R26,_HX711_Buffer1_sum
000aac 91b0 0289 	LDS  R27,_HX711_Buffer1_sum+1
000aae 9180 028a 	LDS  R24,_HX711_Buffer1_sum+2
000ab0 9190 028b 	LDS  R25,_HX711_Buffer1_sum+3
000ab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D:
000ab3 93e0 0288 	STS  _HX711_Buffer1_sum,R30
000ab5 93f0 0289 	STS  _HX711_Buffer1_sum+1,R31
000ab7 9360 028a 	STS  _HX711_Buffer1_sum+2,R22
000ab9 9370 028b 	STS  _HX711_Buffer1_sum+3,R23
000abb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2E:
000abc 91a0 028c 	LDS  R26,_HX711_Buffer2_sum
000abe 91b0 028d 	LDS  R27,_HX711_Buffer2_sum+1
000ac0 9180 028e 	LDS  R24,_HX711_Buffer2_sum+2
000ac2 9190 028f 	LDS  R25,_HX711_Buffer2_sum+3
000ac4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F:
000ac5 93e0 028c 	STS  _HX711_Buffer2_sum,R30
000ac7 93f0 028d 	STS  _HX711_Buffer2_sum+1,R31
000ac9 9360 028e 	STS  _HX711_Buffer2_sum+2,R22
000acb 9370 028f 	STS  _HX711_Buffer2_sum+3,R23
000acd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x30:
000ace 940e 0c65 	CALL __CDF1U
000ad0 01df      	MOVW R26,R30
000ad1 01cb      	MOVW R24,R22
                +
000ad2 e0e0     +LDI R30 , LOW ( 0x40800000 )
000ad3 e0f0     +LDI R31 , HIGH ( 0x40800000 )
000ad4 e860     +LDI R22 , BYTE3 ( 0x40800000 )
000ad5 e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
000ad6 940e 0d3f 	CALL __DIVF21
000ad8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
                +
000ad9 e0ea     +LDI R30 , LOW ( 0xA )
000ada e0f0     +LDI R31 , HIGH ( 0xA )
000adb e060     +LDI R22 , BYTE3 ( 0xA )
000adc e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
000add 940e 0de7 	CALL __DIVD21U
000adf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32:
000ae0 81ae      	LDD  R26,Y+6
000ae1 81bf      	LDD  R27,Y+6+1
000ae2 940e 0dbf 	CALL __LSLW2
000ae4 0fae      	ADD  R26,R30
000ae5 1fbf      	ADC  R27,R31
000ae6 940e 0e2c 	CALL __GETD1P
000ae8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
000ae9 85a8      	LDD  R26,Y+8
000aea 85b9      	LDD  R27,Y+8+1
000aeb 940e 0dbf 	CALL __LSLW2
000aed 0fae      	ADD  R26,R30
000aee 1fbf      	ADC  R27,R31
000aef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34:
000af0 940e 0dcf 	CALL __CWD1
000af2 940e 0c67 	CALL __CDF1
000af4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
000af5 940e 042d 	CALL __lcd_write_data
000af7 e0a3      	LDI  R26,LOW(3)
000af8 e0b0      	LDI  R27,0
000af9 940c 0bf1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x36:
000afb 81a9      	LDD  R26,Y+1
000afc 81ba      	LDD  R27,Y+1+1
000afd 91ed      	LD   R30,X+
000afe 83a9      	STD  Y+1,R26
000aff 83ba      	STD  Y+1+1,R27
000b00 2f1e      	MOV  R17,R30
000b01 30e0      	CPI  R30,0
000b02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x37:
000b03 e3a0      	LDI  R26,LOW(48)
000b04 940e 0418 	CALL __lcd_write_nibble_G100
                +
000b06 ec88     +LDI R24 , LOW ( 200 )
000b07 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000b08 9701     +SBIW R24 , 1
000b09 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000b0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38:
000b0b 91ed      	LD   R30,X+
000b0c 91fd      	LD   R31,X+
000b0d 9631      	ADIW R30,1
000b0e 93fe      	ST   -X,R31
000b0f 93ee      	ST   -X,R30
000b10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39:
000b11 93ba      	ST   -Y,R27
000b12 93aa      	ST   -Y,R26
000b13 9724      	SBIW R28,4
000b14 e0e0      	LDI  R30,LOW(0)
000b15 83e8      	ST   Y,R30
000b16 83e9      	STD  Y+1,R30
000b17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x3A:
                +
000b18 81ac     +LDD R26 , Y + 4
000b19 81bd     +LDD R27 , Y + 4 + 1
000b1a 818e     +LDD R24 , Y + 4 + 2
000b1b 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000b1c e0e0     +LDI R30 , LOW ( 0x41200000 )
000b1d e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b1e e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b1f e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b20 940e 0cf1 	CALL __MULF12
                +
000b22 83ec     +STD Y + 4 , R30
000b23 83fd     +STD Y + 4 + 1 , R31
000b24 836e     +STD Y + 4 + 2 , R22
000b25 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000b26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3B:
                +
000b27 81ec     +LDD R30 , Y + 4
000b28 81fd     +LDD R31 , Y + 4 + 1
000b29 816e     +LDD R22 , Y + 4 + 2
000b2a 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000b2b 85ac     +LDD R26 , Y + 12
000b2c 85bd     +LDD R27 , Y + 12 + 1
000b2d 858e     +LDD R24 , Y + 12 + 2
000b2e 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b2f 940e 0d84 	CALL __CMPF12
000b31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C:
                +
000b32 85ac     +LDD R26 , Y + 12
000b33 85bd     +LDD R27 , Y + 12 + 1
000b34 858e     +LDD R24 , Y + 12 + 2
000b35 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000b36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3D:
                +
000b37 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b38 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b39 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b3a e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b3b 940e 0cf1 	CALL __MULF12
                +
000b3d 87ec     +STD Y + 12 , R30
000b3e 87fd     +STD Y + 12 + 1 , R31
000b3f 876e     +STD Y + 12 + 2 , R22
000b40 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b41 5f3f      	SUBI R19,-LOW(1)
000b42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E:
                +
000b43 e0e0     +LDI R30 , LOW ( 0x41200000 )
000b44 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000b45 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000b46 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000b47 940e 0cf1 	CALL __MULF12
000b49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F:
                +
000b4a 87ec     +STD Y + 12 , R30
000b4b 87fd     +STD Y + 12 + 1 , R31
000b4c 876e     +STD Y + 12 + 2 , R22
000b4d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000b4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40:
                +
000b4f e0a0     +LDI R26 , LOW ( 0x3F000000 )
000b50 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000b51 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000b52 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000b53 940e 0ca1 	CALL __ADDF12
000b55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41:
                +
000b56 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b57 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b58 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b59 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b5a 940e 0cf1 	CALL __MULF12
000b5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
000b5d 85a8      	LDD  R26,Y+8
000b5e 85b9      	LDD  R27,Y+8+1
000b5f 9611      	ADIW R26,1
000b60 87a8      	STD  Y+8,R26
000b61 87b9      	STD  Y+8+1,R27
000b62 9711      	SBIW R26,1
000b63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x43:
000b64 2fe0      	MOV  R30,R16
000b65 5de0      	SUBI R30,-LOW(48)
000b66 93ec      	ST   X,R30
000b67 2fe0      	MOV  R30,R16
000b68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x44:
000b69 940e 0e55 	CALL __SWAPD12
000b6b 940e 0c9a 	CALL __SUBF12
000b6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x45:
000b6e 85e8      	LDD  R30,Y+8
000b6f 85f9      	LDD  R31,Y+8+1
000b70 9631      	ADIW R30,1
000b71 87e8      	STD  Y+8,R30
000b72 87f9      	STD  Y+8+1,R31
000b73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x46:
000b74 932a      	ST   -Y,R18
000b75 81af      	LDD  R26,Y+7
000b76 85b8      	LDD  R27,Y+7+1
000b77 85e9      	LDD  R30,Y+9
000b78 85fa      	LDD  R31,Y+9+1
000b79 9509      	ICALL
000b7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x47:
                +
000b7b 01fe     +MOVW R30 , R28
000b7c 5ae6     +SUBI R30 , LOW ( - 90 )
000b7d 4fff     +SBCI R31 , HIGH ( - 90 )
000b7e 9001     +LD R0 , Z +
000b7f 81f0     +LD R31 , Z
000b80 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000b81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x48:
000b82 9734      	SBIW R30,4
                +
000b83 01de     +MOVW R26 , R28
000b84 5aa6     +SUBI R26 , LOW ( - 90 )
000b85 4fbf     +SBCI R27 , HIGH ( - 90 )
000b86 93ed     +ST X + , R30
000b87 93fc     +ST X , R31
                 	__PUTW1SX 90
000b88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x49:
000b89 81af      	LDD  R26,Y+7
000b8a 85b8      	LDD  R27,Y+7+1
000b8b 85e9      	LDD  R30,Y+9
000b8c 85fa      	LDD  R31,Y+9+1
000b8d 9509      	ICALL
000b8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x4A:
                +
000b8f 01de     +MOVW R26 , R28
000b90 5aa6     +SUBI R26 , LOW ( - 90 )
000b91 4fbf     +SBCI R27 , HIGH ( - 90 )
000b92 900d     +LD R0 , X +
000b93 91bc     +LD R27 , X
000b94 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000b95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
000b96 87ea     +STD Y + 10 , R30
000b97 87fb     +STD Y + 10 + 1 , R31
000b98 876c     +STD Y + 10 + 2 , R22
000b99 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000b9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4C:
000b9b dfdf      	RCALL SUBOPT_0x47
000b9c cfe5      	RJMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4D:
                +
000b9d 85ea     +LDD R30 , Y + 10
000b9e 85fb     +LDD R31 , Y + 10 + 1
000b9f 856c     +LDD R22 , Y + 10 + 2
000ba0 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000ba1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x4E:
000ba2 87ee      	STD  Y+14,R30
000ba3 87ff      	STD  Y+14+1,R31
000ba4 85ae      	LDD  R26,Y+14
000ba5 85bf      	LDD  R27,Y+14+1
000ba6 940e 08e9 	CALL _strlen
000ba8 2f1e      	MOV  R17,R30
000ba9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x4F:
000baa dfe4      	RCALL SUBOPT_0x4A
000bab 9614      	ADIW R26,4
000bac 940e 0e28 	CALL __GETW1P
000bae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x50:
                +
000baf 8be8     +STD Y + 16 , R30
000bb0 8bf9     +STD Y + 16 + 1 , R31
000bb1 8b6a     +STD Y + 16 + 2 , R22
000bb2 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000bb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x51:
000bb4 7f0b      	ANDI R16,LOW(251)
000bb5 89ed      	LDD  R30,Y+21
000bb6 93ea      	ST   -Y,R30
                +
000bb7 01de     +MOVW R26 , R28
000bb8 5aa9     +SUBI R26 , LOW ( - 87 )
000bb9 4fbf     +SBCI R27 , HIGH ( - 87 )
000bba 900d     +LD R0 , X +
000bbb 91bc     +LD R27 , X
000bbc 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000bbd 01fe     +MOVW R30 , R28
000bbe 5ae7     +SUBI R30 , LOW ( - 89 )
000bbf 4fff     +SBCI R31 , HIGH ( - 89 )
000bc0 9001     +LD R0 , Z +
000bc1 81f0     +LD R31 , Z
000bc2 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000bc3 9509      	ICALL
000bc4 3050      	CPI  R21,0
000bc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x52:
                +
000bc6 89e8     +LDD R30 , Y + 16
000bc7 89f9     +LDD R31 , Y + 16 + 1
000bc8 896a     +LDD R22 , Y + 16 + 2
000bc9 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000bca 85aa     +LDD R26 , Y + 10
000bcb 85bb     +LDD R27 , Y + 10 + 1
000bcc 858c     +LDD R24 , Y + 10 + 2
000bcd 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000bce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x53:
000bcf 01de      	MOVW R26,R28
000bd0 961c      	ADIW R26,12
000bd1 940e 0da4 	CALL __ADDW2R15
000bd3 940e 0e28 	CALL __GETW1P
000bd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x54:
000bd6 81ee      	LDD  R30,Y+6
000bd7 81ff      	LDD  R31,Y+6+1
000bd8 93fa      	ST   -Y,R31
000bd9 93ea      	ST   -Y,R30
000bda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x55:
000bdb 81ae      	LDD  R26,Y+6
000bdc 81bf      	LDD  R27,Y+6+1
000bdd 9611      	ADIW R26,1
000bde 83ae      	STD  Y+6,R26
000bdf 83bf      	STD  Y+6+1,R27
000be0 9711      	SBIW R26,1
000be1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x56:
                +
000be2 81aa     +LDD R26 , Y + 2
000be3 81bb     +LDD R27 , Y + 2 + 1
000be4 818c     +LDD R24 , Y + 2 + 2
000be5 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000be6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x57:
                +
000be7 83ea     +STD Y + 2 , R30
000be8 83fb     +STD Y + 2 + 1 , R31
000be9 836c     +STD Y + 2 + 2 , R22
000bea 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000beb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x58:
                +
000bec 81ea     +LDD R30 , Y + 2
000bed 81fb     +LDD R31 , Y + 2 + 1
000bee 816c     +LDD R22 , Y + 2 + 2
000bef 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
000bf0 cdad      	RJMP SUBOPT_0xC
                 
                 
                 	.CSEG
                 _delay_ms:
000bf1 9610      	adiw r26,0
000bf2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000bf3 ed80     +LDI R24 , LOW ( 0x7D0 )
000bf4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000bf5 9701     +SBIW R24 , 1
000bf6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000bf7 95a8      	wdr
000bf8 9711      	sbiw r26,1
000bf9 f7c9      	brne __delay_ms0
                 __delay_ms1:
000bfa 9508      	ret
                 
                 __ANEGF1:
000bfb 9730      	SBIW R30,0
000bfc 4060      	SBCI R22,0
000bfd 4070      	SBCI R23,0
000bfe f009      	BREQ __ANEGF10
000bff 5870      	SUBI R23,0x80
                 __ANEGF10:
000c00 9508      	RET
                 
                 __ROUND_REPACK:
000c01 2355      	TST  R21
000c02 f442      	BRPL __REPACK
000c03 3850      	CPI  R21,0x80
000c04 f411      	BRNE __ROUND_REPACK0
000c05 ffe0      	SBRS R30,0
000c06 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000c07 9631      	ADIW R30,1
000c08 1f69      	ADC  R22,R25
000c09 1f79      	ADC  R23,R25
000c0a f06b      	BRVS __REPACK1
                 
                 __REPACK:
000c0b e850      	LDI  R21,0x80
000c0c 2757      	EOR  R21,R23
000c0d f411      	BRNE __REPACK0
000c0e 935f      	PUSH R21
000c0f c0cf      	RJMP __ZERORES
                 __REPACK0:
000c10 3f5f      	CPI  R21,0xFF
000c11 f031      	BREQ __REPACK1
000c12 0f66      	LSL  R22
000c13 0c00      	LSL  R0
000c14 9557      	ROR  R21
000c15 9567      	ROR  R22
000c16 2f75      	MOV  R23,R21
000c17 9508      	RET
                 __REPACK1:
000c18 935f      	PUSH R21
000c19 2000      	TST  R0
000c1a f00a      	BRMI __REPACK2
000c1b c0cf      	RJMP __MAXRES
                 __REPACK2:
000c1c c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000c1d e850      	LDI  R21,0x80
000c1e 2e19      	MOV  R1,R25
000c1f 2215      	AND  R1,R21
000c20 0f88      	LSL  R24
000c21 1f99      	ROL  R25
000c22 2795      	EOR  R25,R21
000c23 0f55      	LSL  R21
000c24 9587      	ROR  R24
                 
                 __UNPACK1:
000c25 e850      	LDI  R21,0x80
000c26 2e07      	MOV  R0,R23
000c27 2205      	AND  R0,R21
000c28 0f66      	LSL  R22
000c29 1f77      	ROL  R23
000c2a 2775      	EOR  R23,R21
000c2b 0f55      	LSL  R21
000c2c 9567      	ROR  R22
000c2d 9508      	RET
                 
                 __CFD1U:
000c2e 9468      	SET
000c2f c001      	RJMP __CFD1U0
                 __CFD1:
000c30 94e8      	CLT
                 __CFD1U0:
000c31 935f      	PUSH R21
000c32 dff2      	RCALL __UNPACK1
000c33 3870      	CPI  R23,0x80
000c34 f018      	BRLO __CFD10
000c35 3f7f      	CPI  R23,0xFF
000c36 f408      	BRCC __CFD10
000c37 c0a7      	RJMP __ZERORES
                 __CFD10:
000c38 e156      	LDI  R21,22
000c39 1b57      	SUB  R21,R23
000c3a f4aa      	BRPL __CFD11
000c3b 9551      	NEG  R21
000c3c 3058      	CPI  R21,8
000c3d f40e      	BRTC __CFD19
000c3e 3059      	CPI  R21,9
                 __CFD19:
000c3f f030      	BRLO __CFD17
000c40 efef      	SER  R30
000c41 efff      	SER  R31
000c42 ef6f      	SER  R22
000c43 e77f      	LDI  R23,0x7F
000c44 f977      	BLD  R23,7
000c45 c01a      	RJMP __CFD15
                 __CFD17:
000c46 2777      	CLR  R23
000c47 2355      	TST  R21
000c48 f0b9      	BREQ __CFD15
                 __CFD18:
000c49 0fee      	LSL  R30
000c4a 1fff      	ROL  R31
000c4b 1f66      	ROL  R22
000c4c 1f77      	ROL  R23
000c4d 955a      	DEC  R21
000c4e f7d1      	BRNE __CFD18
000c4f c010      	RJMP __CFD15
                 __CFD11:
000c50 2777      	CLR  R23
                 __CFD12:
000c51 3058      	CPI  R21,8
000c52 f028      	BRLO __CFD13
000c53 2fef      	MOV  R30,R31
000c54 2ff6      	MOV  R31,R22
000c55 2f67      	MOV  R22,R23
000c56 5058      	SUBI R21,8
000c57 cff9      	RJMP __CFD12
                 __CFD13:
000c58 2355      	TST  R21
000c59 f031      	BREQ __CFD15
                 __CFD14:
000c5a 9576      	LSR  R23
000c5b 9567      	ROR  R22
000c5c 95f7      	ROR  R31
000c5d 95e7      	ROR  R30
000c5e 955a      	DEC  R21
000c5f f7d1      	BRNE __CFD14
                 __CFD15:
000c60 2000      	TST  R0
000c61 f40a      	BRPL __CFD16
000c62 d154      	RCALL __ANEGD1
                 __CFD16:
000c63 915f      	POP  R21
000c64 9508      	RET
                 
                 __CDF1U:
000c65 9468      	SET
000c66 c001      	RJMP __CDF1U0
                 __CDF1:
000c67 94e8      	CLT
                 __CDF1U0:
000c68 9730      	SBIW R30,0
000c69 4060      	SBCI R22,0
000c6a 4070      	SBCI R23,0
000c6b f0b1      	BREQ __CDF10
000c6c 2400      	CLR  R0
000c6d f026      	BRTS __CDF11
000c6e 2377      	TST  R23
000c6f f412      	BRPL __CDF11
000c70 9400      	COM  R0
000c71 d145      	RCALL __ANEGD1
                 __CDF11:
000c72 2e17      	MOV  R1,R23
000c73 e17e      	LDI  R23,30
000c74 2011      	TST  R1
                 __CDF12:
000c75 f032      	BRMI __CDF13
000c76 957a      	DEC  R23
000c77 0fee      	LSL  R30
000c78 1fff      	ROL  R31
000c79 1f66      	ROL  R22
000c7a 1c11      	ROL  R1
000c7b cff9      	RJMP __CDF12
                 __CDF13:
000c7c 2fef      	MOV  R30,R31
000c7d 2ff6      	MOV  R31,R22
000c7e 2d61      	MOV  R22,R1
000c7f 935f      	PUSH R21
000c80 df8a      	RCALL __REPACK
000c81 915f      	POP  R21
                 __CDF10:
000c82 9508      	RET
                 
                 __SWAPACC:
000c83 934f      	PUSH R20
000c84 01af      	MOVW R20,R30
000c85 01fd      	MOVW R30,R26
000c86 01da      	MOVW R26,R20
000c87 01ab      	MOVW R20,R22
000c88 01bc      	MOVW R22,R24
000c89 01ca      	MOVW R24,R20
000c8a 2d40      	MOV  R20,R0
000c8b 2c01      	MOV  R0,R1
000c8c 2e14      	MOV  R1,R20
000c8d 914f      	POP  R20
000c8e 9508      	RET
                 
                 __UADD12:
000c8f 0fea      	ADD  R30,R26
000c90 1ffb      	ADC  R31,R27
000c91 1f68      	ADC  R22,R24
000c92 9508      	RET
                 
                 __NEGMAN1:
000c93 95e0      	COM  R30
000c94 95f0      	COM  R31
000c95 9560      	COM  R22
000c96 5fef      	SUBI R30,-1
000c97 4fff      	SBCI R31,-1
000c98 4f6f      	SBCI R22,-1
000c99 9508      	RET
                 
                 __SUBF12:
000c9a 935f      	PUSH R21
000c9b df81      	RCALL __UNPACK
000c9c 3890      	CPI  R25,0x80
000c9d f171      	BREQ __ADDF129
000c9e e850      	LDI  R21,0x80
000c9f 2615      	EOR  R1,R21
                 
000ca0 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000ca1 935f      	PUSH R21
000ca2 df7a      	RCALL __UNPACK
000ca3 3890      	CPI  R25,0x80
000ca4 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000ca5 3870      	CPI  R23,0x80
000ca6 f121      	BREQ __ADDF128
                 __ADDF121:
000ca7 2f57      	MOV  R21,R23
000ca8 1b59      	SUB  R21,R25
000ca9 f12b      	BRVS __ADDF1211
000caa f412      	BRPL __ADDF122
000cab dfd7      	RCALL __SWAPACC
000cac cffa      	RJMP __ADDF121
                 __ADDF122:
000cad 3158      	CPI  R21,24
000cae f018      	BRLO __ADDF123
000caf 27aa      	CLR  R26
000cb0 27bb      	CLR  R27
000cb1 2788      	CLR  R24
                 __ADDF123:
000cb2 3058      	CPI  R21,8
000cb3 f028      	BRLO __ADDF124
000cb4 2fab      	MOV  R26,R27
000cb5 2fb8      	MOV  R27,R24
000cb6 2788      	CLR  R24
000cb7 5058      	SUBI R21,8
000cb8 cff9      	RJMP __ADDF123
                 __ADDF124:
000cb9 2355      	TST  R21
000cba f029      	BREQ __ADDF126
                 __ADDF125:
000cbb 9586      	LSR  R24
000cbc 95b7      	ROR  R27
000cbd 95a7      	ROR  R26
000cbe 955a      	DEC  R21
000cbf f7d9      	BRNE __ADDF125
                 __ADDF126:
000cc0 2d50      	MOV  R21,R0
000cc1 2551      	EOR  R21,R1
000cc2 f072      	BRMI __ADDF127
000cc3 dfcb      	RCALL __UADD12
000cc4 f438      	BRCC __ADDF129
000cc5 9567      	ROR  R22
000cc6 95f7      	ROR  R31
000cc7 95e7      	ROR  R30
000cc8 9573      	INC  R23
000cc9 f413      	BRVC __ADDF129
000cca c020      	RJMP __MAXRES
                 __ADDF128:
000ccb dfb7      	RCALL __SWAPACC
                 __ADDF129:
000ccc df3e      	RCALL __REPACK
000ccd 915f      	POP  R21
000cce 9508      	RET
                 __ADDF1211:
000ccf f7d8      	BRCC __ADDF128
000cd0 cffb      	RJMP __ADDF129
                 __ADDF127:
000cd1 1bea      	SUB  R30,R26
000cd2 0bfb      	SBC  R31,R27
000cd3 0b68      	SBC  R22,R24
000cd4 f051      	BREQ __ZERORES
000cd5 f410      	BRCC __ADDF1210
000cd6 9400      	COM  R0
000cd7 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000cd8 2366      	TST  R22
000cd9 f392      	BRMI __ADDF129
000cda 0fee      	LSL  R30
000cdb 1fff      	ROL  R31
000cdc 1f66      	ROL  R22
000cdd 957a      	DEC  R23
000cde f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000cdf 27ee      	CLR  R30
000ce0 27ff      	CLR  R31
000ce1 2766      	CLR  R22
000ce2 2777      	CLR  R23
000ce3 915f      	POP  R21
000ce4 9508      	RET
                 
                 __MINRES:
000ce5 efef      	SER  R30
000ce6 efff      	SER  R31
000ce7 e76f      	LDI  R22,0x7F
000ce8 ef7f      	SER  R23
000ce9 915f      	POP  R21
000cea 9508      	RET
                 
                 __MAXRES:
000ceb efef      	SER  R30
000cec efff      	SER  R31
000ced e76f      	LDI  R22,0x7F
000cee e77f      	LDI  R23,0x7F
000cef 915f      	POP  R21
000cf0 9508      	RET
                 
                 __MULF12:
000cf1 935f      	PUSH R21
000cf2 df2a      	RCALL __UNPACK
000cf3 3870      	CPI  R23,0x80
000cf4 f351      	BREQ __ZERORES
000cf5 3890      	CPI  R25,0x80
000cf6 f341      	BREQ __ZERORES
000cf7 2401      	EOR  R0,R1
000cf8 9408      	SEC
000cf9 1f79      	ADC  R23,R25
000cfa f423      	BRVC __MULF124
000cfb f31c      	BRLT __ZERORES
                 __MULF125:
000cfc 2000      	TST  R0
000cfd f33a      	BRMI __MINRES
000cfe cfec      	RJMP __MAXRES
                 __MULF124:
000cff 920f      	PUSH R0
000d00 931f      	PUSH R17
000d01 932f      	PUSH R18
000d02 933f      	PUSH R19
000d03 934f      	PUSH R20
000d04 2711      	CLR  R17
000d05 2722      	CLR  R18
000d06 2799      	CLR  R25
000d07 9f68      	MUL  R22,R24
000d08 01a0      	MOVW R20,R0
000d09 9f8f      	MUL  R24,R31
000d0a 2d30      	MOV  R19,R0
000d0b 0d41      	ADD  R20,R1
000d0c 1f59      	ADC  R21,R25
000d0d 9f6b      	MUL  R22,R27
000d0e 0d30      	ADD  R19,R0
000d0f 1d41      	ADC  R20,R1
000d10 1f59      	ADC  R21,R25
000d11 9f8e      	MUL  R24,R30
000d12 d027      	RCALL __MULF126
000d13 9fbf      	MUL  R27,R31
000d14 d025      	RCALL __MULF126
000d15 9f6a      	MUL  R22,R26
000d16 d023      	RCALL __MULF126
000d17 9fbe      	MUL  R27,R30
000d18 d01d      	RCALL __MULF127
000d19 9faf      	MUL  R26,R31
000d1a d01b      	RCALL __MULF127
000d1b 9fae      	MUL  R26,R30
000d1c 0d11      	ADD  R17,R1
000d1d 1f29      	ADC  R18,R25
000d1e 1f39      	ADC  R19,R25
000d1f 1f49      	ADC  R20,R25
000d20 1f59      	ADC  R21,R25
000d21 2fe3      	MOV  R30,R19
000d22 2ff4      	MOV  R31,R20
000d23 2f65      	MOV  R22,R21
000d24 2f52      	MOV  R21,R18
000d25 914f      	POP  R20
000d26 913f      	POP  R19
000d27 912f      	POP  R18
000d28 911f      	POP  R17
000d29 900f      	POP  R0
000d2a 2366      	TST  R22
000d2b f02a      	BRMI __MULF122
000d2c 0f55      	LSL  R21
000d2d 1fee      	ROL  R30
000d2e 1fff      	ROL  R31
000d2f 1f66      	ROL  R22
000d30 c002      	RJMP __MULF123
                 __MULF122:
000d31 9573      	INC  R23
000d32 f24b      	BRVS __MULF125
                 __MULF123:
000d33 decd      	RCALL __ROUND_REPACK
000d34 915f      	POP  R21
000d35 9508      	RET
                 
                 __MULF127:
000d36 0d10      	ADD  R17,R0
000d37 1d21      	ADC  R18,R1
000d38 1f39      	ADC  R19,R25
000d39 c002      	RJMP __MULF128
                 __MULF126:
000d3a 0d20      	ADD  R18,R0
000d3b 1d31      	ADC  R19,R1
                 __MULF128:
000d3c 1f49      	ADC  R20,R25
000d3d 1f59      	ADC  R21,R25
000d3e 9508      	RET
                 
                 __DIVF21:
000d3f 935f      	PUSH R21
000d40 dedc      	RCALL __UNPACK
000d41 3870      	CPI  R23,0x80
000d42 f421      	BRNE __DIVF210
000d43 2011      	TST  R1
                 __DIVF211:
000d44 f40a      	BRPL __DIVF219
000d45 cf9f      	RJMP __MINRES
                 __DIVF219:
000d46 cfa4      	RJMP __MAXRES
                 __DIVF210:
000d47 3890      	CPI  R25,0x80
000d48 f409      	BRNE __DIVF218
                 __DIVF217:
000d49 cf95      	RJMP __ZERORES
                 __DIVF218:
000d4a 2401      	EOR  R0,R1
000d4b 9408      	SEC
000d4c 0b97      	SBC  R25,R23
000d4d f41b      	BRVC __DIVF216
000d4e f3d4      	BRLT __DIVF217
000d4f 2000      	TST  R0
000d50 cff3      	RJMP __DIVF211
                 __DIVF216:
000d51 2f79      	MOV  R23,R25
000d52 931f      	PUSH R17
000d53 932f      	PUSH R18
000d54 933f      	PUSH R19
000d55 934f      	PUSH R20
000d56 2411      	CLR  R1
000d57 2711      	CLR  R17
000d58 2722      	CLR  R18
000d59 2733      	CLR  R19
000d5a 2744      	CLR  R20
000d5b 2755      	CLR  R21
000d5c e290      	LDI  R25,32
                 __DIVF212:
000d5d 17ae      	CP   R26,R30
000d5e 07bf      	CPC  R27,R31
000d5f 0786      	CPC  R24,R22
000d60 0741      	CPC  R20,R17
000d61 f030      	BRLO __DIVF213
000d62 1bae      	SUB  R26,R30
000d63 0bbf      	SBC  R27,R31
000d64 0b86      	SBC  R24,R22
000d65 0b41      	SBC  R20,R17
000d66 9408      	SEC
000d67 c001      	RJMP __DIVF214
                 __DIVF213:
000d68 9488      	CLC
                 __DIVF214:
000d69 1f55      	ROL  R21
000d6a 1f22      	ROL  R18
000d6b 1f33      	ROL  R19
000d6c 1c11      	ROL  R1
000d6d 1faa      	ROL  R26
000d6e 1fbb      	ROL  R27
000d6f 1f88      	ROL  R24
000d70 1f44      	ROL  R20
000d71 959a      	DEC  R25
000d72 f751      	BRNE __DIVF212
000d73 01f9      	MOVW R30,R18
000d74 2d61      	MOV  R22,R1
000d75 914f      	POP  R20
000d76 913f      	POP  R19
000d77 912f      	POP  R18
000d78 911f      	POP  R17
000d79 2366      	TST  R22
000d7a f032      	BRMI __DIVF215
000d7b 0f55      	LSL  R21
000d7c 1fee      	ROL  R30
000d7d 1fff      	ROL  R31
000d7e 1f66      	ROL  R22
000d7f 957a      	DEC  R23
000d80 f243      	BRVS __DIVF217
                 __DIVF215:
000d81 de7f      	RCALL __ROUND_REPACK
000d82 915f      	POP  R21
000d83 9508      	RET
                 
                 __CMPF12:
000d84 2399      	TST  R25
000d85 f09a      	BRMI __CMPF120
000d86 2377      	TST  R23
000d87 f042      	BRMI __CMPF121
000d88 1797      	CP   R25,R23
000d89 f048      	BRLO __CMPF122
000d8a f429      	BRNE __CMPF121
000d8b 17ae      	CP   R26,R30
000d8c 07bf      	CPC  R27,R31
000d8d 0786      	CPC  R24,R22
000d8e f020      	BRLO __CMPF122
000d8f f031      	BREQ __CMPF123
                 __CMPF121:
000d90 9498      	CLZ
000d91 9488      	CLC
000d92 9508      	RET
                 __CMPF122:
000d93 9498      	CLZ
000d94 9408      	SEC
000d95 9508      	RET
                 __CMPF123:
000d96 9418      	SEZ
000d97 9488      	CLC
000d98 9508      	RET
                 __CMPF120:
000d99 2377      	TST  R23
000d9a f7c2      	BRPL __CMPF122
000d9b 1797      	CP   R25,R23
000d9c f398      	BRLO __CMPF121
000d9d f7a9      	BRNE __CMPF122
000d9e 17ea      	CP   R30,R26
000d9f 07fb      	CPC  R31,R27
000da0 0768      	CPC  R22,R24
000da1 f388      	BRLO __CMPF122
000da2 f399      	BREQ __CMPF123
000da3 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000da4 2400      	CLR  R0
000da5 0daf      	ADD  R26,R15
000da6 1db0      	ADC  R27,R0
000da7 9508      	RET
                 
                 __ADDD12:
000da8 0fea      	ADD  R30,R26
000da9 1ffb      	ADC  R31,R27
000daa 1f68      	ADC  R22,R24
000dab 1f79      	ADC  R23,R25
000dac 9508      	RET
                 
                 __SUBD12:
000dad 1bea      	SUB  R30,R26
000dae 0bfb      	SBC  R31,R27
000daf 0b68      	SBC  R22,R24
000db0 0b79      	SBC  R23,R25
000db1 9508      	RET
                 
                 __XORD12:
000db2 27ea      	EOR  R30,R26
000db3 27fb      	EOR  R31,R27
000db4 2768      	EOR  R22,R24
000db5 2779      	EOR  R23,R25
000db6 9508      	RET
                 
                 __ANEGD1:
000db7 95f0      	COM  R31
000db8 9560      	COM  R22
000db9 9570      	COM  R23
000dba 95e1      	NEG  R30
000dbb 4fff      	SBCI R31,-1
000dbc 4f6f      	SBCI R22,-1
000dbd 4f7f      	SBCI R23,-1
000dbe 9508      	RET
                 
                 __LSLW2:
000dbf 0fee      	LSL  R30
000dc0 1fff      	ROL  R31
000dc1 0fee      	LSL  R30
000dc2 1fff      	ROL  R31
000dc3 9508      	RET
                 
                 __LSLD1:
000dc4 0fee      	LSL  R30
000dc5 1fff      	ROL  R31
000dc6 1f66      	ROL  R22
000dc7 1f77      	ROL  R23
000dc8 9508      	RET
                 
                 __CBD1:
000dc9 2ffe      	MOV  R31,R30
000dca 0fff      	ADD  R31,R31
000dcb 0bff      	SBC  R31,R31
000dcc 2f6f      	MOV  R22,R31
000dcd 2f7f      	MOV  R23,R31
000dce 9508      	RET
                 
                 __CWD1:
000dcf 2f6f      	MOV  R22,R31
000dd0 0f66      	ADD  R22,R22
000dd1 0b66      	SBC  R22,R22
000dd2 2f76      	MOV  R23,R22
000dd3 9508      	RET
                 
                 __DIVB21U:
000dd4 2400      	CLR  R0
000dd5 e098      	LDI  R25,8
                 __DIVB21U1:
000dd6 0faa      	LSL  R26
000dd7 1c00      	ROL  R0
000dd8 1a0e      	SUB  R0,R30
000dd9 f410      	BRCC __DIVB21U2
000dda 0e0e      	ADD  R0,R30
000ddb c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ddc 60a1      	SBR  R26,1
                 __DIVB21U3:
000ddd 959a      	DEC  R25
000dde f7b9      	BRNE __DIVB21U1
000ddf 2fea      	MOV  R30,R26
000de0 2da0      	MOV  R26,R0
000de1 9508      	RET
                 
                 __DIVB21:
000de2 d039      	RCALL __CHKSIGNB
000de3 dff0      	RCALL __DIVB21U
000de4 f40e      	BRTC __DIVB211
000de5 95e1      	NEG  R30
                 __DIVB211:
000de6 9508      	RET
                 
                 __DIVD21U:
000de7 933f      	PUSH R19
000de8 934f      	PUSH R20
000de9 935f      	PUSH R21
000dea 2400      	CLR  R0
000deb 2411      	CLR  R1
000dec 2744      	CLR  R20
000ded 2755      	CLR  R21
000dee e230      	LDI  R19,32
                 __DIVD21U1:
000def 0faa      	LSL  R26
000df0 1fbb      	ROL  R27
000df1 1f88      	ROL  R24
000df2 1f99      	ROL  R25
000df3 1c00      	ROL  R0
000df4 1c11      	ROL  R1
000df5 1f44      	ROL  R20
000df6 1f55      	ROL  R21
000df7 1a0e      	SUB  R0,R30
000df8 0a1f      	SBC  R1,R31
000df9 0b46      	SBC  R20,R22
000dfa 0b57      	SBC  R21,R23
000dfb f428      	BRCC __DIVD21U2
000dfc 0e0e      	ADD  R0,R30
000dfd 1e1f      	ADC  R1,R31
000dfe 1f46      	ADC  R20,R22
000dff 1f57      	ADC  R21,R23
000e00 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000e01 60a1      	SBR  R26,1
                 __DIVD21U3:
000e02 953a      	DEC  R19
000e03 f759      	BRNE __DIVD21U1
000e04 01fd      	MOVW R30,R26
000e05 01bc      	MOVW R22,R24
000e06 01d0      	MOVW R26,R0
000e07 01ca      	MOVW R24,R20
000e08 915f      	POP  R21
000e09 914f      	POP  R20
000e0a 913f      	POP  R19
000e0b 9508      	RET
                 
                 __MODB21:
000e0c 94e8      	CLT
000e0d ffa7      	SBRS R26,7
000e0e c002      	RJMP __MODB211
000e0f 95a1      	NEG  R26
000e10 9468      	SET
                 __MODB211:
000e11 fde7      	SBRC R30,7
000e12 95e1      	NEG  R30
000e13 dfc0      	RCALL __DIVB21U
000e14 2fea      	MOV  R30,R26
000e15 f40e      	BRTC __MODB212
000e16 95e1      	NEG  R30
                 __MODB212:
000e17 9508      	RET
                 
                 __MODD21U:
000e18 dfce      	RCALL __DIVD21U
000e19 01fd      	MOVW R30,R26
000e1a 01bc      	MOVW R22,R24
000e1b 9508      	RET
                 
                 __CHKSIGNB:
000e1c 94e8      	CLT
000e1d ffe7      	SBRS R30,7
000e1e c002      	RJMP __CHKSB1
000e1f 95e1      	NEG  R30
000e20 9468      	SET
                 __CHKSB1:
000e21 ffa7      	SBRS R26,7
000e22 c004      	RJMP __CHKSB2
000e23 95a1      	NEG  R26
000e24 f800      	BLD  R0,0
000e25 9403      	INC  R0
000e26 fa00      	BST  R0,0
                 __CHKSB2:
000e27 9508      	RET
                 
                 __GETW1P:
000e28 91ed      	LD   R30,X+
000e29 91fc      	LD   R31,X
000e2a 9711      	SBIW R26,1
000e2b 9508      	RET
                 
                 __GETD1P:
000e2c 91ed      	LD   R30,X+
000e2d 91fd      	LD   R31,X+
000e2e 916d      	LD   R22,X+
000e2f 917c      	LD   R23,X
000e30 9713      	SBIW R26,3
000e31 9508      	RET
                 
                 __PUTDP1:
000e32 93ed      	ST   X+,R30
000e33 93fd      	ST   X+,R31
000e34 936d      	ST   X+,R22
000e35 937c      	ST   X,R23
000e36 9508      	RET
                 
                 __GETD1S0:
000e37 81e8      	LD   R30,Y
000e38 81f9      	LDD  R31,Y+1
000e39 816a      	LDD  R22,Y+2
000e3a 817b      	LDD  R23,Y+3
000e3b 9508      	RET
                 
                 __GETD2S0:
000e3c 81a8      	LD   R26,Y
000e3d 81b9      	LDD  R27,Y+1
000e3e 818a      	LDD  R24,Y+2
000e3f 819b      	LDD  R25,Y+3
000e40 9508      	RET
                 
                 __PUTD1S0:
000e41 83e8      	ST   Y,R30
000e42 83f9      	STD  Y+1,R31
000e43 836a      	STD  Y+2,R22
000e44 837b      	STD  Y+3,R23
000e45 9508      	RET
                 
                 __PUTPARD1:
000e46 937a      	ST   -Y,R23
000e47 936a      	ST   -Y,R22
000e48 93fa      	ST   -Y,R31
000e49 93ea      	ST   -Y,R30
000e4a 9508      	RET
                 
                 __PUTPARD2:
000e4b 939a      	ST   -Y,R25
000e4c 938a      	ST   -Y,R24
000e4d 93ba      	ST   -Y,R27
000e4e 93aa      	ST   -Y,R26
000e4f 9508      	RET
                 
                 __CDF2U:
000e50 9468      	SET
000e51 c001      	RJMP __CDF2U0
                 __CDF2:
000e52 94e8      	CLT
                 __CDF2U0:
000e53 d001      	RCALL __SWAPD12
000e54 de13      	RCALL __CDF1U0
                 
                 __SWAPD12:
000e55 2e18      	MOV  R1,R24
000e56 2f86      	MOV  R24,R22
000e57 2d61      	MOV  R22,R1
000e58 2e19      	MOV  R1,R25
000e59 2f97      	MOV  R25,R23
000e5a 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000e5b 2e1b      	MOV  R1,R27
000e5c 2fbf      	MOV  R27,R31
000e5d 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000e5e 2e1a      	MOV  R1,R26
000e5f 2fae      	MOV  R26,R30
000e60 2de1      	MOV  R30,R1
000e61 9508      	RET
                 
                 __CPD10:
000e62 9730      	SBIW R30,0
000e63 4060      	SBCI R22,0
000e64 4070      	SBCI R23,0
000e65 9508      	RET
                 
                 __CPD12:
000e66 17ea      	CP   R30,R26
000e67 07fb      	CPC  R31,R27
000e68 0768      	CPC  R22,R24
000e69 0779      	CPC  R23,R25
000e6a 9508      	RET
                 
                 __SAVELOCR6:
000e6b 935a      	ST   -Y,R21
                 __SAVELOCR5:
000e6c 934a      	ST   -Y,R20
                 __SAVELOCR4:
000e6d 933a      	ST   -Y,R19
                 __SAVELOCR3:
000e6e 932a      	ST   -Y,R18
                 __SAVELOCR2:
000e6f 931a      	ST   -Y,R17
000e70 930a      	ST   -Y,R16
000e71 9508      	RET
                 
                 __LOADLOCR6:
000e72 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000e73 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000e74 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000e75 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000e76 8119      	LDD  R17,Y+1
000e77 8108      	LD   R16,Y
000e78 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
000e79 0fac      	ADD  R26,R28
000e7a 1fbd      	ADC  R27,R29
                 __INITLOC0:
000e7b 9005      	LPM  R0,Z+
000e7c 920d      	ST   X+,R0
000e7d 958a      	DEC  R24
000e7e f7e1      	BRNE __INITLOC0
000e7f 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  64 r1 :  34 r2 :   1 r3 :   0 r4 :   5 r5 :   3 r6 :   1 r7 :   1 
r8 :   0 r9 :   4 r10:   4 r11:   3 r12:   2 r13:   4 r14:   0 r15:   4 
r16:  72 r17:  87 r18:  61 r19:  42 r20:  50 r21:  90 r22: 161 r23: 143 
r24:  99 r25:  80 r26: 276 r27: 148 r28:  39 r29:   2 r30: 561 r31: 233 
x  :  45 y  : 451 z  :  27 
Registers used: 32 out of 35 (91.4%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  20 
adiw  :  44 and   :   5 andi  :   8 asr   :   0 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  50 
brge  :   3 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  30 
brlt  :   3 brmi  :  11 brne  :  65 brpl  :   9 brsh  :  10 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 407 
cbi   :  15 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  53 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :   8 
cp    :  21 cpc   :  28 cpi   :  86 cpse  :   0 dec   :  16 des   :   0 
eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   6 inc   :   7 jmp   :  25 ld    :  60 ldd   : 218 ldi   : 343 
lds   : 108 lpm   :  15 lsl   :  17 lsr   :   3 mov   :  87 movw  :  71 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :   9 out   :  30 pop   :  32 push  :  32 rcall :  54 ret   : 152 
reti  :   1 rjmp  : 159 rol   :  37 ror   :  15 sbc   :  15 sbci  :  29 
sbi   :  15 sbic  :   1 sbis  :   4 sbiw  :  34 sbr   :   4 sbrc  :   4 
sbrs  :  20 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 135 std   :  97 sts   :  86 sub   :   8 subi  :  56 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 83 out of 116 (71.6%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001d00   7318    106   7424   32768  22.7%
[.dseg] 0x000060 0x000448      0    488    488    2048  23.8%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 14 warnings
