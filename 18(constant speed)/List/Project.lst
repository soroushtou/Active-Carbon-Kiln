
AVRASM ver. 2.1.30  D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm Fri Jul 23 17:29:44 2021

D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1087): warning: Register r4 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1088): warning: Register r5 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1089): warning: Register r6 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1090): warning: Register r7 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1091): warning: Register r9 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1092): warning: Register r8 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1093): warning: Register r11 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1094): warning: Register r10 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1095): warning: Register r13 already defined by the .DEF directive
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1096): warning: Register r12 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Release
                 ;Chip type              : ATmega32A
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : float, width, precision
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32A
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _measure_counter=R4
                 	.DEF _measure_counter_msb=R5
                 	.DEF _timer_counter=R6
                 	.DEF _timer_counter_msb=R7
                 	.DEF _rx_wr_index=R9
                 	.DEF _rx_rd_index=R8
                 	.DEF _rx_counter=R11
                 	.DEF __lcd_x=R10
                 	.DEF __lcd_y=R13
                 	.DEF __lcd_maxx=R12
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 005d 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 00af 	JMP  _ext_int2_isr
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 00b5 	JMP  _timer1_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 008c 	JMP  _usart_rx_isr
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 ;REGISTER BIT VARIABLES INITIALIZATION
                 __REG_BIT_VARS:
00002a 0000      	.DW  0x0000
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
00002b 0000
00002c 0000      	.DB  0x0,0x0,0x0,0x0
                 
                 _0x0:
00002d 3425
00002e 312e
00002f 6766
000030 2500      	.DB  0x25,0x34,0x2E,0x31,0x66,0x67,0x0,0x25
000031 2e34
000032 6631
000033 2067
000034 3425      	.DB  0x34,0x2E,0x31,0x66,0x67,0x20,0x25,0x34
000035 312e
000036 6766
000037 2520
000038 2e34      	.DB  0x2E,0x31,0x66,0x67,0x20,0x25,0x34,0x2E
000039 6631
00003a 2067
00003b 3425
00003c 312e      	.DB  0x31,0x66,0x67,0x20,0x25,0x34,0x2E,0x31
00003d 6766
00003e 0020
00003f 6f44
000040 7463      	.DB  0x66,0x67,0x20,0x0,0x44,0x6F,0x63,0x74
000041 726f
000042 6e20
000043 6461
000044 7265      	.DB  0x6F,0x72,0x20,0x6E,0x61,0x64,0x65,0x72
000045 0069      	.DB  0x69,0x0
                 _0x2000003:
000046 c080      	.DB  0x80,0xC0
                 _0x2020000:
000047 4e2d
000048 4e41
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1146): warning: .cseg .db misalignment - padding zero byte
000049 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2040060:
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1148): warning: .cseg .db misalignment - padding zero byte
00004a 0001      	.DB  0x1
                 _0x2040000:
00004b 4e2d
00004c 4e41
00004d 4900
00004e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Flash Sony Backup\Dynamic scaling 2\18(constant speed)\List\Project.asm(1151): warning: .cseg .db misalignment - padding zero byte
00004f 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
000050 0001      	.DW  0x01
000051 0002      	.DW  0x02
000052 0054      	.DW  __REG_BIT_VARS*2
                 
000053 0004      	.DW  0x04
000054 0008      	.DW  0x08
000055 0056      	.DW  __REG_VARS*2
                 
000056 0002      	.DW  0x02
000057 038c      	.DW  __base_y_G100
000058 008c      	.DW  _0x2000003*2
                 
000059 0001      	.DW  0x01
00005a 0390      	.DW  __seed_G102
00005b 0094      	.DW  _0x2040060*2
                 
                 _0xFFFFFFFF:
00005c 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00005d 94f8      	CLI
00005e 27ee      	CLR  R30
00005f bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000060 e0f1      	LDI  R31,1
000061 bff5      	OUT  MCUCR,R31
000062 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000063 e1f8      	LDI  R31,0x18
000064 bdf1      	OUT  WDTCR,R31
000065 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000066 e08d      	LDI  R24,(14-2)+1
000067 e0a2      	LDI  R26,2
000068 27bb      	CLR  R27
                 __CLEAR_REG:
000069 93ed      	ST   X+,R30
00006a 958a      	DEC  R24
00006b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006c e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
00006d e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00006e e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00006f 93ed      	ST   X+,R30
000070 9701      	SBIW R24,1
000071 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000072 eae0      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000073 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000074 9185      	LPM  R24,Z+
000075 9195      	LPM  R25,Z+
000076 9700      	SBIW R24,0
000077 f061      	BREQ __GLOBAL_INI_END
000078 91a5      	LPM  R26,Z+
000079 91b5      	LPM  R27,Z+
00007a 9005      	LPM  R0,Z+
00007b 9015      	LPM  R1,Z+
00007c 01bf      	MOVW R22,R30
00007d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007e 9005      	LPM  R0,Z+
00007f 920d      	ST   X+,R0
000080 9701      	SBIW R24,1
000081 f7e1      	BRNE __GLOBAL_INI_LOOP
000082 01fb      	MOVW R30,R22
000083 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000084 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000085 bfed      	OUT  SPL,R30
000086 e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000087 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000088 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000089 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00008a 940c 0129 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;/*********************************
                 ;
                 ;   5KG   LOADCELL Driver  with HX711
                 ;
                 ;**********************************/
                 ;
                 ;#include <mega32a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;//#include <pgmspace.h>
                 ;//#include <fuzzy_code.h>
                 ;
                 ;
                 ;// Declare your global variables here
                 ;#define HX711_DOUT    PIND.3
                 ;#define HX711_SCK     PORTD.2
                 ;#define HX_COMPLEMENT 0x800000
                 ;#define HX_REF        0.360598//360.91549
                 ;
                 ;#define HX711_DOUT1    PIND.5
                 ;#define HX711_SCK1     PORTD.4
                 ;#define HX_REF1        0.360598//9.33
                 ;
                 ;#define HX711_DOUT2    PINB.1
                 ;#define HX711_SCK2     PORTB.0
                 ;#define HX_REF2        0.360598//9.33
                 ;
                 ;
                 ;void sort_array(float a[], int size);
                 ;unsigned long HX711_Read(void);
                 ;void get_scale(void);
                 ;void get_offset(void);
                 ;unsigned long HX711_Read1(void);
                 ;//void get_scale1(void);
                 ;void get_offset1(void);
                 ;unsigned long HX711_Read2(void);
                 ;//void get_scale2(void);
                 ;void get_offset2(void);
                 ;
                 ;long Weight_Shiwu = 0,Weight_Maopi =0,Weight_Shiwu1 = 0,Weight_Maopi1 =0,Weight_Shiwu2 = 0,Weight_Maopi2 =0;
                 ;long HX711_Buffer = 0,HX711_Buffer1 = 0,HX711_Buffer2 = 0;
                 ;float         scale_total = 0,scale = 0,scale1 = 0,scale2 = 0,scale_array[15],scale1_array[15],scale2_array[15];
                 ;
                 ;unsigned int measure_counter,timer_counter;//,pw=75,i,i2,i3,sw=0,i2;
                 ;//unsigned char  buffer1[12];
                 ;//unsigned char  buffer2[12];
                 ;//unsigned char  buffer3[12];
                 ;unsigned char  buffer4[12];
                 ;char  buffer[32];
                 ;char  str1[8];
                 ;//char  str2[8];
                 ;//char  str3[8];
                 ;//char  str4[8];
                 ;
                 ;
                 ;void send( unsigned char Data1[12]);//, unsigned char Data2[12], unsigned char Data3[12]);
                 ;//unsigned char buffer1[12];
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;
                 ;// USART Receiver buffer
                 ;#define RX_BUFFER_SIZE 24
                 ;char rx_buffer[RX_BUFFER_SIZE];
                 ;
                 ;#if RX_BUFFER_SIZE <= 256
                 ;unsigned char rx_wr_index=0,rx_rd_index=0;
                 ;#else
                 ;unsigned int rx_wr_index=0,rx_rd_index=0;
                 ;#endif
                 ;
                 ;#if RX_BUFFER_SIZE < 256
                 ;unsigned char rx_counter=0;
                 ;#else
                 ;unsigned int rx_counter=0;
                 ;#endif
                 ;
                 ;// This flag is set on USART Receiver buffer overflow
                 ;bit rx_buffer_overflow;
                 ;
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 0057 {
                 
                 	.CSEG
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
00008c 93ea      	ST   -Y,R30
00008d 93fa      	ST   -Y,R31
00008e b7ef      	IN   R30,SREG
00008f 93ea      	ST   -Y,R30
                 ; 0000 0058 char status,data;
                 ; 0000 0059 status=UCSRA;
000090 931a      	ST   -Y,R17
000091 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000092 b11b      	IN   R17,11
                 ; 0000 005A data=UDR;
000093 b10c      	IN   R16,12
                 ; 0000 005B if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000094 2fe1      	MOV  R30,R17
000095 71ec      	ANDI R30,LOW(0x1C)
000096 f489      	BRNE _0x3
                 ; 0000 005C    {
                 ; 0000 005D    rx_buffer[rx_wr_index++]=data;
000097 2de9      	MOV  R30,R9
000098 9493      	INC  R9
000099 e0f0      	LDI  R31,0
00009a 58ec      	SUBI R30,LOW(-_rx_buffer)
00009b 4ffc      	SBCI R31,HIGH(-_rx_buffer)
00009c 8300      	ST   Z,R16
                 ; 0000 005E #if RX_BUFFER_SIZE == 256
                 ; 0000 005F    // special case for receiver buffer size=256
                 ; 0000 0060    if (++rx_counter == 0) rx_buffer_overflow=1;
                 ; 0000 0061 #else
                 ; 0000 0062    if (rx_wr_index == RX_BUFFER_SIZE) rx_wr_index=0;
00009d e1e8      	LDI  R30,LOW(24)
00009e 15e9      	CP   R30,R9
00009f f409      	BRNE _0x4
0000a0 2499      	CLR  R9
                 ; 0000 0063    if (++rx_counter == RX_BUFFER_SIZE)
                 _0x4:
0000a1 94b3      	INC  R11
0000a2 e1e8      	LDI  R30,LOW(24)
0000a3 15eb      	CP   R30,R11
0000a4 f419      	BRNE _0x5
                 ; 0000 0064       {
                 ; 0000 0065       rx_counter=0;
0000a5 24bb      	CLR  R11
                 ; 0000 0066       rx_buffer_overflow=1;
0000a6 9468      	SET
0000a7 f820      	BLD  R2,0
                 ; 0000 0067       }
                 ; 0000 0068 #endif
                 ; 0000 0069    }
                 _0x5:
                 ; 0000 006A }
                 _0x3:
0000a8 9109      	LD   R16,Y+
0000a9 9119      	LD   R17,Y+
0000aa 91e9      	LD   R30,Y+
0000ab bfef      	OUT  SREG,R30
0000ac 91f9      	LD   R31,Y+
0000ad 91e9      	LD   R30,Y+
0000ae 9518      	RETI
                 ; .FEND
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0000 0071 {
                 ; 0000 0072 char data;
                 ; 0000 0073 while (rx_counter==0);
                 ;	data -> R17
                 ; 0000 0074 data=rx_buffer[rx_rd_index++];
                 ; 0000 0075 #if RX_BUFFER_SIZE != 256
                 ; 0000 0076 if (rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
                 ; 0000 0077 #endif
                 ; 0000 0078 #asm("cli")
                 ; 0000 0079 --rx_counter;
                 ; 0000 007A #asm("sei")
                 ; 0000 007B return data;
                 ; 0000 007C }
                 ;#pragma used-
                 ;#endif
                 ;
                 ;
                 ;// External Interrupt 2 service routine
                 ;interrupt [EXT_INT2] void ext_int2_isr(void)
                 ; 0000 0083 {
                 _ext_int2_isr:
                 ; .FSTART _ext_int2_isr
0000af 940e 0912 	CALL SUBOPT_0x0
                 ; 0000 0084 // Place your code here
                 ; 0000 0085 send(buffer4);
0000b1 e4a8      	LDI  R26,LOW(_buffer4)
0000b2 e0b3      	LDI  R27,HIGH(_buffer4)
0000b3 d2c1      	RCALL _send
                 ; 0000 0086 }
0000b4 c066      	RJMP _0x5B
                 ; .FEND
                 ;
                 ;
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0000 008A {
                 _timer1_ovf_isr:
                 ; .FSTART _timer1_ovf_isr
0000b5 940e 0912 	CALL SUBOPT_0x0
                 ; 0000 008B // Reinitialize Timer1 value
                 ; 0000 008C TCNT1H=0xCF2C >> 8;
0000b7 ecef      	LDI  R30,LOW(207)
0000b8 bded      	OUT  0x2D,R30
                 ; 0000 008D TCNT1L=0xCF2C & 0xff;
0000b9 e2ec      	LDI  R30,LOW(44)
0000ba bdec      	OUT  0x2C,R30
                 ; 0000 008E timer_counter ++;
0000bb 01f3      	MOVW R30,R6
0000bc 9631      	ADIW R30,1
0000bd 013f      	MOVW R6,R30
                 ; 0000 008F // Place your code here
                 ; 0000 0090 if(timer_counter == 51){    //6.7sec
0000be e3e3      	LDI  R30,LOW(51)
0000bf e0f0      	LDI  R31,HIGH(51)
0000c0 15e6      	CP   R30,R6
0000c1 05f7      	CPC  R31,R7
0000c2 f009      	BREQ PC+2
0000c3 c057      	RJMP _0xA
                 ; 0000 0091 scale_total = scale_total / measure_counter;
0000c4 01f2      	MOVW R30,R4
0000c5 940e 0920 	CALL SUBOPT_0x1
0000c7 2766      	CLR  R22
0000c8 2777      	CLR  R23
0000c9 940e 0bd9 	CALL __CDF1
0000cb 940e 0cb1 	CALL __DIVF21
0000cd 940e 0929 	CALL SUBOPT_0x2
                 ; 0000 0092 //OCR2 = (int)fuzzy[x][y]*2.55;
                 ; 0000 0093 //itoa(scale_total,str1);
                 ; 0000 0094 sprintf(buffer4,"%4.1fg",scale_total);
0000cf e4e8      	LDI  R30,LOW(_buffer4)
0000d0 e0f3      	LDI  R31,HIGH(_buffer4)
0000d1 93fa      	ST   -Y,R31
0000d2 93ea      	ST   -Y,R30
                +
0000d3 e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0000d4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW1FN _0x0,0
0000d5 93fa      	ST   -Y,R31
0000d6 93ea      	ST   -Y,R30
0000d7 940e 0932 	CALL SUBOPT_0x3
0000d9 e084      	LDI  R24,4
0000da 940e 07ae 	CALL _sprintf
0000dc 9628      	ADIW R28,8
                 ; 0000 0095 sprintf(buffer,"%4.1fg %4.1fg %4.1fg %4.1fg ",scale,scale1,scale2,scale_total);//sprintf(buffer," %ld ",Weight_Shiwu);// ...
0000dd e5e4      	LDI  R30,LOW(_buffer)
0000de e0f3      	LDI  R31,HIGH(_buffer)
0000df 93fa      	ST   -Y,R31
0000e0 93ea      	ST   -Y,R30
                +
0000e1 e6e1     +LDI R30 , LOW ( 2 * _0x0 + ( 7 ) )
0000e2 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 7 ) )
                 	__POINTW1FN _0x0,7
0000e3 93fa      	ST   -Y,R31
0000e4 93ea      	ST   -Y,R30
0000e5 91e0 0288 	LDS  R30,_scale
0000e7 91f0 0289 	LDS  R31,_scale+1
0000e9 9160 028a 	LDS  R22,_scale+2
0000eb 9170 028b 	LDS  R23,_scale+3
0000ed 940e 0dd0 	CALL __PUTPARD1
0000ef 940e 093d 	CALL SUBOPT_0x4
0000f1 940e 0dd0 	CALL __PUTPARD1
0000f3 91e0 0290 	LDS  R30,_scale2
0000f5 91f0 0291 	LDS  R31,_scale2+1
0000f7 9160 0292 	LDS  R22,_scale2+2
0000f9 9170 0293 	LDS  R23,_scale2+3
0000fb 940e 0dd0 	CALL __PUTPARD1
0000fd 940e 0932 	CALL SUBOPT_0x3
0000ff e180      	LDI  R24,16
000100 940e 07ae 	CALL _sprintf
000102 9664      	ADIW R28,20
                 ; 0000 0096 lcd_clear();
000103 940e 040a 	CALL _lcd_clear
                 ; 0000 0097 lcd_gotoxy(0,0);
000105 e0e0      	LDI  R30,LOW(0)
000106 93ea      	ST   -Y,R30
000107 e0a0      	LDI  R26,LOW(0)
000108 940e 03fd 	CALL _lcd_gotoxy
                 ; 0000 0098 lcd_puts(buffer);
00010a e5a4      	LDI  R26,LOW(_buffer)
00010b e0b3      	LDI  R27,HIGH(_buffer)
00010c 940e 042b 	CALL _lcd_puts
                 ; 0000 0099 //delay_ms(10);
                 ; 0000 009A measure_counter = 0;
00010e 2444      	CLR  R4
00010f 2455      	CLR  R5
                 ; 0000 009B scale_total = 0;
000110 e0e0      	LDI  R30,LOW(0)
000111 93e0 0284 	STS  _scale_total,R30
000113 93e0 0285 	STS  _scale_total+1,R30
000115 93e0 0286 	STS  _scale_total+2,R30
000117 93e0 0287 	STS  _scale_total+3,R30
                 ; 0000 009C timer_counter = 0;
000119 2466      	CLR  R6
00011a 2477      	CLR  R7
                 ; 0000 009D }
                 ; 0000 009E }
                 _0xA:
                 _0x5B:
00011b 91e9      	LD   R30,Y+
00011c bfef      	OUT  SREG,R30
00011d 91f9      	LD   R31,Y+
00011e 91e9      	LD   R30,Y+
00011f 91b9      	LD   R27,Y+
000120 91a9      	LD   R26,Y+
000121 9199      	LD   R25,Y+
000122 9189      	LD   R24,Y+
000123 9179      	LD   R23,Y+
000124 9169      	LD   R22,Y+
000125 90f9      	LD   R15,Y+
000126 9019      	LD   R1,Y+
000127 9009      	LD   R0,Y+
000128 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;void main(void)
                 ; 0000 00A2 {
                 _main:
                 ; .FSTART _main
                 ; 0000 00A3 
                 ; 0000 00A4 //IO Pins/Ports :
                 ; 0000 00A5 PORTA=0x00;
000129 e0e0      	LDI  R30,LOW(0)
00012a bbeb      	OUT  0x1B,R30
                 ; 0000 00A6 DDRA=0x00;
00012b bbea      	OUT  0x1A,R30
                 ; 0000 00A7 
                 ; 0000 00A8 // Port B initialization
                 ; 0000 00A9 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=Out
                 ; 0000 00AA DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (1<<DDB0);
00012c e0e1      	LDI  R30,LOW(1)
00012d bbe7      	OUT  0x17,R30
                 ; 0000 00AB // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=0
                 ; 0000 00AC PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (1<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
00012e e0e4      	LDI  R30,LOW(4)
00012f bbe8      	OUT  0x18,R30
                 ; 0000 00AD 
                 ; 0000 00AE // Port C initialization
                 ; 0000 00AF // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=Out Bit0=Out
                 ; 0000 00B0 DDRC=(0<<DDC7) | (0<<DDC6) | (0<<DDC5) | (0<<DDC4) | (0<<DDC3) | (0<<DDC2) | (1<<DDC1) | (1<<DDC0);
000130 e0e3      	LDI  R30,LOW(3)
000131 bbe4      	OUT  0x14,R30
                 ; 0000 00B1 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=0 Bit0=0
                 ; 0000 00B2 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000132 e0e0      	LDI  R30,LOW(0)
000133 bbe5      	OUT  0x15,R30
                 ; 0000 00B3 
                 ; 0000 00B4 // Port D initialization
                 ; 0000 00B5 // Function: Bit7=In Bit6=In Bit5=In Bit4=Out Bit3=In Bit2=Out Bit1=Out Bit0=In
                 ; 0000 00B6 DDRD=(1<<DDD7) | (0<<DDD6) | (0<<DDD5) | (1<<DDD4) | (0<<DDD3) | (1<<DDD2) | (1<<DDD1) | (0<<DDD0);
000134 e9e6      	LDI  R30,LOW(150)
000135 bbe1      	OUT  0x11,R30
                 ; 0000 00B7 // State: Bit7=T Bit6=T Bit5=T Bit4=0 Bit3=T Bit2=0 Bit1=0 Bit0=T
                 ; 0000 00B8 PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000136 e0e0      	LDI  R30,LOW(0)
000137 bbe2      	OUT  0x12,R30
                 ; 0000 00B9 
                 ; 0000 00BA // USART initialization
                 ; 0000 00BB // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 00BC // USART Receiver: On
                 ; 0000 00BD // USART Transmitter: On
                 ; 0000 00BE // USART Mode: Asynchronous
                 ; 0000 00BF // USART Baud Rate: 9600
                 ; 0000 00C0 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000138 b9eb      	OUT  0xB,R30
                 ; 0000 00C1 UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
000139 e9e8      	LDI  R30,LOW(152)
00013a b9ea      	OUT  0xA,R30
                 ; 0000 00C2 UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
00013b e8e6      	LDI  R30,LOW(134)
00013c bde0      	OUT  0x20,R30
                 ; 0000 00C3 UBRRH=0x00;
00013d e0e0      	LDI  R30,LOW(0)
00013e bde0      	OUT  0x20,R30
                 ; 0000 00C4 UBRRL=0x33;
00013f e3e3      	LDI  R30,LOW(51)
000140 b9e9      	OUT  0x9,R30
                 ; 0000 00C5 
                 ; 0000 00C6 get_offset();
000141 d1b6      	RCALL _get_offset
                 ; 0000 00C7 get_offset1();
000142 d1de      	RCALL _get_offset1
                 ; 0000 00C8 get_offset2();
000143 d206      	RCALL _get_offset2
                 ; 0000 00C9 
                 ; 0000 00CA 
                 ; 0000 00CB lcd_init(16);
000144 e1a0      	LDI  R26,LOW(16)
000145 940e 0446 	CALL _lcd_init
                 ; 0000 00CC lcd_putsf("Doctor naderi");
                +
000147 e7ae     +LDI R26 , LOW ( 2 * _0x0 + ( 36 ) )
000148 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 36 ) )
                 	__POINTW2FN _0x0,36
000149 940e 0435 	CALL _lcd_putsf
                 ; 0000 00CD delay_ms(1000);
00014b eea8      	LDI  R26,LOW(1000)
00014c e0b3      	LDI  R27,HIGH(1000)
00014d 940e 0b63 	CALL _delay_ms
                 ; 0000 00CE 
                 ; 0000 00CF 
                 ; 0000 00D0 // Timer/Counter 1 initialization
                 ; 0000 00D1 // Clock source: System Clock
                 ; 0000 00D2 // Clock value: 125.000 kHz
                 ; 0000 00D3 // Mode: Normal top=0xFFFF
                 ; 0000 00D4 // OC1A output: Disconnected
                 ; 0000 00D5 // OC1B output: Disconnected
                 ; 0000 00D6 // Noise Canceler: Off
                 ; 0000 00D7 // Input Capture on Falling Edge
                 ; 0000 00D8 // Timer Period: 0.1 s
                 ; 0000 00D9 // Timer1 Overflow Interrupt: On
                 ; 0000 00DA // Input Capture Interrupt: Off
                 ; 0000 00DB // Compare A Match Interrupt: Off
                 ; 0000 00DC // Compare B Match Interrupt: Off
                 ; 0000 00DD TCCR1A=(0<<COM1A1) | (0<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
00014f e0e0      	LDI  R30,LOW(0)
000150 bdef      	OUT  0x2F,R30
                 ; 0000 00DE TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
000151 e0e3      	LDI  R30,LOW(3)
000152 bdee      	OUT  0x2E,R30
                 ; 0000 00DF TCNT1H=0xCF;
000153 ecef      	LDI  R30,LOW(207)
000154 bded      	OUT  0x2D,R30
                 ; 0000 00E0 TCNT1L=0x2C;
000155 e2ec      	LDI  R30,LOW(44)
000156 bdec      	OUT  0x2C,R30
                 ; 0000 00E1 ICR1H=0x00;
000157 e0e0      	LDI  R30,LOW(0)
000158 bde7      	OUT  0x27,R30
                 ; 0000 00E2 ICR1L=0x00;
000159 bde6      	OUT  0x26,R30
                 ; 0000 00E3 OCR1AH=0x00;
00015a bdeb      	OUT  0x2B,R30
                 ; 0000 00E4 OCR1AL=0x00;
00015b bdea      	OUT  0x2A,R30
                 ; 0000 00E5 OCR1BH=0x00;
00015c bde9      	OUT  0x29,R30
                 ; 0000 00E6 OCR1BL=0x00;
00015d bde8      	OUT  0x28,R30
                 ; 0000 00E7 
                 ; 0000 00E8 
                 ; 0000 00E9 // Timer/Counter 2 initialization
                 ; 0000 00EA // Clock source: System Clock
                 ; 0000 00EB // Clock value: 31.250 kHz
                 ; 0000 00EC // Mode: Fast PWM top=0xFF
                 ; 0000 00ED // OC2 output: Non-Inverted PWM
                 ; 0000 00EE // Timer Period: 8.192 ms
                 ; 0000 00EF // Output Pulse(s):
                 ; 0000 00F0 // OC2 Period: 8.192 ms Width: 0 us
                 ; 0000 00F1 ASSR=0<<AS2;
00015e bde2      	OUT  0x22,R30
                 ; 0000 00F2 TCCR2=(1<<PWM2) | (1<<COM21) | (0<<COM20) | (1<<CTC2) | (1<<CS22) | (1<<CS21) | (0<<CS20);
00015f e6ee      	LDI  R30,LOW(110)
000160 bde5      	OUT  0x25,R30
                 ; 0000 00F3 TCNT2=0x00;
000161 e0e0      	LDI  R30,LOW(0)
000162 bde4      	OUT  0x24,R30
                 ; 0000 00F4 OCR2=80;
000163 e5e0      	LDI  R30,LOW(80)
000164 bde3      	OUT  0x23,R30
                 ; 0000 00F5 
                 ; 0000 00F6 // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 00F7 TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
000165 e0e4      	LDI  R30,LOW(4)
000166 bfe9      	OUT  0x39,R30
                 ; 0000 00F8 
                 ; 0000 00F9 
                 ; 0000 00FA 
                 ; 0000 00FB // External Interrupt(s) initialization
                 ; 0000 00FC // INT0: Off
                 ; 0000 00FD // INT1: Off
                 ; 0000 00FE // INT2: On
                 ; 0000 00FF // INT2 Mode: Falling Edge
                 ; 0000 0100 GICR|=(0<<INT1) | (0<<INT0) | (1<<INT2);
000167 b7eb      	IN   R30,0x3B
000168 62e0      	ORI  R30,0x20
000169 bfeb      	OUT  0x3B,R30
                 ; 0000 0101 MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
00016a e0e0      	LDI  R30,LOW(0)
00016b bfe5      	OUT  0x35,R30
                 ; 0000 0102 MCUCSR=(0<<ISC2);
00016c bfe4      	OUT  0x34,R30
                 ; 0000 0103 GIFR=(0<<INTF1) | (0<<INTF0) | (1<<INTF2);
00016d e2e0      	LDI  R30,LOW(32)
00016e bfea      	OUT  0x3A,R30
                 ; 0000 0104 
                 ; 0000 0105 OCR2 = 255;
00016f efef      	LDI  R30,LOW(255)
000170 bde3      	OUT  0x23,R30
                 ; 0000 0106 // Global enable interrupts
                 ; 0000 0107 #asm("sei")
000171 9478      	sei
                 ; 0000 0108 
                 ; 0000 0109 
                 ; 0000 010A while (1)
                 _0xB:
                 ; 0000 010B       {
                 ; 0000 010C         get_scale();
000172 d081      	RCALL _get_scale
                 ; 0000 010D         /*ftoa(scale,2,str1);
                 ; 0000 010E         sprintf(buffer1,"%s",str1);
                 ; 0000 010F         ftoa(scale1,2,str2);
                 ; 0000 0110         sprintf(buffer2,"%s",str2);
                 ; 0000 0111         ftoa(scale2,2,str3);
                 ; 0000 0112         sprintf(buffer3,"%s",str3);*/
                 ; 0000 0113         scale_total += scale + scale1 + scale2;// + scale1 + scale2;
000173 940e 093d 	CALL SUBOPT_0x4
000175 91a0 0288 	LDS  R26,_scale
000177 91b0 0289 	LDS  R27,_scale+1
000179 9180 028a 	LDS  R24,_scale+2
00017b 9190 028b 	LDS  R25,_scale+3
00017d 940e 0c13 	CALL __ADDF12
00017f 91a0 0290 	LDS  R26,_scale2
000181 91b0 0291 	LDS  R27,_scale2+1
000183 9180 0292 	LDS  R24,_scale2+2
000185 9190 0293 	LDS  R25,_scale2+3
000187 940e 0c13 	CALL __ADDF12
000189 940e 0920 	CALL SUBOPT_0x1
00018b 940e 0c13 	CALL __ADDF12
00018d 940e 0929 	CALL SUBOPT_0x2
                 ; 0000 0114         measure_counter += 1;
00018f 01f2      	MOVW R30,R4
000190 9631      	ADIW R30,1
000191 012f      	MOVW R4,R30
                 ; 0000 0115       }
000192 cfdf      	RJMP _0xB
                 ; 0000 0116 }
                 _0xE:
000193 cfff      	RJMP _0xE
                 ; .FEND
                 ;
                 ;//Read from HX711 Modules :
                 ;unsigned long HX711_Read(void)
                 ; 0000 011A {
                 _HX711_Read:
                 ; .FSTART _HX711_Read
                 ; 0000 011B     unsigned long count;
                 ; 0000 011C     unsigned char i;
                 ; 0000 011D 
                 ; 0000 011E       HX711_DOUT=1;
000194 9724      	SBIW R28,4
000195 931a      	ST   -Y,R17
                 ;	count -> Y+1
                 ;	i -> R17
000196 9a83      	SBI  0x10,3
                 ; 0000 011F       HX711_SCK=0;
000197 9892      	CBI  0x12,2
                 ; 0000 0120       count=0;
000198 940e 0946 	CALL SUBOPT_0x5
                 ; 0000 0121       while(HX711_DOUT);
                 _0x13:
00019a 9983      	SBIC 0x10,3
00019b cffe      	RJMP _0x13
                 ; 0000 0122       for(i=0;i<24;i++)  //gain --> 128
00019c e010      	LDI  R17,LOW(0)
                 _0x17:
00019d 3118      	CPI  R17,24
00019e f460      	BRSH _0x18
                 ; 0000 0123         {
                 ; 0000 0124             HX711_SCK=1;
00019f 9a92      	SBI  0x12,2
                 ; 0000 0125             count=count<<1;
0001a0 940e 094c 	CALL SUBOPT_0x6
0001a2 940e 0951 	CALL SUBOPT_0x7
                 ; 0000 0126             HX711_SCK=0;
0001a4 9892      	CBI  0x12,2
                 ; 0000 0127             if(HX711_DOUT)
0001a5 9b83      	SBIS 0x10,3
0001a6 c002      	RJMP _0x1D
                 ; 0000 0128                 count++;
0001a7 940e 0958 	CALL SUBOPT_0x8
                 ; 0000 0129         }
                 _0x1D:
0001a9 5f1f      	SUBI R17,-1
0001aa cff2      	RJMP _0x17
                 _0x18:
                 ; 0000 012A        HX711_SCK=1;
0001ab 9a92      	SBI  0x12,2
                 ; 0000 012B       count=count ^ HX_COMPLEMENT;//2,s Complement
0001ac 940e 0962 	CALL SUBOPT_0x9
                 ; 0000 012C       HX711_SCK=0;
0001ae 9892      	CBI  0x12,2
                 ; 0000 012D       return(count);
0001af 940e 094c 	CALL SUBOPT_0x6
0001b1 8118      	LDD  R17,Y+0
0001b2 940c 04c0 	JMP  _0x20C0006
                 ; 0000 012E }
                 ; .FEND
                 ;unsigned long HX711_Read1(void)
                 ; 0000 0130 {
                 _HX711_Read1:
                 ; .FSTART _HX711_Read1
                 ; 0000 0131     unsigned long count;
                 ; 0000 0132     unsigned char i;
                 ; 0000 0133 
                 ; 0000 0134       HX711_DOUT1=1;
0001b4 9724      	SBIW R28,4
0001b5 931a      	ST   -Y,R17
                 ;	count -> Y+1
                 ;	i -> R17
0001b6 9a85      	SBI  0x10,5
                 ; 0000 0135       HX711_SCK1=0;
0001b7 9894      	CBI  0x12,4
                 ; 0000 0136       count=0;
0001b8 940e 0946 	CALL SUBOPT_0x5
                 ; 0000 0137       while(HX711_DOUT1);
                 _0x26:
0001ba 9985      	SBIC 0x10,5
0001bb cffe      	RJMP _0x26
                 ; 0000 0138       for(i=0;i<24;i++)  //gain --> 128
0001bc e010      	LDI  R17,LOW(0)
                 _0x2A:
0001bd 3118      	CPI  R17,24
0001be f460      	BRSH _0x2B
                 ; 0000 0139         {
                 ; 0000 013A             HX711_SCK1=1;
0001bf 9a94      	SBI  0x12,4
                 ; 0000 013B             count=count<<1;
0001c0 940e 094c 	CALL SUBOPT_0x6
0001c2 940e 0951 	CALL SUBOPT_0x7
                 ; 0000 013C             HX711_SCK1=0;
0001c4 9894      	CBI  0x12,4
                 ; 0000 013D             if(HX711_DOUT1)
0001c5 9b85      	SBIS 0x10,5
0001c6 c002      	RJMP _0x30
                 ; 0000 013E                 count++;
0001c7 940e 0958 	CALL SUBOPT_0x8
                 ; 0000 013F         }
                 _0x30:
0001c9 5f1f      	SUBI R17,-1
0001ca cff2      	RJMP _0x2A
                 _0x2B:
                 ; 0000 0140        HX711_SCK1=1;
0001cb 9a94      	SBI  0x12,4
                 ; 0000 0141       count=count ^ HX_COMPLEMENT;//2,s Complement
0001cc 940e 0962 	CALL SUBOPT_0x9
                 ; 0000 0142       HX711_SCK1=0;
0001ce 9894      	CBI  0x12,4
                 ; 0000 0143       return(count);
0001cf 940e 094c 	CALL SUBOPT_0x6
0001d1 8118      	LDD  R17,Y+0
0001d2 940c 04c0 	JMP  _0x20C0006
                 ; 0000 0144 }
                 ; .FEND
                 ;unsigned long HX711_Read2(void)
                 ; 0000 0146 {
                 _HX711_Read2:
                 ; .FSTART _HX711_Read2
                 ; 0000 0147     unsigned long count;
                 ; 0000 0148     unsigned char i;
                 ; 0000 0149 
                 ; 0000 014A       HX711_DOUT2=1;
0001d4 9724      	SBIW R28,4
0001d5 931a      	ST   -Y,R17
                 ;	count -> Y+1
                 ;	i -> R17
0001d6 9ab1      	SBI  0x16,1
                 ; 0000 014B       HX711_SCK2=0;
0001d7 98c0      	CBI  0x18,0
                 ; 0000 014C       count=0;
0001d8 940e 0946 	CALL SUBOPT_0x5
                 ; 0000 014D       while(HX711_DOUT2);
                 _0x39:
0001da 99b1      	SBIC 0x16,1
0001db cffe      	RJMP _0x39
                 ; 0000 014E       for(i=0;i<24;i++)  //gain --> 128
0001dc e010      	LDI  R17,LOW(0)
                 _0x3D:
0001dd 3118      	CPI  R17,24
0001de f460      	BRSH _0x3E
                 ; 0000 014F         {
                 ; 0000 0150             HX711_SCK2=1;
0001df 9ac0      	SBI  0x18,0
                 ; 0000 0151             count=count<<1;
0001e0 940e 094c 	CALL SUBOPT_0x6
0001e2 940e 0951 	CALL SUBOPT_0x7
                 ; 0000 0152             HX711_SCK2=0;
0001e4 98c0      	CBI  0x18,0
                 ; 0000 0153             if(HX711_DOUT2)
0001e5 9bb1      	SBIS 0x16,1
0001e6 c002      	RJMP _0x43
                 ; 0000 0154                 count++;
0001e7 940e 0958 	CALL SUBOPT_0x8
                 ; 0000 0155         }
                 _0x43:
0001e9 5f1f      	SUBI R17,-1
0001ea cff2      	RJMP _0x3D
                 _0x3E:
                 ; 0000 0156        HX711_SCK2=1;
0001eb 9ac0      	SBI  0x18,0
                 ; 0000 0157       count=count ^ HX_COMPLEMENT;//2,s Complement
0001ec 940e 0962 	CALL SUBOPT_0x9
                 ; 0000 0158       HX711_SCK2=0;
0001ee 98c0      	CBI  0x18,0
                 ; 0000 0159       return(count);
0001ef 940e 094c 	CALL SUBOPT_0x6
0001f1 8118      	LDD  R17,Y+0
0001f2 940c 04c0 	JMP  _0x20C0006
                 ; 0000 015A }
                 ; .FEND
                 ;
                 ;void get_scale(void)
                 ; 0000 015D {
                 _get_scale:
                 ; .FSTART _get_scale
                 ; 0000 015E     unsigned int i;
                 ; 0000 015F     //for(j=0; j<2 ;j++){
                 ; 0000 0160     for(i=0 ; i<15 ;i++){
0001f4 940e 0971 	CALL SUBOPT_0xA
                 ;	i -> R16,R17
                 _0x49:
                +
0001f6 300f     +CPI R16 , LOW ( 15 )
0001f7 e0e0     +LDI R30 , HIGH ( 15 )
0001f8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
0001f9 f008      	BRLO PC+2
0001fa c0ae      	RJMP _0x4A
                 ; 0000 0161 
                 ; 0000 0162 
                 ; 0000 0163     HX711_Buffer = 0;
0001fb 940e 0976 	CALL SUBOPT_0xB
                 ; 0000 0164     HX711_Buffer = HX711_Read();
0001fd df96      	RCALL _HX711_Read
0001fe 940e 0980 	CALL SUBOPT_0xC
                 ; 0000 0165     HX711_Buffer = HX711_Buffer/100;
000200 940e 0989 	CALL SUBOPT_0xD
000202 940e 0992 	CALL SUBOPT_0xE
000204 940e 0980 	CALL SUBOPT_0xC
                 ; 0000 0166         Weight_Shiwu = HX711_Buffer;
000206 91e0 0278 	LDS  R30,_HX711_Buffer
000208 91f0 0279 	LDS  R31,_HX711_Buffer+1
00020a 9160 027a 	LDS  R22,_HX711_Buffer+2
00020c 9170 027b 	LDS  R23,_HX711_Buffer+3
00020e 940e 0999 	CALL SUBOPT_0xF
                 ; 0000 0167         Weight_Shiwu = Weight_Shiwu - Weight_Maopi;
000210 91a0 0264 	LDS  R26,_Weight_Maopi
000212 91b0 0265 	LDS  R27,_Weight_Maopi+1
000214 9180 0266 	LDS  R24,_Weight_Maopi+2
000216 9190 0267 	LDS  R25,_Weight_Maopi+3
000218 940e 09a2 	CALL SUBOPT_0x10
00021a 940e 0d1f 	CALL __SUBD12
00021c 940e 0999 	CALL SUBOPT_0xF
                 ; 0000 0168 
                 ; 0000 0169         Weight_Shiwu = ((float)Weight_Shiwu/HX_REF);
00021e 940e 09ab 	CALL SUBOPT_0x11
000220 940e 09b1 	CALL SUBOPT_0x12
000222 e6a0      	LDI  R26,LOW(_Weight_Shiwu)
000223 e0b2      	LDI  R27,HIGH(_Weight_Shiwu)
000224 940e 09b8 	CALL SUBOPT_0x13
                 ; 0000 016A 
                 ; 0000 016B         scale_array[i] = (float)Weight_Shiwu/30;
000226 e9a4      	LDI  R26,LOW(_scale_array)
000227 e0b2      	LDI  R27,HIGH(_scale_array)
000228 940e 09be 	CALL SUBOPT_0x14
00022a 93ff      	PUSH R31
00022b 93ef      	PUSH R30
00022c 940e 09ab 	CALL SUBOPT_0x11
00022e 940e 09c3 	CALL SUBOPT_0x15
000230 91af      	POP  R26
000231 91bf      	POP  R27
000232 940e 0dbc 	CALL __PUTDP1
                 ; 0000 016C 
                 ; 0000 016D 
                 ; 0000 016E     HX711_Buffer1 = 0;
000234 940e 09ca 	CALL SUBOPT_0x16
                 ; 0000 016F     HX711_Buffer1 = HX711_Read1();
000236 df7d      	RCALL _HX711_Read1
000237 940e 09d4 	CALL SUBOPT_0x17
                 ; 0000 0170     HX711_Buffer1 = HX711_Buffer1/100;
000239 940e 09dd 	CALL SUBOPT_0x18
00023b 940e 0992 	CALL SUBOPT_0xE
00023d 940e 09d4 	CALL SUBOPT_0x17
                 ; 0000 0171         Weight_Shiwu1 = HX711_Buffer1;
00023f 91e0 027c 	LDS  R30,_HX711_Buffer1
000241 91f0 027d 	LDS  R31,_HX711_Buffer1+1
000243 9160 027e 	LDS  R22,_HX711_Buffer1+2
000245 9170 027f 	LDS  R23,_HX711_Buffer1+3
000247 940e 09e6 	CALL SUBOPT_0x19
                 ; 0000 0172         Weight_Shiwu1 = Weight_Shiwu1 - Weight_Maopi1;
000249 91a0 026c 	LDS  R26,_Weight_Maopi1
00024b 91b0 026d 	LDS  R27,_Weight_Maopi1+1
00024d 9180 026e 	LDS  R24,_Weight_Maopi1+2
00024f 9190 026f 	LDS  R25,_Weight_Maopi1+3
000251 940e 09ef 	CALL SUBOPT_0x1A
000253 940e 0d1f 	CALL __SUBD12
000255 940e 09e6 	CALL SUBOPT_0x19
                 ; 0000 0173 
                 ; 0000 0174         Weight_Shiwu1 = ((float)Weight_Shiwu1/HX_REF);
000257 940e 09f8 	CALL SUBOPT_0x1B
000259 940e 09b1 	CALL SUBOPT_0x12
00025b e6a8      	LDI  R26,LOW(_Weight_Shiwu1)
00025c e0b2      	LDI  R27,HIGH(_Weight_Shiwu1)
00025d 940e 09b8 	CALL SUBOPT_0x13
                 ; 0000 0175 
                 ; 0000 0176         scale1_array[i] = (float)Weight_Shiwu1/30;
00025f eda0      	LDI  R26,LOW(_scale1_array)
000260 e0b2      	LDI  R27,HIGH(_scale1_array)
000261 940e 09be 	CALL SUBOPT_0x14
000263 93ff      	PUSH R31
000264 93ef      	PUSH R30
000265 940e 09f8 	CALL SUBOPT_0x1B
000267 940e 09c3 	CALL SUBOPT_0x15
000269 91af      	POP  R26
00026a 91bf      	POP  R27
00026b 940e 0dbc 	CALL __PUTDP1
                 ; 0000 0177 
                 ; 0000 0178 
                 ; 0000 0179     HX711_Buffer2 = 0;
00026d 940e 09fe 	CALL SUBOPT_0x1C
                 ; 0000 017A     HX711_Buffer2 = HX711_Read2();
00026f df64      	RCALL _HX711_Read2
000270 940e 0a08 	CALL SUBOPT_0x1D
                 ; 0000 017B     HX711_Buffer2 = HX711_Buffer2/100;
000272 940e 0a11 	CALL SUBOPT_0x1E
000274 940e 0992 	CALL SUBOPT_0xE
000276 940e 0a08 	CALL SUBOPT_0x1D
                 ; 0000 017C         Weight_Shiwu2 = HX711_Buffer2;
000278 91e0 0280 	LDS  R30,_HX711_Buffer2
00027a 91f0 0281 	LDS  R31,_HX711_Buffer2+1
00027c 9160 0282 	LDS  R22,_HX711_Buffer2+2
00027e 9170 0283 	LDS  R23,_HX711_Buffer2+3
000280 940e 0a1a 	CALL SUBOPT_0x1F
                 ; 0000 017D         Weight_Shiwu2 = Weight_Shiwu2 - Weight_Maopi2;
000282 91a0 0274 	LDS  R26,_Weight_Maopi2
000284 91b0 0275 	LDS  R27,_Weight_Maopi2+1
000286 9180 0276 	LDS  R24,_Weight_Maopi2+2
000288 9190 0277 	LDS  R25,_Weight_Maopi2+3
00028a 940e 0a23 	CALL SUBOPT_0x20
00028c 940e 0d1f 	CALL __SUBD12
00028e 940e 0a1a 	CALL SUBOPT_0x1F
                 ; 0000 017E 
                 ; 0000 017F         Weight_Shiwu2 = ((float)Weight_Shiwu2/HX_REF);
000290 940e 0a2c 	CALL SUBOPT_0x21
000292 940e 09b1 	CALL SUBOPT_0x12
000294 e7a0      	LDI  R26,LOW(_Weight_Shiwu2)
000295 e0b2      	LDI  R27,HIGH(_Weight_Shiwu2)
000296 940e 09b8 	CALL SUBOPT_0x13
                 ; 0000 0180 
                 ; 0000 0181         scale2_array[i] = (float)Weight_Shiwu2/30;
000298 e0ac      	LDI  R26,LOW(_scale2_array)
000299 e0b3      	LDI  R27,HIGH(_scale2_array)
00029a 940e 09be 	CALL SUBOPT_0x14
00029c 93ff      	PUSH R31
00029d 93ef      	PUSH R30
00029e 940e 0a2c 	CALL SUBOPT_0x21
0002a0 940e 09c3 	CALL SUBOPT_0x15
0002a2 91af      	POP  R26
0002a3 91bf      	POP  R27
0002a4 940e 0dbc 	CALL __PUTDP1
                 ; 0000 0182     }
                +
0002a6 5f0f     +SUBI R16 , LOW ( - 1 )
0002a7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0002a8 cf4d      	RJMP _0x49
                 _0x4A:
                 ; 0000 0183     sort_array(scale_array,15);
0002a9 e9e4      	LDI  R30,LOW(_scale_array)
0002aa e0f2      	LDI  R31,HIGH(_scale_array)
0002ab 940e 0a32 	CALL SUBOPT_0x22
                 ; 0000 0184     scale = scale_array[7]*1.2874;
                +
0002ad 91e0 02b0+LDS R30 , _scale_array + ( 28 )
0002af 91f0 02b1+LDS R31 , _scale_array + ( 28 ) + 1
0002b1 9160 02b2+LDS R22 , _scale_array + ( 28 ) + 2
0002b3 9170 02b3+LDS R23 , _scale_array + ( 28 ) + 3
                 	__GETD1MN _scale_array,28
                +
0002b5 e8a6     +LDI R26 , LOW ( 0x3FA4C986 )
0002b6 ecb9     +LDI R27 , HIGH ( 0x3FA4C986 )
0002b7 ea84     +LDI R24 , BYTE3 ( 0x3FA4C986 )
0002b8 e39f     +LDI R25 , BYTE4 ( 0x3FA4C986 )
                 	__GETD2N 0x3FA4C986
0002b9 940e 0c63 	CALL __MULF12
0002bb 93e0 0288 	STS  _scale,R30
0002bd 93f0 0289 	STS  _scale+1,R31
0002bf 9360 028a 	STS  _scale+2,R22
0002c1 9370 028b 	STS  _scale+3,R23
                 ; 0000 0185     sort_array(scale1_array,15);
0002c3 ede0      	LDI  R30,LOW(_scale1_array)
0002c4 e0f2      	LDI  R31,HIGH(_scale1_array)
0002c5 940e 0a32 	CALL SUBOPT_0x22
                 ; 0000 0186     scale1 = scale1_array[7]*1.1929;
                +
0002c7 91e0 02ec+LDS R30 , _scale1_array + ( 28 )
0002c9 91f0 02ed+LDS R31 , _scale1_array + ( 28 ) + 1
0002cb 9160 02ee+LDS R22 , _scale1_array + ( 28 ) + 2
0002cd 9170 02ef+LDS R23 , _scale1_array + ( 28 ) + 3
                 	__GETD1MN _scale1_array,28
                +
0002cf efa2     +LDI R26 , LOW ( 0x3F98B0F2 )
0002d0 ebb0     +LDI R27 , HIGH ( 0x3F98B0F2 )
0002d1 e988     +LDI R24 , BYTE3 ( 0x3F98B0F2 )
0002d2 e39f     +LDI R25 , BYTE4 ( 0x3F98B0F2 )
                 	__GETD2N 0x3F98B0F2
0002d3 940e 0c63 	CALL __MULF12
0002d5 93e0 028c 	STS  _scale1,R30
0002d7 93f0 028d 	STS  _scale1+1,R31
0002d9 9360 028e 	STS  _scale1+2,R22
0002db 9370 028f 	STS  _scale1+3,R23
                 ; 0000 0187     sort_array(scale2_array,15);
0002dd e0ec      	LDI  R30,LOW(_scale2_array)
0002de e0f3      	LDI  R31,HIGH(_scale2_array)
0002df 940e 0a32 	CALL SUBOPT_0x22
                 ; 0000 0188     scale2 = scale2_array[7]*1.1039;
                +
0002e1 91e0 0328+LDS R30 , _scale2_array + ( 28 )
0002e3 91f0 0329+LDS R31 , _scale2_array + ( 28 ) + 1
0002e5 9160 032a+LDS R22 , _scale2_array + ( 28 ) + 2
0002e7 9170 032b+LDS R23 , _scale2_array + ( 28 ) + 3
                 	__GETD1MN _scale2_array,28
                +
0002e9 e9a8     +LDI R26 , LOW ( 0x3F8D4C98 )
0002ea e4bc     +LDI R27 , HIGH ( 0x3F8D4C98 )
0002eb e88d     +LDI R24 , BYTE3 ( 0x3F8D4C98 )
0002ec e39f     +LDI R25 , BYTE4 ( 0x3F8D4C98 )
                 	__GETD2N 0x3F8D4C98
0002ed 940e 0c63 	CALL __MULF12
0002ef 93e0 0290 	STS  _scale2,R30
0002f1 93f0 0291 	STS  _scale2+1,R31
0002f3 9360 0292 	STS  _scale2+2,R22
0002f5 9370 0293 	STS  _scale2+3,R23
                 ; 0000 0189     }
0002f7 c07a      	RJMP _0x20C000A
                 ; .FEND
                 ;
                 ;
                 ;//get offsets :
                 ;
                 ;void get_offset(void)
                 ; 0000 018F {
                 _get_offset:
                 ; .FSTART _get_offset
                 ; 0000 0190     int i=0;
                 ; 0000 0191 
                 ; 0000 0192     HX711_Buffer = 0;
0002f8 940e 0971 	CALL SUBOPT_0xA
                 ;	i -> R16,R17
0002fa 940e 0976 	CALL SUBOPT_0xB
                 ; 0000 0193 
                 ; 0000 0194    	for( i = 0 ; i < 10 ; i++)
                +
0002fc e000     +LDI R16 , LOW ( 0 )
0002fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4C:
                +
0002fe 300a     +CPI R16 , LOW ( 10 )
0002ff e0e0     +LDI R30 , HIGH ( 10 )
000300 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
000301 f464      	BRGE _0x4D
                 ; 0000 0195 	{
                 ; 0000 0196 		HX711_Buffer = HX711_Buffer + HX711_Read();
000302 de91      	RCALL _HX711_Read
000303 940e 0989 	CALL SUBOPT_0xD
000305 940e 0d1a 	CALL __ADDD12
000307 940e 0980 	CALL SUBOPT_0xC
                 ; 0000 0197         delay_us(500);
000309 940e 0a38 	CALL SUBOPT_0x23
                 ; 0000 0198 	}
                +
00030b 5f0f     +SUBI R16 , LOW ( - 1 )
00030c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00030d cff0      	RJMP _0x4C
                 _0x4D:
                 ; 0000 0199     HX711_Buffer = HX711_Buffer /10;
00030e 940e 0989 	CALL SUBOPT_0xD
000310 940e 0a3d 	CALL SUBOPT_0x24
000312 940e 0980 	CALL SUBOPT_0xC
                 ; 0000 019A     Weight_Maopi = HX711_Buffer/100;
000314 940e 0989 	CALL SUBOPT_0xD
000316 940e 0992 	CALL SUBOPT_0xE
000318 93e0 0264 	STS  _Weight_Maopi,R30
00031a 93f0 0265 	STS  _Weight_Maopi+1,R31
00031c 9360 0266 	STS  _Weight_Maopi+2,R22
00031e 9370 0267 	STS  _Weight_Maopi+3,R23
                 ; 0000 019B }
000320 c051      	RJMP _0x20C000A
                 ; .FEND
                 ;void get_offset1(void)
                 ; 0000 019D {
                 _get_offset1:
                 ; .FSTART _get_offset1
                 ; 0000 019E     int i=0;
                 ; 0000 019F 
                 ; 0000 01A0     HX711_Buffer1 = 0;
000321 940e 0971 	CALL SUBOPT_0xA
                 ;	i -> R16,R17
000323 940e 09ca 	CALL SUBOPT_0x16
                 ; 0000 01A1 
                 ; 0000 01A2    	for( i = 0 ; i < 10 ; i++)
                +
000325 e000     +LDI R16 , LOW ( 0 )
000326 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x4F:
                +
000327 300a     +CPI R16 , LOW ( 10 )
000328 e0e0     +LDI R30 , HIGH ( 10 )
000329 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
00032a f464      	BRGE _0x50
                 ; 0000 01A3 	{
                 ; 0000 01A4 		HX711_Buffer1 = HX711_Buffer1 + HX711_Read1();
00032b de88      	RCALL _HX711_Read1
00032c 940e 09dd 	CALL SUBOPT_0x18
00032e 940e 0d1a 	CALL __ADDD12
000330 940e 09d4 	CALL SUBOPT_0x17
                 ; 0000 01A5         delay_us(500);
000332 940e 0a38 	CALL SUBOPT_0x23
                 ; 0000 01A6 	}
                +
000334 5f0f     +SUBI R16 , LOW ( - 1 )
000335 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
000336 cff0      	RJMP _0x4F
                 _0x50:
                 ; 0000 01A7     HX711_Buffer1 = HX711_Buffer1 /10;
000337 940e 09dd 	CALL SUBOPT_0x18
000339 940e 0a3d 	CALL SUBOPT_0x24
00033b 940e 09d4 	CALL SUBOPT_0x17
                 ; 0000 01A8     Weight_Maopi1 = HX711_Buffer1/100;
00033d 940e 09dd 	CALL SUBOPT_0x18
00033f 940e 0992 	CALL SUBOPT_0xE
000341 93e0 026c 	STS  _Weight_Maopi1,R30
000343 93f0 026d 	STS  _Weight_Maopi1+1,R31
000345 9360 026e 	STS  _Weight_Maopi1+2,R22
000347 9370 026f 	STS  _Weight_Maopi1+3,R23
                 ; 0000 01A9 }
000349 c028      	RJMP _0x20C000A
                 ; .FEND
                 ;void get_offset2(void)
                 ; 0000 01AB {
                 _get_offset2:
                 ; .FSTART _get_offset2
                 ; 0000 01AC     int i=0;
                 ; 0000 01AD 
                 ; 0000 01AE     HX711_Buffer2 = 0;
00034a 940e 0971 	CALL SUBOPT_0xA
                 ;	i -> R16,R17
00034c 940e 09fe 	CALL SUBOPT_0x1C
                 ; 0000 01AF 
                 ; 0000 01B0    	for( i = 0 ; i < 10 ; i++)
                +
00034e e000     +LDI R16 , LOW ( 0 )
00034f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x52:
                +
000350 300a     +CPI R16 , LOW ( 10 )
000351 e0e0     +LDI R30 , HIGH ( 10 )
000352 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
000353 f464      	BRGE _0x53
                 ; 0000 01B1 	{
                 ; 0000 01B2 		HX711_Buffer2 = HX711_Buffer2 + HX711_Read2();
000354 de7f      	RCALL _HX711_Read2
000355 940e 0a11 	CALL SUBOPT_0x1E
000357 940e 0d1a 	CALL __ADDD12
000359 940e 0a08 	CALL SUBOPT_0x1D
                 ; 0000 01B3         delay_us(500);
00035b 940e 0a38 	CALL SUBOPT_0x23
                 ; 0000 01B4 	}
                +
00035d 5f0f     +SUBI R16 , LOW ( - 1 )
00035e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00035f cff0      	RJMP _0x52
                 _0x53:
                 ; 0000 01B5     HX711_Buffer2 = HX711_Buffer2 /10;
000360 940e 0a11 	CALL SUBOPT_0x1E
000362 940e 0a3d 	CALL SUBOPT_0x24
000364 940e 0a08 	CALL SUBOPT_0x1D
                 ; 0000 01B6     Weight_Maopi2 = HX711_Buffer2/100;
000366 940e 0a11 	CALL SUBOPT_0x1E
000368 940e 0992 	CALL SUBOPT_0xE
00036a 93e0 0274 	STS  _Weight_Maopi2,R30
00036c 93f0 0275 	STS  _Weight_Maopi2+1,R31
00036e 9360 0276 	STS  _Weight_Maopi2+2,R22
000370 9370 0277 	STS  _Weight_Maopi2+3,R23
                 ; 0000 01B7 }
                 _0x20C000A:
000372 9109      	LD   R16,Y+
000373 9119      	LD   R17,Y+
000374 9508      	RET
                 ; .FEND
                 ;
                 ;void send( unsigned char Data1[12])//, unsigned char Data2[12], unsigned char Data3[12])//,unsigned char Data2[12] )
                 ; 0000 01BA {
                 _send:
                 ; .FSTART _send
                 ; 0000 01BB puts(Data1);
000375 93ba      	ST   -Y,R27
000376 93aa      	ST   -Y,R26
                 ;	Data1 -> Y+0
000377 81a8      	LD   R26,Y
000378 81b9      	LDD  R27,Y+1
000379 940e 047a 	CALL _puts
                 ; 0000 01BC /*
                 ; 0000 01BD putchar(',');
                 ; 0000 01BE puts(Data2);
                 ; 0000 01BF putchar(',');
                 ; 0000 01C0 puts(Data3);*/
                 ; 0000 01C1 }
00037b c08c      	RJMP _0x20C0009
                 ; .FEND
                 ;
                 ;
                 ;
                 ;void sort_array(float a[], int size) {
                 ; 0000 01C5 void sort_array(float a[], int size) {
                 _sort_array:
                 ; .FSTART _sort_array
                 ; 0000 01C6     int i=0;
                 ; 0000 01C7     int o=0;
                 ; 0000 01C8     for(i=0; i<(size-1); i++) {
00037c 93ba      	ST   -Y,R27
00037d 93aa      	ST   -Y,R26
00037e 940e 0ded 	CALL __SAVELOCR4
                 ;	a -> Y+6
                 ;	size -> Y+4
                 ;	i -> R16,R17
                 ;	o -> R18,R19
                +
000380 e000     +LDI R16 , LOW ( 0 )
000381 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000382 e020     +LDI R18 , LOW ( 0 )
000383 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
000384 e000     +LDI R16 , LOW ( 0 )
000385 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x55:
000386 81ec      	LDD  R30,Y+4
000387 81fd      	LDD  R31,Y+4+1
000388 9731      	SBIW R30,1
000389 170e      	CP   R16,R30
00038a 071f      	CPC  R17,R31
00038b f00c      	BRLT PC+2
00038c c04b      	RJMP _0x56
                 ; 0000 01C9         for(o=0; o<(size-(i+1)); o++) {
                +
00038d e020     +LDI R18 , LOW ( 0 )
00038e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x58:
00038f 01f8      	MOVW R30,R16
000390 9631      	ADIW R30,1
000391 81ac      	LDD  R26,Y+4
000392 81bd      	LDD  R27,Y+4+1
000393 940e 0de0 	CALL __SWAPW12
000395 1bea      	SUB  R30,R26
000396 0bfb      	SBC  R31,R27
000397 172e      	CP   R18,R30
000398 073f      	CPC  R19,R31
000399 f5dc      	BRGE _0x59
                 ; 0000 01CA                 if(a[o] > a[o+1]) {
00039a 01f9      	MOVW R30,R18
00039b 940e 0a44 	CALL SUBOPT_0x25
00039d 937f      	PUSH R23
00039e 936f      	PUSH R22
00039f 93ff      	PUSH R31
0003a0 93ef      	PUSH R30
0003a1 01f9      	MOVW R30,R18
0003a2 9631      	ADIW R30,1
0003a3 940e 0a44 	CALL SUBOPT_0x25
0003a5 91af      	POP  R26
0003a6 91bf      	POP  R27
0003a7 918f      	POP  R24
0003a8 919f      	POP  R25
0003a9 940e 0cf6 	CALL __CMPF12
0003ab f009      	BREQ PC+2
0003ac f408      	BRCC PC+2
0003ad c024      	RJMP _0x5A
                 ; 0000 01CB                     int t = a[o];
                 ; 0000 01CC                     a[o] = a[o+1];
0003ae 9722      	SBIW R28,2
                 ;	a -> Y+8
                 ;	size -> Y+6
                 ;	t -> Y+0
0003af 01f9      	MOVW R30,R18
0003b0 940e 0a4d 	CALL SUBOPT_0x26
0003b2 940e 0db2 	CALL __GETW1P
0003b4 940e 0ba0 	CALL __CFD1U
0003b6 83e8      	ST   Y,R30
0003b7 83f9      	STD  Y+1,R31
0003b8 01f9      	MOVW R30,R18
0003b9 85a8      	LDD  R26,Y+8
0003ba 85b9      	LDD  R27,Y+8+1
0003bb 940e 09be 	CALL SUBOPT_0x14
0003bd 010f      	MOVW R0,R30
0003be 01f9      	MOVW R30,R18
0003bf 9631      	ADIW R30,1
0003c0 940e 0a4d 	CALL SUBOPT_0x26
0003c2 940e 0db6 	CALL __GETD1P
0003c4 01d0      	MOVW R26,R0
0003c5 940e 0dbc 	CALL __PUTDP1
                 ; 0000 01CD                     a[o+1] = t;
0003c7 01f9      	MOVW R30,R18
0003c8 9631      	ADIW R30,1
0003c9 940e 0a4d 	CALL SUBOPT_0x26
0003cb 81e8      	LD   R30,Y
0003cc 81f9      	LDD  R31,Y+1
0003cd 940e 0a54 	CALL SUBOPT_0x27
0003cf 940e 0dbc 	CALL __PUTDP1
                 ; 0000 01CE                 }
0003d1 9622      	ADIW R28,2
                 ; 0000 01CF         }
                 _0x5A:
                +
0003d2 5f2f     +SUBI R18 , LOW ( - 1 )
0003d3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0003d4 cfba      	RJMP _0x58
                 _0x59:
                 ; 0000 01D0     }
                +
0003d5 5f0f     +SUBI R16 , LOW ( - 1 )
0003d6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0003d7 cfae      	RJMP _0x55
                 _0x56:
                 ; 0000 01D1 }
0003d8 940e 0df4 	CALL __LOADLOCR4
0003da 9628      	ADIW R28,8
0003db 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0003dc 93aa      	ST   -Y,R26
0003dd b3eb      	IN   R30,0x1B
0003de 70ef      	ANDI R30,LOW(0xF)
0003df 2fae      	MOV  R26,R30
0003e0 81e8      	LD   R30,Y
0003e1 7fe0      	ANDI R30,LOW(0xF0)
0003e2 2bea      	OR   R30,R26
0003e3 bbeb      	OUT  0x1B,R30
                +
0003e4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003e5 958a     +DEC R24
0003e6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003e7 9ada      	SBI  0x1B,2
                +
0003e8 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003e9 958a     +DEC R24
0003ea f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003eb 98da      	CBI  0x1B,2
                +
0003ec e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0003ed 958a     +DEC R24
0003ee f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0003ef 940c 0478 	JMP  _0x20C0008
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0003f1 93aa      	ST   -Y,R26
0003f2 81a8      	LD   R26,Y
0003f3 dfe8      	RCALL __lcd_write_nibble_G100
0003f4 81e8          ld    r30,y
0003f5 95e2          swap  r30
0003f6 83e8          st    y,r30
0003f7 81a8      	LD   R26,Y
0003f8 dfe3      	RCALL __lcd_write_nibble_G100
                +
0003f9 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0003fa 958a     +DEC R24
0003fb f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
0003fc c07b      	RJMP _0x20C0008
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
0003fd 93aa      	ST   -Y,R26
0003fe 81e8      	LD   R30,Y
0003ff e0f0      	LDI  R31,0
000400 57e4      	SUBI R30,LOW(-__base_y_G100)
000401 4ffc      	SBCI R31,HIGH(-__base_y_G100)
000402 81e0      	LD   R30,Z
000403 81a9      	LDD  R26,Y+1
000404 0fae      	ADD  R26,R30
000405 dfeb      	RCALL __lcd_write_data
000406 80a9      	LDD  R10,Y+1
000407 80d8      	LDD  R13,Y+0
                 _0x20C0009:
000408 9622      	ADIW R28,2
000409 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
00040a e0a2      	LDI  R26,LOW(2)
00040b 940e 0a59 	CALL SUBOPT_0x28
00040d e0ac      	LDI  R26,LOW(12)
00040e dfe2      	RCALL __lcd_write_data
00040f e0a1      	LDI  R26,LOW(1)
000410 940e 0a59 	CALL SUBOPT_0x28
000412 e0e0      	LDI  R30,LOW(0)
000413 2ede      	MOV  R13,R30
000414 2eae      	MOV  R10,R30
000415 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
000416 93aa      	ST   -Y,R26
000417 81a8      	LD   R26,Y
000418 30aa      	CPI  R26,LOW(0xA)
000419 f011      	BREQ _0x2000005
00041a 14ac      	CP   R10,R12
00041b f048      	BRLO _0x2000004
                 _0x2000005:
00041c e0e0      	LDI  R30,LOW(0)
00041d 93ea      	ST   -Y,R30
00041e 94d3      	INC  R13
00041f 2dad      	MOV  R26,R13
000420 dfdc      	RCALL _lcd_gotoxy
000421 81a8      	LD   R26,Y
000422 30aa      	CPI  R26,LOW(0xA)
000423 f409      	BRNE _0x2000007
000424 c053      	RJMP _0x20C0008
                 _0x2000007:
                 _0x2000004:
000425 94a3      	INC  R10
000426 9ad8      	SBI  0x1B,0
000427 81a8      	LD   R26,Y
000428 dfc8      	RCALL __lcd_write_data
000429 98d8      	CBI  0x1B,0
00042a c04d      	RJMP _0x20C0008
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
00042b 93ba      	ST   -Y,R27
00042c 93aa      	ST   -Y,R26
00042d 931a      	ST   -Y,R17
                 _0x2000008:
00042e 940e 0a5f 	CALL SUBOPT_0x29
000430 f019      	BREQ _0x200000A
000431 2fa1      	MOV  R26,R17
000432 dfe3      	RCALL _lcd_putchar
000433 cffa      	RJMP _0x2000008
                 _0x200000A:
000434 c050      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_putsf:
                 ; .FSTART _lcd_putsf
000435 93ba      	ST   -Y,R27
000436 93aa      	ST   -Y,R26
000437 931a      	ST   -Y,R17
                 _0x200000B:
000438 81e9      	LDD  R30,Y+1
000439 81fa      	LDD  R31,Y+1+1
00043a 9631      	ADIW R30,1
00043b 83e9      	STD  Y+1,R30
00043c 83fa      	STD  Y+1+1,R31
00043d 9731      	SBIW R30,1
00043e 91e4      	LPM  R30,Z
00043f 2f1e      	MOV  R17,R30
000440 30e0      	CPI  R30,0
000441 f019      	BREQ _0x200000D
000442 2fa1      	MOV  R26,R17
000443 dfd2      	RCALL _lcd_putchar
000444 cff3      	RJMP _0x200000B
                 _0x200000D:
000445 c03f      	RJMP _0x20C0007
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000446 93aa      	ST   -Y,R26
000447 b3ea      	IN   R30,0x1A
000448 6fe0      	ORI  R30,LOW(0xF0)
000449 bbea      	OUT  0x1A,R30
00044a 9ad2      	SBI  0x1A,2
00044b 9ad0      	SBI  0x1A,0
00044c 9ad1      	SBI  0x1A,1
00044d 98da      	CBI  0x1B,2
00044e 98d8      	CBI  0x1B,0
00044f 98d9      	CBI  0x1B,1
000450 80c8      	LDD  R12,Y+0
000451 81e8      	LD   R30,Y
000452 58e0      	SUBI R30,-LOW(128)
                +
000453 93e0 038e+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000455 81e8      	LD   R30,Y
000456 54e0      	SUBI R30,-LOW(192)
                +
000457 93e0 038f+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000459 e1a4      	LDI  R26,LOW(20)
00045a e0b0      	LDI  R27,0
00045b 940e 0b63 	CALL _delay_ms
00045d 940e 0a67 	CALL SUBOPT_0x2A
00045f 940e 0a67 	CALL SUBOPT_0x2A
000461 940e 0a67 	CALL SUBOPT_0x2A
000463 e2a0      	LDI  R26,LOW(32)
000464 df77      	RCALL __lcd_write_nibble_G100
                +
000465 ec88     +LDI R24 , LOW ( 200 )
000466 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000467 9701     +SBIW R24 , 1
000468 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000469 e2a8      	LDI  R26,LOW(40)
00046a df86      	RCALL __lcd_write_data
00046b e0a4      	LDI  R26,LOW(4)
00046c df84      	RCALL __lcd_write_data
00046d e8a5      	LDI  R26,LOW(133)
00046e df82      	RCALL __lcd_write_data
00046f e0a6      	LDI  R26,LOW(6)
000470 df80      	RCALL __lcd_write_data
000471 df98      	RCALL _lcd_clear
000472 c005      	RJMP _0x20C0008
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
000473 93aa      	ST   -Y,R26
                 putchar0:
000474 9b5d           sbis usr,udre
000475 cffe           rjmp putchar0
000476 81e8           ld   r30,y
000477 b9ec           out  udr,r30
                 _0x20C0008:
000478 9621      	ADIW R28,1
000479 9508      	RET
                 ; .FEND
                 _puts:
                 ; .FSTART _puts
00047a 93ba      	ST   -Y,R27
00047b 93aa      	ST   -Y,R26
00047c 931a      	ST   -Y,R17
                 _0x2020003:
00047d 940e 0a5f 	CALL SUBOPT_0x29
00047f f019      	BREQ _0x2020005
000480 2fa1      	MOV  R26,R17
000481 dff1      	RCALL _putchar
000482 cffa      	RJMP _0x2020003
                 _0x2020005:
000483 e0aa      	LDI  R26,LOW(10)
000484 dfee      	RCALL _putchar
                 _0x20C0007:
000485 8118      	LDD  R17,Y+0
000486 9623      	ADIW R28,3
000487 9508      	RET
                 ; .FEND
                 _put_buff_G101:
                 ; .FSTART _put_buff_G101
000488 93ba      	ST   -Y,R27
000489 93aa      	ST   -Y,R26
00048a 931a      	ST   -Y,R17
00048b 930a      	ST   -Y,R16
00048c 81aa      	LDD  R26,Y+2
00048d 81bb      	LDD  R27,Y+2+1
00048e 9612      	ADIW R26,2
00048f 940e 0db2 	CALL __GETW1P
000491 9730      	SBIW R30,0
000492 f129      	BREQ _0x2020010
000493 81aa      	LDD  R26,Y+2
000494 81bb      	LDD  R27,Y+2+1
000495 9614      	ADIW R26,4
000496 940e 0db2 	CALL __GETW1P
000498 018f      	MOVW R16,R30
000499 9730      	SBIW R30,0
00049a f061      	BREQ _0x2020012
                +
00049b 3002     +CPI R16 , LOW ( 2 )
00049c e0e0     +LDI R30 , HIGH ( 2 )
00049d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00049e f080      	BRLO _0x2020013
00049f 01f8      	MOVW R30,R16
0004a0 9731      	SBIW R30,1
0004a1 018f      	MOVW R16,R30
                +
0004a2 81aa     +LDD R26 , Y + 2
0004a3 81bb     +LDD R27 , Y + 2 + 1
0004a4 9614     +ADIW R26 , 4
0004a5 93ed     +ST X + , R30
0004a6 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2020012:
0004a7 81aa      	LDD  R26,Y+2
0004a8 81bb      	LDD  R27,Y+2+1
0004a9 9612      	ADIW R26,2
0004aa 940e 0a6f 	CALL SUBOPT_0x2B
0004ac 9731      	SBIW R30,1
0004ad 81ac      	LDD  R26,Y+4
0004ae 83a0      	STD  Z+0,R26
                 _0x2020013:
0004af 81aa      	LDD  R26,Y+2
0004b0 81bb      	LDD  R27,Y+2+1
0004b1 940e 0db2 	CALL __GETW1P
0004b3 23ff      	TST  R31
0004b4 f012      	BRMI _0x2020014
0004b5 940e 0a6f 	CALL SUBOPT_0x2B
                 _0x2020014:
0004b7 c006      	RJMP _0x2020015
                 _0x2020010:
0004b8 81aa      	LDD  R26,Y+2
0004b9 81bb      	LDD  R27,Y+2+1
0004ba efef      	LDI  R30,LOW(65535)
0004bb efff      	LDI  R31,HIGH(65535)
0004bc 93ed      	ST   X+,R30
0004bd 93fc      	ST   X,R31
                 _0x2020015:
0004be 8119      	LDD  R17,Y+1
0004bf 8108      	LDD  R16,Y+0
                 _0x20C0006:
0004c0 9625      	ADIW R28,5
0004c1 9508      	RET
                 ; .FEND
                 __ftoe_G101:
                 ; .FSTART __ftoe_G101
0004c2 940e 0a75 	CALL SUBOPT_0x2C
0004c4 e8e0      	LDI  R30,LOW(128)
0004c5 83ea      	STD  Y+2,R30
0004c6 e3ef      	LDI  R30,LOW(63)
0004c7 83eb      	STD  Y+3,R30
0004c8 940e 0ded 	CALL __SAVELOCR4
0004ca 85ee      	LDD  R30,Y+14
0004cb 85ff      	LDD  R31,Y+14+1
0004cc 3fef      	CPI  R30,LOW(0xFFFF)
0004cd efaf      	LDI  R26,HIGH(0xFFFF)
0004ce 07fa      	CPC  R31,R26
0004cf f449      	BRNE _0x2020019
0004d0 85e8      	LDD  R30,Y+8
0004d1 85f9      	LDD  R31,Y+8+1
0004d2 93fa      	ST   -Y,R31
0004d3 93ea      	ST   -Y,R30
                +
0004d4 e8ae     +LDI R26 , LOW ( 2 * _0x2020000 + ( 0 ) )
0004d5 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 0 ) )
                 	__POINTW2FN _0x2020000,0
0004d6 940e 08a4 	CALL _strcpyf
0004d8 c0b7      	RJMP _0x20C0005
                 _0x2020019:
0004d9 3fef      	CPI  R30,LOW(0x7FFF)
0004da e7af      	LDI  R26,HIGH(0x7FFF)
0004db 07fa      	CPC  R31,R26
0004dc f449      	BRNE _0x2020018
0004dd 85e8      	LDD  R30,Y+8
0004de 85f9      	LDD  R31,Y+8+1
0004df 93fa      	ST   -Y,R31
0004e0 93ea      	ST   -Y,R30
                +
0004e1 e8af     +LDI R26 , LOW ( 2 * _0x2020000 + ( 1 ) )
0004e2 e0b0     +LDI R27 , HIGH ( 2 * _0x2020000 + ( 1 ) )
                 	__POINTW2FN _0x2020000,1
0004e3 940e 08a4 	CALL _strcpyf
0004e5 c0aa      	RJMP _0x20C0005
                 _0x2020018:
0004e6 85ab      	LDD  R26,Y+11
0004e7 30a7      	CPI  R26,LOW(0x7)
0004e8 f010      	BRLO _0x202001B
0004e9 e0e6      	LDI  R30,LOW(6)
0004ea 87eb      	STD  Y+11,R30
                 _0x202001B:
0004eb 851b      	LDD  R17,Y+11
                 _0x202001C:
0004ec 2fe1      	MOV  R30,R17
0004ed 5011      	SUBI R17,1
0004ee 30e0      	CPI  R30,0
0004ef f019      	BREQ _0x202001E
0004f0 940e 0a7c 	CALL SUBOPT_0x2D
0004f2 cff9      	RJMP _0x202001C
                 _0x202001E:
                +
0004f3 85ec     +LDD R30 , Y + 12
0004f4 85fd     +LDD R31 , Y + 12 + 1
0004f5 856e     +LDD R22 , Y + 12 + 2
0004f6 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
0004f7 940e 0de7 	CALL __CPD10
0004f9 f421      	BRNE _0x202001F
0004fa e030      	LDI  R19,LOW(0)
0004fb 940e 0a7c 	CALL SUBOPT_0x2D
0004fd c02d      	RJMP _0x2020020
                 _0x202001F:
0004fe 853b      	LDD  R19,Y+11
0004ff 940e 0a8b 	CALL SUBOPT_0x2E
000501 f009      	BREQ PC+2
000502 f408      	BRCC PC+2
000503 c00b      	RJMP _0x2020021
000504 940e 0a7c 	CALL SUBOPT_0x2D
                 _0x2020022:
000506 940e 0a8b 	CALL SUBOPT_0x2E
000508 f028      	BRLO _0x2020024
000509 940e 0a96 	CALL SUBOPT_0x2F
00050b 940e 0a9b 	CALL SUBOPT_0x30
00050d cff8      	RJMP _0x2020022
                 _0x2020024:
00050e c00d      	RJMP _0x2020025
                 _0x2020021:
                 _0x2020026:
00050f 940e 0a8b 	CALL SUBOPT_0x2E
000511 f440      	BRSH _0x2020028
000512 940e 0a96 	CALL SUBOPT_0x2F
000514 940e 0aa7 	CALL SUBOPT_0x31
000516 940e 0aae 	CALL SUBOPT_0x32
000518 5031      	SUBI R19,LOW(1)
000519 cff5      	RJMP _0x2020026
                 _0x2020028:
00051a 940e 0a7c 	CALL SUBOPT_0x2D
                 _0x2020025:
                +
00051c 85ec     +LDD R30 , Y + 12
00051d 85fd     +LDD R31 , Y + 12 + 1
00051e 856e     +LDD R22 , Y + 12 + 2
00051f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000520 940e 0ab3 	CALL SUBOPT_0x33
000522 940e 0aae 	CALL SUBOPT_0x32
000524 940e 0a8b 	CALL SUBOPT_0x2E
000526 f020      	BRLO _0x2020029
000527 940e 0a96 	CALL SUBOPT_0x2F
000529 940e 0a9b 	CALL SUBOPT_0x30
                 _0x2020029:
                 _0x2020020:
00052b e010      	LDI  R17,LOW(0)
                 _0x202002A:
00052c 85eb      	LDD  R30,Y+11
00052d 17e1      	CP   R30,R17
00052e f1a8      	BRLO _0x202002C
                +
00052f 81ac     +LDD R26 , Y + 4
000530 81bd     +LDD R27 , Y + 4 + 1
000531 818e     +LDD R24 , Y + 4 + 2
000532 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000533 940e 0aba 	CALL SUBOPT_0x34
000535 940e 0ab3 	CALL SUBOPT_0x33
000537 01df      	MOVW R26,R30
000538 01cb      	MOVW R24,R22
000539 940e 08fb 	CALL _floor
                +
00053b 83ec     +STD Y + 4 , R30
00053c 83fd     +STD Y + 4 + 1 , R31
00053d 836e     +STD Y + 4 + 2 , R22
00053e 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00053f 940e 0a96 	CALL SUBOPT_0x2F
000541 940e 0cb1 	CALL __DIVF21
000543 940e 0ba0 	CALL __CFD1U
000545 2f0e      	MOV  R16,R30
000546 940e 0ac1 	CALL SUBOPT_0x35
000548 940e 0ac8 	CALL SUBOPT_0x36
00054a 27ff      	CLR  R31
00054b 2766      	CLR  R22
00054c 2777      	CLR  R23
00054d 940e 0bd9 	CALL __CDF1
                +
00054f 81ac     +LDD R26 , Y + 4
000550 81bd     +LDD R27 , Y + 4 + 1
000551 818e     +LDD R24 , Y + 4 + 2
000552 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
000553 940e 0c63 	CALL __MULF12
000555 940e 0a96 	CALL SUBOPT_0x2F
000557 940e 0acd 	CALL SUBOPT_0x37
000559 940e 0aae 	CALL SUBOPT_0x32
00055b 2fe1      	MOV  R30,R17
00055c 5f1f      	SUBI R17,-1
00055d 30e0      	CPI  R30,0
00055e f669      	BRNE _0x202002A
00055f 940e 0ac1 	CALL SUBOPT_0x35
000561 e2ee      	LDI  R30,LOW(46)
000562 93ec      	ST   X,R30
000563 cfc8      	RJMP _0x202002A
                 _0x202002C:
000564 940e 0ad2 	CALL SUBOPT_0x38
000566 9731      	SBIW R30,1
000567 85aa      	LDD  R26,Y+10
000568 83a0      	STD  Z+0,R26
000569 3030      	CPI  R19,0
00056a f42c      	BRGE _0x202002E
00056b 9531      	NEG  R19
00056c 85a8      	LDD  R26,Y+8
00056d 85b9      	LDD  R27,Y+8+1
00056e e2ed      	LDI  R30,LOW(45)
00056f c003      	RJMP _0x2020113
                 _0x202002E:
000570 85a8      	LDD  R26,Y+8
000571 85b9      	LDD  R27,Y+8+1
000572 e2eb      	LDI  R30,LOW(43)
                 _0x2020113:
000573 93ec      	ST   X,R30
000574 940e 0ad2 	CALL SUBOPT_0x38
000576 940e 0ad2 	CALL SUBOPT_0x38
000578 9731      	SBIW R30,1
000579 01bf      	MOVW R22,R30
00057a 2fa3      	MOV  R26,R19
00057b e0ea      	LDI  R30,LOW(10)
00057c 940e 0d54 	CALL __DIVB21
00057e 5de0      	SUBI R30,-LOW(48)
00057f 01db      	MOVW R26,R22
000580 93ec      	ST   X,R30
000581 940e 0ad2 	CALL SUBOPT_0x38
000583 9731      	SBIW R30,1
000584 01bf      	MOVW R22,R30
000585 2fa3      	MOV  R26,R19
000586 e0ea      	LDI  R30,LOW(10)
000587 940e 0d83 	CALL __MODB21
000589 5de0      	SUBI R30,-LOW(48)
00058a 01db      	MOVW R26,R22
00058b 93ec      	ST   X,R30
00058c 85a8      	LDD  R26,Y+8
00058d 85b9      	LDD  R27,Y+8+1
00058e e0e0      	LDI  R30,LOW(0)
00058f 93ec      	ST   X,R30
                 _0x20C0005:
000590 940e 0df4 	CALL __LOADLOCR4
000592 9660      	ADIW R28,16
000593 9508      	RET
                 ; .FEND
                 __print_G101:
                 ; .FSTART __print_G101
000594 93ba      	ST   -Y,R27
000595 93aa      	ST   -Y,R26
000596 97ef      	SBIW R28,63
000597 9761      	SBIW R28,17
000598 940e 0deb 	CALL __SAVELOCR6
00059a e010      	LDI  R17,0
                +
00059b 01fe     +MOVW R30 , R28
00059c 5ae8     +SUBI R30 , LOW ( - 88 )
00059d 4fff     +SBCI R31 , HIGH ( - 88 )
00059e 9001     +LD R0 , Z +
00059f 81f0     +LD R31 , Z
0005a0 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0005a1 87e8      	STD  Y+8,R30
0005a2 87f9      	STD  Y+8+1,R31
                +
0005a3 01fe     +MOVW R30 , R28
0005a4 5aea     +SUBI R30 , LOW ( - 86 )
0005a5 4fff     +SBCI R31 , HIGH ( - 86 )
0005a6 9001     +LD R0 , Z +
0005a7 81f0     +LD R31 , Z
0005a8 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0005a9 83ee      	STD  Y+6,R30
0005aa 83ff      	STD  Y+6+1,R31
0005ab 81ae      	LDD  R26,Y+6
0005ac 81bf      	LDD  R27,Y+6+1
0005ad e0e0      	LDI  R30,LOW(0)
0005ae e0f0      	LDI  R31,HIGH(0)
0005af 93ed      	ST   X+,R30
0005b0 93fc      	ST   X,R31
                 _0x2020030:
0005b1 01de      	MOVW R26,R28
0005b2 5aa4      	SUBI R26,LOW(-(92))
0005b3 4fbf      	SBCI R27,HIGH(-(92))
0005b4 940e 0a6f 	CALL SUBOPT_0x2B
0005b6 9731      	SBIW R30,1
0005b7 91e4      	LPM  R30,Z
0005b8 2f2e      	MOV  R18,R30
0005b9 30e0      	CPI  R30,0
0005ba f409      	BRNE PC+2
0005bb c1e9      	RJMP _0x2020032
0005bc 2fe1      	MOV  R30,R17
0005bd 30e0      	CPI  R30,0
0005be f439      	BRNE _0x2020036
0005bf 3225      	CPI  R18,37
0005c0 f411      	BRNE _0x2020037
0005c1 e011      	LDI  R17,LOW(1)
0005c2 c002      	RJMP _0x2020038
                 _0x2020037:
0005c3 940e 0ad8 	CALL SUBOPT_0x39
                 _0x2020038:
0005c5 c1de      	RJMP _0x2020035
                 _0x2020036:
0005c6 30e1      	CPI  R30,LOW(0x1)
0005c7 f4c1      	BRNE _0x2020039
0005c8 3225      	CPI  R18,37
0005c9 f419      	BRNE _0x202003A
0005ca 940e 0ad8 	CALL SUBOPT_0x39
0005cc c1d6      	RJMP _0x2020114
                 _0x202003A:
0005cd e012      	LDI  R17,LOW(2)
0005ce e0e0      	LDI  R30,LOW(0)
0005cf 8bed      	STD  Y+21,R30
0005d0 e000      	LDI  R16,LOW(0)
0005d1 322d      	CPI  R18,45
0005d2 f411      	BRNE _0x202003B
0005d3 e001      	LDI  R16,LOW(1)
0005d4 c1cf      	RJMP _0x2020035
                 _0x202003B:
0005d5 322b      	CPI  R18,43
0005d6 f419      	BRNE _0x202003C
0005d7 e2eb      	LDI  R30,LOW(43)
0005d8 8bed      	STD  Y+21,R30
0005d9 c1ca      	RJMP _0x2020035
                 _0x202003C:
0005da 3220      	CPI  R18,32
0005db f419      	BRNE _0x202003D
0005dc e2e0      	LDI  R30,LOW(32)
0005dd 8bed      	STD  Y+21,R30
0005de c1c5      	RJMP _0x2020035
                 _0x202003D:
0005df c002      	RJMP _0x202003E
                 _0x2020039:
0005e0 30e2      	CPI  R30,LOW(0x2)
0005e1 f439      	BRNE _0x202003F
                 _0x202003E:
0005e2 e050      	LDI  R21,LOW(0)
0005e3 e013      	LDI  R17,LOW(3)
0005e4 3320      	CPI  R18,48
0005e5 f411      	BRNE _0x2020040
0005e6 6800      	ORI  R16,LOW(128)
0005e7 c1bc      	RJMP _0x2020035
                 _0x2020040:
0005e8 c002      	RJMP _0x2020041
                 _0x202003F:
0005e9 30e3      	CPI  R30,LOW(0x3)
0005ea f491      	BRNE _0x2020042
                 _0x2020041:
0005eb 3320      	CPI  R18,48
0005ec f010      	BRLO _0x2020044
0005ed 332a      	CPI  R18,58
0005ee f008      	BRLO _0x2020045
                 _0x2020044:
0005ef c007      	RJMP _0x2020043
                 _0x2020045:
0005f0 e0aa      	LDI  R26,LOW(10)
0005f1 9f5a      	MUL  R21,R26
0005f2 2d50      	MOV  R21,R0
0005f3 2fe2      	MOV  R30,R18
0005f4 53e0      	SUBI R30,LOW(48)
0005f5 0f5e      	ADD  R21,R30
0005f6 c1ad      	RJMP _0x2020035
                 _0x2020043:
0005f7 e040      	LDI  R20,LOW(0)
0005f8 322e      	CPI  R18,46
0005f9 f411      	BRNE _0x2020046
0005fa e014      	LDI  R17,LOW(4)
0005fb c1a8      	RJMP _0x2020035
                 _0x2020046:
0005fc c00f      	RJMP _0x2020047
                 _0x2020042:
0005fd 30e4      	CPI  R30,LOW(0x4)
0005fe f499      	BRNE _0x2020049
0005ff 3320      	CPI  R18,48
000600 f010      	BRLO _0x202004B
000601 332a      	CPI  R18,58
000602 f008      	BRLO _0x202004C
                 _0x202004B:
000603 c008      	RJMP _0x202004A
                 _0x202004C:
000604 6200      	ORI  R16,LOW(32)
000605 e0aa      	LDI  R26,LOW(10)
000606 9f4a      	MUL  R20,R26
000607 2d40      	MOV  R20,R0
000608 2fe2      	MOV  R30,R18
000609 53e0      	SUBI R30,LOW(48)
00060a 0f4e      	ADD  R20,R30
00060b c198      	RJMP _0x2020035
                 _0x202004A:
                 _0x2020047:
00060c 362c      	CPI  R18,108
00060d f419      	BRNE _0x202004D
00060e 6002      	ORI  R16,LOW(2)
00060f e015      	LDI  R17,LOW(5)
000610 c193      	RJMP _0x2020035
                 _0x202004D:
000611 c003      	RJMP _0x202004E
                 _0x2020049:
000612 30e5      	CPI  R30,LOW(0x5)
000613 f009      	BREQ PC+2
000614 c18f      	RJMP _0x2020035
                 _0x202004E:
000615 2fe2      	MOV  R30,R18
000616 36e3      	CPI  R30,LOW(0x63)
000617 f459      	BRNE _0x2020053
000618 940e 0adf 	CALL SUBOPT_0x3A
00061a 940e 0ae6 	CALL SUBOPT_0x3B
00061c 940e 0adf 	CALL SUBOPT_0x3A
00061e 81a4      	LDD  R26,Z+4
00061f 93aa      	ST   -Y,R26
000620 940e 0aed 	CALL SUBOPT_0x3C
000622 c180      	RJMP _0x2020054
                 _0x2020053:
000623 34e5      	CPI  R30,LOW(0x45)
000624 f011      	BREQ _0x2020057
000625 36e5      	CPI  R30,LOW(0x65)
000626 f409      	BRNE _0x2020058
                 _0x2020057:
000627 c003      	RJMP _0x2020059
                 _0x2020058:
000628 36e6      	CPI  R30,LOW(0x66)
000629 f009      	BREQ PC+2
00062a c048      	RJMP _0x202005A
                 _0x2020059:
00062b 01fe      	MOVW R30,R28
00062c 9676      	ADIW R30,22
00062d 87ee      	STD  Y+14,R30
00062e 87ff      	STD  Y+14+1,R31
00062f 940e 0af3 	CALL SUBOPT_0x3D
000631 940e 0db6 	CALL __GETD1P
000633 940e 0afa 	CALL SUBOPT_0x3E
000635 940e 0aff 	CALL SUBOPT_0x3F
000637 85ad      	LDD  R26,Y+13
000638 23aa      	TST  R26
000639 f032      	BRMI _0x202005B
00063a 89ad      	LDD  R26,Y+21
00063b 32ab      	CPI  R26,LOW(0x2B)
00063c f059      	BREQ _0x202005D
00063d 32a0      	CPI  R26,LOW(0x20)
00063e f081      	BREQ _0x202005F
00063f c017      	RJMP _0x2020060
                 _0x202005B:
000640 940e 0b01 	CALL SUBOPT_0x40
000642 940e 0b6d 	CALL __ANEGF1
000644 940e 0afa 	CALL SUBOPT_0x3E
000646 e2ed      	LDI  R30,LOW(45)
000647 8bed      	STD  Y+21,R30
                 _0x202005D:
000648 ff07      	SBRS R16,7
000649 c005      	RJMP _0x2020061
00064a 89ed      	LDD  R30,Y+21
00064b 93ea      	ST   -Y,R30
00064c 940e 0aed 	CALL SUBOPT_0x3C
00064e c008      	RJMP _0x2020062
                 _0x2020061:
                 _0x202005F:
00064f 85ee      	LDD  R30,Y+14
000650 85ff      	LDD  R31,Y+14+1
000651 9631      	ADIW R30,1
000652 87ee      	STD  Y+14,R30
000653 87ff      	STD  Y+14+1,R31
000654 9731      	SBIW R30,1
000655 89ad      	LDD  R26,Y+21
000656 83a0      	STD  Z+0,R26
                 _0x2020062:
                 _0x2020060:
000657 ff05      	SBRS R16,5
000658 e046      	LDI  R20,LOW(6)
000659 3626      	CPI  R18,102
00065a f451      	BRNE _0x2020064
00065b 940e 0b01 	CALL SUBOPT_0x40
00065d 940e 0dd0 	CALL __PUTPARD1
00065f 934a      	ST   -Y,R20
000660 89ab      	LDD  R26,Y+19
000661 89bc      	LDD  R27,Y+19+1
000662 940e 07e2 	CALL _ftoa
000664 c009      	RJMP _0x2020065
                 _0x2020064:
000665 940e 0b01 	CALL SUBOPT_0x40
000667 940e 0dd0 	CALL __PUTPARD1
000669 934a      	ST   -Y,R20
00066a 932a      	ST   -Y,R18
00066b 89ac      	LDD  R26,Y+20
00066c 89bd      	LDD  R27,Y+20+1
00066d de54      	RCALL __ftoe_G101
                 _0x2020065:
00066e 01fe      	MOVW R30,R28
00066f 9676      	ADIW R30,22
000670 940e 0b06 	CALL SUBOPT_0x41
000672 c01e      	RJMP _0x2020066
                 _0x202005A:
000673 37e3      	CPI  R30,LOW(0x73)
000674 f439      	BRNE _0x2020068
000675 940e 0aff 	CALL SUBOPT_0x3F
000677 940e 0b0e 	CALL SUBOPT_0x42
000679 940e 0b06 	CALL SUBOPT_0x41
00067b c00e      	RJMP _0x2020069
                 _0x2020068:
00067c 37e0      	CPI  R30,LOW(0x70)
00067d f4c1      	BRNE _0x202006B
00067e 940e 0aff 	CALL SUBOPT_0x3F
000680 940e 0b0e 	CALL SUBOPT_0x42
000682 87ee      	STD  Y+14,R30
000683 87ff      	STD  Y+14+1,R31
000684 85ae      	LDD  R26,Y+14
000685 85bf      	LDD  R27,Y+14+1
000686 940e 08bd 	CALL _strlenf
000688 2f1e      	MOV  R17,R30
000689 6008      	ORI  R16,LOW(8)
                 _0x2020069:
00068a 770f      	ANDI R16,LOW(127)
00068b 3040      	CPI  R20,0
00068c f011      	BREQ _0x202006D
00068d 1741      	CP   R20,R17
00068e f008      	BRLO _0x202006E
                 _0x202006D:
00068f c001      	RJMP _0x202006C
                 _0x202006E:
000690 2f14      	MOV  R17,R20
                 _0x202006C:
                 _0x2020066:
000691 e040      	LDI  R20,LOW(0)
000692 e0e0      	LDI  R30,LOW(0)
000693 8bec      	STD  Y+20,R30
000694 e030      	LDI  R19,LOW(0)
000695 c06d      	RJMP _0x202006F
                 _0x202006B:
000696 36e4      	CPI  R30,LOW(0x64)
000697 f011      	BREQ _0x2020072
000698 36e9      	CPI  R30,LOW(0x69)
000699 f411      	BRNE _0x2020073
                 _0x2020072:
00069a 6004      	ORI  R16,LOW(4)
00069b c002      	RJMP _0x2020074
                 _0x2020073:
00069c 37e5      	CPI  R30,LOW(0x75)
00069d f4a1      	BRNE _0x2020075
                 _0x2020074:
00069e e0ea      	LDI  R30,LOW(10)
00069f 8bec      	STD  Y+20,R30
0006a0 ff01      	SBRS R16,1
0006a1 c008      	RJMP _0x2020076
                +
0006a2 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
0006a3 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
0006a4 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
0006a5 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
0006a6 940e 0b13 	CALL SUBOPT_0x43
0006a8 e01a      	LDI  R17,LOW(10)
0006a9 c022      	RJMP _0x2020077
                 _0x2020076:
                +
0006aa e1e0     +LDI R30 , LOW ( 0x2710 )
0006ab e2f7     +LDI R31 , HIGH ( 0x2710 )
0006ac e060     +LDI R22 , BYTE3 ( 0x2710 )
0006ad e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
0006ae 940e 0b13 	CALL SUBOPT_0x43
0006b0 e015      	LDI  R17,LOW(5)
0006b1 c01a      	RJMP _0x2020077
                 _0x2020075:
0006b2 35e8      	CPI  R30,LOW(0x58)
0006b3 f411      	BRNE _0x2020079
0006b4 6008      	ORI  R16,LOW(8)
0006b5 c003      	RJMP _0x202007A
                 _0x2020079:
0006b6 37e8      	CPI  R30,LOW(0x78)
0006b7 f009      	BREQ PC+2
0006b8 c0ea      	RJMP _0x20200B8
                 _0x202007A:
0006b9 e1e0      	LDI  R30,LOW(16)
0006ba 8bec      	STD  Y+20,R30
0006bb ff01      	SBRS R16,1
0006bc c008      	RJMP _0x202007C
                +
0006bd e0e0     +LDI R30 , LOW ( 0x10000000 )
0006be e0f0     +LDI R31 , HIGH ( 0x10000000 )
0006bf e060     +LDI R22 , BYTE3 ( 0x10000000 )
0006c0 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
0006c1 940e 0b13 	CALL SUBOPT_0x43
0006c3 e018      	LDI  R17,LOW(8)
0006c4 c007      	RJMP _0x2020077
                 _0x202007C:
                +
0006c5 e0e0     +LDI R30 , LOW ( 0x1000 )
0006c6 e1f0     +LDI R31 , HIGH ( 0x1000 )
0006c7 e060     +LDI R22 , BYTE3 ( 0x1000 )
0006c8 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
0006c9 940e 0b13 	CALL SUBOPT_0x43
0006cb e014      	LDI  R17,LOW(4)
                 _0x2020077:
0006cc 3040      	CPI  R20,0
0006cd f011      	BREQ _0x202007D
0006ce 770f      	ANDI R16,LOW(127)
0006cf c001      	RJMP _0x202007E
                 _0x202007D:
0006d0 e041      	LDI  R20,LOW(1)
                 _0x202007E:
0006d1 ff01      	SBRS R16,1
0006d2 c008      	RJMP _0x202007F
0006d3 940e 0aff 	CALL SUBOPT_0x3F
0006d5 940e 0af3 	CALL SUBOPT_0x3D
0006d7 9614      	ADIW R26,4
0006d8 940e 0db6 	CALL __GETD1P
0006da c00f      	RJMP _0x2020115
                 _0x202007F:
0006db ff02      	SBRS R16,2
0006dc c007      	RJMP _0x2020081
0006dd 940e 0aff 	CALL SUBOPT_0x3F
0006df 940e 0b0e 	CALL SUBOPT_0x42
0006e1 940e 0d41 	CALL __CWD1
0006e3 c006      	RJMP _0x2020115
                 _0x2020081:
0006e4 940e 0aff 	CALL SUBOPT_0x3F
0006e6 940e 0b0e 	CALL SUBOPT_0x42
0006e8 2766      	CLR  R22
0006e9 2777      	CLR  R23
                 _0x2020115:
                +
0006ea 87ea     +STD Y + 10 , R30
0006eb 87fb     +STD Y + 10 + 1 , R31
0006ec 876c     +STD Y + 10 + 2 , R22
0006ed 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0006ee ff02      	SBRS R16,2
0006ef c012      	RJMP _0x2020083
0006f0 85ad      	LDD  R26,Y+13
0006f1 23aa      	TST  R26
0006f2 f442      	BRPL _0x2020084
0006f3 940e 0b01 	CALL SUBOPT_0x40
0006f5 940e 0d29 	CALL __ANEGD1
0006f7 940e 0afa 	CALL SUBOPT_0x3E
0006f9 e2ed      	LDI  R30,LOW(45)
0006fa 8bed      	STD  Y+21,R30
                 _0x2020084:
0006fb 89ed      	LDD  R30,Y+21
0006fc 30e0      	CPI  R30,0
0006fd f019      	BREQ _0x2020085
0006fe 5f1f      	SUBI R17,-LOW(1)
0006ff 5f4f      	SUBI R20,-LOW(1)
000700 c001      	RJMP _0x2020086
                 _0x2020085:
000701 7f0b      	ANDI R16,LOW(251)
                 _0x2020086:
                 _0x2020083:
000702 2f34      	MOV  R19,R20
                 _0x202006F:
000703 fd00      	SBRC R16,0
000704 c014      	RJMP _0x2020087
                 _0x2020088:
000705 1715      	CP   R17,R21
000706 f410      	BRSH _0x202008B
000707 1735      	CP   R19,R21
000708 f008      	BRLO _0x202008C
                 _0x202008B:
000709 c00f      	RJMP _0x202008A
                 _0x202008C:
00070a ff07      	SBRS R16,7
00070b c008      	RJMP _0x202008D
00070c ff02      	SBRS R16,2
00070d c004      	RJMP _0x202008E
00070e 7f0b      	ANDI R16,LOW(251)
00070f 892d      	LDD  R18,Y+21
000710 5011      	SUBI R17,LOW(1)
000711 c001      	RJMP _0x202008F
                 _0x202008E:
000712 e320      	LDI  R18,LOW(48)
                 _0x202008F:
000713 c001      	RJMP _0x2020090
                 _0x202008D:
000714 e220      	LDI  R18,LOW(32)
                 _0x2020090:
000715 940e 0ad8 	CALL SUBOPT_0x39
000717 5051      	SUBI R21,LOW(1)
000718 cfec      	RJMP _0x2020088
                 _0x202008A:
                 _0x2020087:
                 _0x2020091:
000719 1714      	CP   R17,R20
00071a f490      	BRSH _0x2020093
00071b 6100      	ORI  R16,LOW(16)
00071c ff02      	SBRS R16,2
00071d c006      	RJMP _0x2020094
00071e 940e 0b18 	CALL SUBOPT_0x44
000720 f009      	BREQ _0x2020095
000721 5051      	SUBI R21,LOW(1)
                 _0x2020095:
000722 5011      	SUBI R17,LOW(1)
000723 5041      	SUBI R20,LOW(1)
                 _0x2020094:
000724 e3e0      	LDI  R30,LOW(48)
000725 93ea      	ST   -Y,R30
000726 940e 0aed 	CALL SUBOPT_0x3C
000728 3050      	CPI  R21,0
000729 f009      	BREQ _0x2020096
00072a 5051      	SUBI R21,LOW(1)
                 _0x2020096:
00072b 5041      	SUBI R20,LOW(1)
00072c cfec      	RJMP _0x2020091
                 _0x2020093:
00072d 2f31      	MOV  R19,R17
00072e 89ec      	LDD  R30,Y+20
00072f 30e0      	CPI  R30,0
000730 f4b9      	BRNE _0x2020097
                 _0x2020098:
000731 3030      	CPI  R19,0
000732 f0a1      	BREQ _0x202009A
000733 ff03      	SBRS R16,3
000734 c006      	RJMP _0x202009B
000735 85ee      	LDD  R30,Y+14
000736 85ff      	LDD  R31,Y+14+1
000737 9125      	LPM  R18,Z+
000738 87ee      	STD  Y+14,R30
000739 87ff      	STD  Y+14+1,R31
00073a c005      	RJMP _0x202009C
                 _0x202009B:
00073b 85ae      	LDD  R26,Y+14
00073c 85bf      	LDD  R27,Y+14+1
00073d 912d      	LD   R18,X+
00073e 87ae      	STD  Y+14,R26
00073f 87bf      	STD  Y+14+1,R27
                 _0x202009C:
000740 940e 0ad8 	CALL SUBOPT_0x39
000742 3050      	CPI  R21,0
000743 f009      	BREQ _0x202009D
000744 5051      	SUBI R21,LOW(1)
                 _0x202009D:
000745 5031      	SUBI R19,LOW(1)
000746 cfea      	RJMP _0x2020098
                 _0x202009A:
000747 c051      	RJMP _0x202009E
                 _0x2020097:
                 _0x20200A0:
000748 940e 0b2a 	CALL SUBOPT_0x45
00074a 940e 0d59 	CALL __DIVD21U
00074c 2f2e      	MOV  R18,R30
00074d 302a      	CPI  R18,10
00074e f030      	BRLO _0x20200A2
00074f ff03      	SBRS R16,3
000750 c002      	RJMP _0x20200A3
000751 5c29      	SUBI R18,-LOW(55)
000752 c001      	RJMP _0x20200A4
                 _0x20200A3:
000753 5a29      	SUBI R18,-LOW(87)
                 _0x20200A4:
000754 c001      	RJMP _0x20200A5
                 _0x20200A2:
000755 5d20      	SUBI R18,-LOW(48)
                 _0x20200A5:
000756 fd04      	SBRC R16,4
000757 c021      	RJMP _0x20200A7
000758 3321      	CPI  R18,49
000759 f460      	BRSH _0x20200A9
                +
00075a 89a8     +LDD R26 , Y + 16
00075b 89b9     +LDD R27 , Y + 16 + 1
00075c 898a     +LDD R24 , Y + 16 + 2
00075d 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
00075e 30a1     +CPI R26 , LOW ( 0x1 )
00075f e0e0     +LDI R30 , HIGH ( 0x1 )
000760 07be     +CPC R27 , R30
000761 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000762 078e     +CPC R24 , R30
000763 e0e0     +LDI R30 , BYTE4 ( 0x1 )
000764 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000765 f409      	BRNE _0x20200A8
                 _0x20200A9:
000766 c00b      	RJMP _0x20200AB
                 _0x20200A8:
000767 1743      	CP   R20,R19
000768 f440      	BRSH _0x2020116
000769 1753      	CP   R21,R19
00076a f010      	BRLO _0x20200AE
00076b ff00      	SBRS R16,0
00076c c001      	RJMP _0x20200AF
                 _0x20200AE:
00076d c010      	RJMP _0x20200AD
                 _0x20200AF:
00076e e220      	LDI  R18,LOW(32)
00076f ff07      	SBRS R16,7
000770 c008      	RJMP _0x20200B0
                 _0x2020116:
000771 e320      	LDI  R18,LOW(48)
                 _0x20200AB:
000772 6100      	ORI  R16,LOW(16)
000773 ff02      	SBRS R16,2
000774 c004      	RJMP _0x20200B1
000775 940e 0b18 	CALL SUBOPT_0x44
000777 f009      	BREQ _0x20200B2
000778 5051      	SUBI R21,LOW(1)
                 _0x20200B2:
                 _0x20200B1:
                 _0x20200B0:
                 _0x20200A7:
000779 940e 0ad8 	CALL SUBOPT_0x39
00077b 3050      	CPI  R21,0
00077c f009      	BREQ _0x20200B3
00077d 5051      	SUBI R21,LOW(1)
                 _0x20200B3:
                 _0x20200AD:
00077e 5031      	SUBI R19,LOW(1)
00077f 940e 0b2a 	CALL SUBOPT_0x45
000781 940e 0d8f 	CALL __MODD21U
000783 940e 0afa 	CALL SUBOPT_0x3E
000785 89ec      	LDD  R30,Y+20
                +
000786 89a8     +LDD R26 , Y + 16
000787 89b9     +LDD R27 , Y + 16 + 1
000788 898a     +LDD R24 , Y + 16 + 2
000789 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00078a 27ff      	CLR  R31
00078b 2766      	CLR  R22
00078c 2777      	CLR  R23
00078d 940e 0d59 	CALL __DIVD21U
00078f 940e 0b13 	CALL SUBOPT_0x43
                +
000791 89e8     +LDD R30 , Y + 16
000792 89f9     +LDD R31 , Y + 16 + 1
000793 896a     +LDD R22 , Y + 16 + 2
000794 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
000795 940e 0de7 	CALL __CPD10
000797 f009      	BREQ _0x20200A1
000798 cfaf      	RJMP _0x20200A0
                 _0x20200A1:
                 _0x202009E:
000799 ff00      	SBRS R16,0
00079a c008      	RJMP _0x20200B4
                 _0x20200B5:
00079b 3050      	CPI  R21,0
00079c f031      	BREQ _0x20200B7
00079d 5051      	SUBI R21,LOW(1)
00079e e2e0      	LDI  R30,LOW(32)
00079f 93ea      	ST   -Y,R30
0007a0 940e 0aed 	CALL SUBOPT_0x3C
0007a2 cff8      	RJMP _0x20200B5
                 _0x20200B7:
                 _0x20200B4:
                 _0x20200B8:
                 _0x2020054:
                 _0x2020114:
0007a3 e010      	LDI  R17,LOW(0)
                 _0x2020035:
0007a4 ce0c      	RJMP _0x2020030
                 _0x2020032:
0007a5 81ae      	LDD  R26,Y+6
0007a6 81bf      	LDD  R27,Y+6+1
0007a7 940e 0db2 	CALL __GETW1P
0007a9 940e 0df2 	CALL __LOADLOCR6
0007ab 96ef      	ADIW R28,63
0007ac 966f      	ADIW R28,31
0007ad 9508      	RET
                 ; .FEND
                 _sprintf:
                 ; .FSTART _sprintf
0007ae 92ff      	PUSH R15
0007af 2ef8      	MOV  R15,R24
0007b0 9726      	SBIW R28,6
0007b1 940e 0ded 	CALL __SAVELOCR4
0007b3 940e 0b33 	CALL SUBOPT_0x46
0007b5 9730      	SBIW R30,0
0007b6 f419      	BRNE _0x20200B9
0007b7 efef      	LDI  R30,LOW(65535)
0007b8 efff      	LDI  R31,HIGH(65535)
0007b9 c023      	RJMP _0x20C0004
                 _0x20200B9:
0007ba 01de      	MOVW R26,R28
0007bb 9616      	ADIW R26,6
0007bc 940e 0d16 	CALL __ADDW2R15
0007be 018d      	MOVW R16,R26
0007bf 940e 0b33 	CALL SUBOPT_0x46
0007c1 83ee      	STD  Y+6,R30
0007c2 83ff      	STD  Y+6+1,R31
0007c3 e0e0      	LDI  R30,LOW(0)
0007c4 87e8      	STD  Y+8,R30
0007c5 87e9      	STD  Y+8+1,R30
0007c6 01de      	MOVW R26,R28
0007c7 961a      	ADIW R26,10
0007c8 940e 0d16 	CALL __ADDW2R15
0007ca 940e 0db2 	CALL __GETW1P
0007cc 93fa      	ST   -Y,R31
0007cd 93ea      	ST   -Y,R30
0007ce 931a      	ST   -Y,R17
0007cf 930a      	ST   -Y,R16
0007d0 e8e8      	LDI  R30,LOW(_put_buff_G101)
0007d1 e0f4      	LDI  R31,HIGH(_put_buff_G101)
0007d2 93fa      	ST   -Y,R31
0007d3 93ea      	ST   -Y,R30
0007d4 01de      	MOVW R26,R28
0007d5 961a      	ADIW R26,10
0007d6 ddbd      	RCALL __print_G101
0007d7 019f      	MOVW R18,R30
0007d8 81ae      	LDD  R26,Y+6
0007d9 81bf      	LDD  R27,Y+6+1
0007da e0e0      	LDI  R30,LOW(0)
0007db 93ec      	ST   X,R30
0007dc 01f9      	MOVW R30,R18
                 _0x20C0004:
0007dd 940e 0df4 	CALL __LOADLOCR4
0007df 962a      	ADIW R28,10
0007e0 90ff      	POP  R15
0007e1 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 _ftoa:
                 ; .FSTART _ftoa
0007e2 940e 0a75 	CALL SUBOPT_0x2C
0007e4 e0e0      	LDI  R30,LOW(0)
0007e5 83ea      	STD  Y+2,R30
0007e6 e3ef      	LDI  R30,LOW(63)
0007e7 83eb      	STD  Y+3,R30
0007e8 931a      	ST   -Y,R17
0007e9 930a      	ST   -Y,R16
0007ea 85eb      	LDD  R30,Y+11
0007eb 85fc      	LDD  R31,Y+11+1
0007ec 3fef      	CPI  R30,LOW(0xFFFF)
0007ed efaf      	LDI  R26,HIGH(0xFFFF)
0007ee 07fa      	CPC  R31,R26
0007ef f439      	BRNE _0x204000D
0007f0 940e 0b3a 	CALL SUBOPT_0x47
                +
0007f2 e9a6     +LDI R26 , LOW ( 2 * _0x2040000 + ( 0 ) )
0007f3 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW2FN _0x2040000,0
0007f4 940e 08a4 	CALL _strcpyf
0007f6 c0a9      	RJMP _0x20C0003
                 _0x204000D:
0007f7 3fef      	CPI  R30,LOW(0x7FFF)
0007f8 e7af      	LDI  R26,HIGH(0x7FFF)
0007f9 07fa      	CPC  R31,R26
0007fa f439      	BRNE _0x204000C
0007fb 940e 0b3a 	CALL SUBOPT_0x47
                +
0007fd e9a7     +LDI R26 , LOW ( 2 * _0x2040000 + ( 1 ) )
0007fe e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW2FN _0x2040000,1
0007ff 940e 08a4 	CALL _strcpyf
000801 c09e      	RJMP _0x20C0003
                 _0x204000C:
000802 85ac      	LDD  R26,Y+12
000803 23aa      	TST  R26
000804 f462      	BRPL _0x204000F
                +
000805 85e9     +LDD R30 , Y + 9
000806 85fa     +LDD R31 , Y + 9 + 1
000807 856b     +LDD R22 , Y + 9 + 2
000808 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000809 940e 0b6d 	CALL __ANEGF1
00080b 940e 0b3f 	CALL SUBOPT_0x48
00080d 940e 0b44 	CALL SUBOPT_0x49
00080f e2ed      	LDI  R30,LOW(45)
000810 93ec      	ST   X,R30
                 _0x204000F:
000811 85a8      	LDD  R26,Y+8
000812 30a7      	CPI  R26,LOW(0x7)
000813 f010      	BRLO _0x2040010
000814 e0e6      	LDI  R30,LOW(6)
000815 87e8      	STD  Y+8,R30
                 _0x2040010:
000816 8518      	LDD  R17,Y+8
                 _0x2040011:
000817 2fe1      	MOV  R30,R17
000818 5011      	SUBI R17,1
000819 30e0      	CPI  R30,0
00081a f039      	BREQ _0x2040013
00081b 940e 0b4b 	CALL SUBOPT_0x4A
00081d 940e 0aba 	CALL SUBOPT_0x34
00081f 940e 0b50 	CALL SUBOPT_0x4B
000821 cff5      	RJMP _0x2040011
                 _0x2040013:
000822 940e 0b55 	CALL SUBOPT_0x4C
000824 940e 0c13 	CALL __ADDF12
000826 940e 0b3f 	CALL SUBOPT_0x48
000828 e010      	LDI  R17,LOW(0)
                +
000829 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00082a e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00082b e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00082c e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00082d 940e 0b50 	CALL SUBOPT_0x4B
                 _0x2040014:
00082f 940e 0b55 	CALL SUBOPT_0x4C
000831 940e 0cf6 	CALL __CMPF12
000833 f088      	BRLO _0x2040016
000834 940e 0b4b 	CALL SUBOPT_0x4A
000836 940e 0aa7 	CALL SUBOPT_0x31
000838 940e 0b50 	CALL SUBOPT_0x4B
00083a 5f1f      	SUBI R17,-LOW(1)
00083b 3217      	CPI  R17,39
00083c f038      	BRLO _0x2040017
00083d 940e 0b3a 	CALL SUBOPT_0x47
                +
00083f e9ab     +LDI R26 , LOW ( 2 * _0x2040000 + ( 5 ) )
000840 e0b0     +LDI R27 , HIGH ( 2 * _0x2040000 + ( 5 ) )
                 	__POINTW2FN _0x2040000,5
000841 940e 08a4 	CALL _strcpyf
000843 c05c      	RJMP _0x20C0003
                 _0x2040017:
000844 cfea      	RJMP _0x2040014
                 _0x2040016:
000845 3010      	CPI  R17,0
000846 f429      	BRNE _0x2040018
000847 940e 0b44 	CALL SUBOPT_0x49
000849 e3e0      	LDI  R30,LOW(48)
00084a 93ec      	ST   X,R30
00084b c029      	RJMP _0x2040019
                 _0x2040018:
                 _0x204001A:
00084c 2fe1      	MOV  R30,R17
00084d 5011      	SUBI R17,1
00084e 30e0      	CPI  R30,0
00084f f129      	BREQ _0x204001C
000850 940e 0b4b 	CALL SUBOPT_0x4A
000852 940e 0aba 	CALL SUBOPT_0x34
000854 940e 0ab3 	CALL SUBOPT_0x33
000856 01df      	MOVW R26,R30
000857 01cb      	MOVW R24,R22
000858 940e 08fb 	CALL _floor
00085a 940e 0b50 	CALL SUBOPT_0x4B
00085c 940e 0b55 	CALL SUBOPT_0x4C
00085e 940e 0cb1 	CALL __DIVF21
000860 940e 0ba0 	CALL __CFD1U
000862 2f0e      	MOV  R16,R30
000863 940e 0b44 	CALL SUBOPT_0x49
000865 940e 0ac8 	CALL SUBOPT_0x36
000867 e0f0      	LDI  R31,0
000868 940e 0b4b 	CALL SUBOPT_0x4A
00086a 940e 0a54 	CALL SUBOPT_0x27
00086c 940e 0c63 	CALL __MULF12
00086e 940e 0b5e 	CALL SUBOPT_0x4D
000870 940e 0acd 	CALL SUBOPT_0x37
000872 940e 0b3f 	CALL SUBOPT_0x48
000874 cfd7      	RJMP _0x204001A
                 _0x204001C:
                 _0x2040019:
000875 85e8      	LDD  R30,Y+8
000876 30e0      	CPI  R30,0
000877 f121      	BREQ _0x20C0002
000878 940e 0b44 	CALL SUBOPT_0x49
00087a e2ee      	LDI  R30,LOW(46)
00087b 93ec      	ST   X,R30
                 _0x204001E:
00087c 85e8      	LDD  R30,Y+8
00087d 50e1      	SUBI R30,LOW(1)
00087e 87e8      	STD  Y+8,R30
00087f 5fef      	SUBI R30,-LOW(1)
000880 f0d9      	BREQ _0x2040020
000881 940e 0b5e 	CALL SUBOPT_0x4D
000883 940e 0aa7 	CALL SUBOPT_0x31
000885 940e 0b3f 	CALL SUBOPT_0x48
                +
000887 85e9     +LDD R30 , Y + 9
000888 85fa     +LDD R31 , Y + 9 + 1
000889 856b     +LDD R22 , Y + 9 + 2
00088a 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00088b 940e 0ba0 	CALL __CFD1U
00088d 2f0e      	MOV  R16,R30
00088e 940e 0b44 	CALL SUBOPT_0x49
000890 940e 0ac8 	CALL SUBOPT_0x36
000892 e0f0      	LDI  R31,0
000893 940e 0b5e 	CALL SUBOPT_0x4D
000895 940e 0a54 	CALL SUBOPT_0x27
000897 940e 0acd 	CALL SUBOPT_0x37
000899 940e 0b3f 	CALL SUBOPT_0x48
00089b cfe0      	RJMP _0x204001E
                 _0x2040020:
                 _0x20C0002:
00089c 81ae      	LDD  R26,Y+6
00089d 81bf      	LDD  R27,Y+6+1
00089e e0e0      	LDI  R30,LOW(0)
00089f 93ec      	ST   X,R30
                 _0x20C0003:
0008a0 8119      	LDD  R17,Y+1
0008a1 8108      	LDD  R16,Y+0
0008a2 962d      	ADIW R28,13
0008a3 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.CSEG
                 _strcpyf:
                 ; .FSTART _strcpyf
0008a4 93ba      	ST   -Y,R27
0008a5 93aa      	ST   -Y,R26
0008a6 91e9          ld   r30,y+
0008a7 91f9          ld   r31,y+
0008a8 91a9          ld   r26,y+
0008a9 91b9          ld   r27,y+
0008aa 01cd          movw r24,r26
                 strcpyf0:
0008ab 9005      	lpm  r0,z+
0008ac 920d          st   x+,r0
0008ad 2000          tst  r0
0008ae f7e1          brne strcpyf0
0008af 01fc          movw r30,r24
0008b0 9508          ret
                 ; .FEND
                 _strlen:
                 ; .FSTART _strlen
0008b1 93ba      	ST   -Y,R27
0008b2 93aa      	ST   -Y,R26
0008b3 91a9          ld   r26,y+
0008b4 91b9          ld   r27,y+
0008b5 27ee          clr  r30
0008b6 27ff          clr  r31
                 strlen0:
0008b7 916d          ld   r22,x+
0008b8 2366          tst  r22
0008b9 f011          breq strlen1
0008ba 9631          adiw r30,1
0008bb cffb          rjmp strlen0
                 strlen1:
0008bc 9508          ret
                 ; .FEND
                 _strlenf:
                 ; .FSTART _strlenf
0008bd 93ba      	ST   -Y,R27
0008be 93aa      	ST   -Y,R26
0008bf 27aa          clr  r26
0008c0 27bb          clr  r27
0008c1 91e9          ld   r30,y+
0008c2 91f9          ld   r31,y+
                 strlenf0:
0008c3 9005      	lpm  r0,z+
0008c4 2000          tst  r0
0008c5 f011          breq strlenf1
0008c6 9611          adiw r26,1
0008c7 cffb          rjmp strlenf0
                 strlenf1:
0008c8 01fd          movw r30,r26
0008c9 9508          ret
                 ; .FEND
                 
                 	.CSEG
                 _ftrunc:
                 ; .FSTART _ftrunc
0008ca 940e 0dd5 	CALL __PUTPARD2
0008cc 817b         ldd  r23,y+3
0008cd 816a         ldd  r22,y+2
0008ce 81f9         ldd  r31,y+1
0008cf 81e8         ld   r30,y
0008d0 fb77         bst  r23,7
0008d1 0f77         lsl  r23
0008d2 fd67         sbrc r22,7
0008d3 6071         sbr  r23,1
0008d4 2f97         mov  r25,r23
0008d5 579e         subi r25,0x7e
0008d6 f081         breq __ftrunc0
0008d7 f078         brcs __ftrunc0
0008d8 3198         cpi  r25,24
0008d9 f490         brsh __ftrunc1
0008da 27aa         clr  r26
0008db 27bb         clr  r27
0008dc 2788         clr  r24
                 __ftrunc2:
0008dd 9408         sec
0008de 9587         ror  r24
0008df 95b7         ror  r27
0008e0 95a7         ror  r26
0008e1 959a         dec  r25
0008e2 f7d1         brne __ftrunc2
0008e3 23ea         and  r30,r26
0008e4 23fb         and  r31,r27
0008e5 2368         and  r22,r24
0008e6 c005         rjmp __ftrunc1
                 __ftrunc0:
0008e7 94e8         clt
0008e8 2777         clr  r23
0008e9 27ee         clr  r30
0008ea 27ff         clr  r31
0008eb 2766         clr  r22
                 __ftrunc1:
0008ec 776f         cbr  r22,0x80
0008ed 9576         lsr  r23
0008ee f408         brcc __ftrunc3
0008ef 6860         sbr  r22,0x80
                 __ftrunc3:
0008f0 f977         bld  r23,7
0008f1 91a9         ld   r26,y+
0008f2 91b9         ld   r27,y+
0008f3 9189         ld   r24,y+
0008f4 9199         ld   r25,y+
0008f5 17ea         cp   r30,r26
0008f6 07fb         cpc  r31,r27
0008f7 0768         cpc  r22,r24
0008f8 0779         cpc  r23,r25
0008f9 fb97         bst  r25,7
0008fa 9508         ret
                 ; .FEND
                 _floor:
                 ; .FSTART _floor
0008fb 940e 0dd5 	CALL __PUTPARD2
0008fd 940e 0dc6 	CALL __GETD2S0
0008ff 940e 08ca 	CALL _ftrunc
000901 940e 0dcb 	CALL __PUTD1S0
000903 f419          brne __floor1
                 __floor0:
000904 940e 0dc1 	CALL __GETD1S0
000906 c009      	RJMP _0x20C0001
                 __floor1:
000907 f7e6          brtc __floor0
000908 940e 0dc1 	CALL __GETD1S0
                +
00090a e0a0     +LDI R26 , LOW ( 0x3F800000 )
00090b e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00090c e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00090d e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00090e 940e 0c0c 	CALL __SUBF12
                 _0x20C0001:
000910 9624      	ADIW R28,4
000911 9508      	RET
                 ; .FEND
                 
                 	.DSEG
                 _Weight_Shiwu:
000260           	.BYTE 0x4
                 _Weight_Maopi:
000264           	.BYTE 0x4
                 _Weight_Shiwu1:
000268           	.BYTE 0x4
                 _Weight_Maopi1:
00026c           	.BYTE 0x4
                 _Weight_Shiwu2:
000270           	.BYTE 0x4
                 _Weight_Maopi2:
000274           	.BYTE 0x4
                 _HX711_Buffer:
000278           	.BYTE 0x4
                 _HX711_Buffer1:
00027c           	.BYTE 0x4
                 _HX711_Buffer2:
000280           	.BYTE 0x4
                 _scale_total:
000284           	.BYTE 0x4
                 _scale:
000288           	.BYTE 0x4
                 _scale1:
00028c           	.BYTE 0x4
                 _scale2:
000290           	.BYTE 0x4
                 _scale_array:
000294           	.BYTE 0x3C
                 _scale1_array:
0002d0           	.BYTE 0x3C
                 _scale2_array:
00030c           	.BYTE 0x3C
                 _buffer4:
000348           	.BYTE 0xC
                 _buffer:
000354           	.BYTE 0x20
                 _rx_buffer:
000374           	.BYTE 0x18
                 __base_y_G100:
00038c           	.BYTE 0x4
                 __seed_G102:
000390           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x0:
000912 920a      	ST   -Y,R0
000913 921a      	ST   -Y,R1
000914 92fa      	ST   -Y,R15
000915 936a      	ST   -Y,R22
000916 937a      	ST   -Y,R23
000917 938a      	ST   -Y,R24
000918 939a      	ST   -Y,R25
000919 93aa      	ST   -Y,R26
00091a 93ba      	ST   -Y,R27
00091b 93ea      	ST   -Y,R30
00091c 93fa      	ST   -Y,R31
00091d b7ef      	IN   R30,SREG
00091e 93ea      	ST   -Y,R30
00091f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
000920 91a0 0284 	LDS  R26,_scale_total
000922 91b0 0285 	LDS  R27,_scale_total+1
000924 9180 0286 	LDS  R24,_scale_total+2
000926 9190 0287 	LDS  R25,_scale_total+3
000928 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2:
000929 93e0 0284 	STS  _scale_total,R30
00092b 93f0 0285 	STS  _scale_total+1,R31
00092d 9360 0286 	STS  _scale_total+2,R22
00092f 9370 0287 	STS  _scale_total+3,R23
000931 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3:
000932 91e0 0284 	LDS  R30,_scale_total
000934 91f0 0285 	LDS  R31,_scale_total+1
000936 9160 0286 	LDS  R22,_scale_total+2
000938 9170 0287 	LDS  R23,_scale_total+3
00093a 940e 0dd0 	CALL __PUTPARD1
00093c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4:
00093d 91e0 028c 	LDS  R30,_scale1
00093f 91f0 028d 	LDS  R31,_scale1+1
000941 9160 028e 	LDS  R22,_scale1+2
000943 9170 028f 	LDS  R23,_scale1+3
000945 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x5:
000946 e0e0      	LDI  R30,LOW(0)
                +
000947 83e9     +STD Y + 1 , R30
000948 83ea     +STD Y + 1 + 1 , R30
000949 83eb     +STD Y + 1 + 2 , R30
00094a 83ec     +STD Y + 1 + 3 , R30
                 	__CLRD1S 1
00094b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x6:
                +
00094c 81e9     +LDD R30 , Y + 1
00094d 81fa     +LDD R31 , Y + 1 + 1
00094e 816b     +LDD R22 , Y + 1 + 2
00094f 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
000950 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
000951 940e 0d36 	CALL __LSLD1
                +
000953 83e9     +STD Y + 1 , R30
000954 83fa     +STD Y + 1 + 1 , R31
000955 836b     +STD Y + 1 + 2 , R22
000956 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
000957 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x8:
000958 dff3      	RCALL SUBOPT_0x6
                +
000959 5fef     +SUBI R30 , LOW ( - 1 )
00095a 4fff     +SBCI R31 , HIGH ( - 1 )
00095b 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00095c 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
                +
00095d 83e9     +STD Y + 1 , R30
00095e 83fa     +STD Y + 1 + 1 , R31
00095f 836b     +STD Y + 1 + 2 , R22
000960 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
000961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x9:
                +
000962 81a9     +LDD R26 , Y + 1
000963 81ba     +LDD R27 , Y + 1 + 1
000964 818b     +LDD R24 , Y + 1 + 2
000965 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
                +
000966 e0e0     +LDI R30 , LOW ( 0x800000 )
000967 e0f0     +LDI R31 , HIGH ( 0x800000 )
000968 e860     +LDI R22 , BYTE3 ( 0x800000 )
000969 e070     +LDI R23 , BYTE4 ( 0x800000 )
                 	__GETD1N 0x800000
00096a 940e 0d24 	CALL __XORD12
                +
00096c 83e9     +STD Y + 1 , R30
00096d 83fa     +STD Y + 1 + 1 , R31
00096e 836b     +STD Y + 1 + 2 , R22
00096f 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
000970 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
000971 931a      	ST   -Y,R17
000972 930a      	ST   -Y,R16
                +
000973 e000     +LDI R16 , LOW ( 0 )
000974 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
000975 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xB:
000976 e0e0      	LDI  R30,LOW(0)
000977 93e0 0278 	STS  _HX711_Buffer,R30
000979 93e0 0279 	STS  _HX711_Buffer+1,R30
00097b 93e0 027a 	STS  _HX711_Buffer+2,R30
00097d 93e0 027b 	STS  _HX711_Buffer+3,R30
00097f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xC:
000980 93e0 0278 	STS  _HX711_Buffer,R30
000982 93f0 0279 	STS  _HX711_Buffer+1,R31
000984 9360 027a 	STS  _HX711_Buffer+2,R22
000986 9370 027b 	STS  _HX711_Buffer+3,R23
000988 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xD:
000989 91a0 0278 	LDS  R26,_HX711_Buffer
00098b 91b0 0279 	LDS  R27,_HX711_Buffer+1
00098d 9180 027a 	LDS  R24,_HX711_Buffer+2
00098f 9190 027b 	LDS  R25,_HX711_Buffer+3
000991 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xE:
                +
000992 e6e4     +LDI R30 , LOW ( 0x64 )
000993 e0f0     +LDI R31 , HIGH ( 0x64 )
000994 e060     +LDI R22 , BYTE3 ( 0x64 )
000995 e070     +LDI R23 , BYTE4 ( 0x64 )
                 	__GETD1N 0x64
000996 940e 0d7e 	CALL __DIVD21
000998 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
000999 93e0 0260 	STS  _Weight_Shiwu,R30
00099b 93f0 0261 	STS  _Weight_Shiwu+1,R31
00099d 9360 0262 	STS  _Weight_Shiwu+2,R22
00099f 9370 0263 	STS  _Weight_Shiwu+3,R23
0009a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10:
0009a2 91e0 0260 	LDS  R30,_Weight_Shiwu
0009a4 91f0 0261 	LDS  R31,_Weight_Shiwu+1
0009a6 9160 0262 	LDS  R22,_Weight_Shiwu+2
0009a8 9170 0263 	LDS  R23,_Weight_Shiwu+3
0009aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x11:
0009ab dff6      	RCALL SUBOPT_0x10
0009ac 940e 0bd9 	CALL __CDF1
0009ae 01df      	MOVW R26,R30
0009af 01cb      	MOVW R24,R22
0009b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12:
                +
0009b1 e4ed     +LDI R30 , LOW ( 0x3EB8A04D )
0009b2 eaf0     +LDI R31 , HIGH ( 0x3EB8A04D )
0009b3 eb68     +LDI R22 , BYTE3 ( 0x3EB8A04D )
0009b4 e37e     +LDI R23 , BYTE4 ( 0x3EB8A04D )
                 	__GETD1N 0x3EB8A04D
0009b5 940e 0cb1 	CALL __DIVF21
0009b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
0009b8 940e 0ba2 	CALL __CFD1
0009ba 940e 0dbc 	CALL __PUTDP1
0009bc 01f8      	MOVW R30,R16
0009bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14:
0009be 940e 0d31 	CALL __LSLW2
0009c0 0fea      	ADD  R30,R26
0009c1 1ffb      	ADC  R31,R27
0009c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x15:
                +
0009c3 e0e0     +LDI R30 , LOW ( 0x41F00000 )
0009c4 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
0009c5 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
0009c6 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
0009c7 940e 0cb1 	CALL __DIVF21
0009c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x16:
0009ca e0e0      	LDI  R30,LOW(0)
0009cb 93e0 027c 	STS  _HX711_Buffer1,R30
0009cd 93e0 027d 	STS  _HX711_Buffer1+1,R30
0009cf 93e0 027e 	STS  _HX711_Buffer1+2,R30
0009d1 93e0 027f 	STS  _HX711_Buffer1+3,R30
0009d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x17:
0009d4 93e0 027c 	STS  _HX711_Buffer1,R30
0009d6 93f0 027d 	STS  _HX711_Buffer1+1,R31
0009d8 9360 027e 	STS  _HX711_Buffer1+2,R22
0009da 9370 027f 	STS  _HX711_Buffer1+3,R23
0009dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x18:
0009dd 91a0 027c 	LDS  R26,_HX711_Buffer1
0009df 91b0 027d 	LDS  R27,_HX711_Buffer1+1
0009e1 9180 027e 	LDS  R24,_HX711_Buffer1+2
0009e3 9190 027f 	LDS  R25,_HX711_Buffer1+3
0009e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x19:
0009e6 93e0 0268 	STS  _Weight_Shiwu1,R30
0009e8 93f0 0269 	STS  _Weight_Shiwu1+1,R31
0009ea 9360 026a 	STS  _Weight_Shiwu1+2,R22
0009ec 9370 026b 	STS  _Weight_Shiwu1+3,R23
0009ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A:
0009ef 91e0 0268 	LDS  R30,_Weight_Shiwu1
0009f1 91f0 0269 	LDS  R31,_Weight_Shiwu1+1
0009f3 9160 026a 	LDS  R22,_Weight_Shiwu1+2
0009f5 9170 026b 	LDS  R23,_Weight_Shiwu1+3
0009f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B:
0009f8 dff6      	RCALL SUBOPT_0x1A
0009f9 940e 0bd9 	CALL __CDF1
0009fb 01df      	MOVW R26,R30
0009fc 01cb      	MOVW R24,R22
0009fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x1C:
0009fe e0e0      	LDI  R30,LOW(0)
0009ff 93e0 0280 	STS  _HX711_Buffer2,R30
000a01 93e0 0281 	STS  _HX711_Buffer2+1,R30
000a03 93e0 0282 	STS  _HX711_Buffer2+2,R30
000a05 93e0 0283 	STS  _HX711_Buffer2+3,R30
000a07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D:
000a08 93e0 0280 	STS  _HX711_Buffer2,R30
000a0a 93f0 0281 	STS  _HX711_Buffer2+1,R31
000a0c 9360 0282 	STS  _HX711_Buffer2+2,R22
000a0e 9370 0283 	STS  _HX711_Buffer2+3,R23
000a10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1E:
000a11 91a0 0280 	LDS  R26,_HX711_Buffer2
000a13 91b0 0281 	LDS  R27,_HX711_Buffer2+1
000a15 9180 0282 	LDS  R24,_HX711_Buffer2+2
000a17 9190 0283 	LDS  R25,_HX711_Buffer2+3
000a19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F:
000a1a 93e0 0270 	STS  _Weight_Shiwu2,R30
000a1c 93f0 0271 	STS  _Weight_Shiwu2+1,R31
000a1e 9360 0272 	STS  _Weight_Shiwu2+2,R22
000a20 9370 0273 	STS  _Weight_Shiwu2+3,R23
000a22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20:
000a23 91e0 0270 	LDS  R30,_Weight_Shiwu2
000a25 91f0 0271 	LDS  R31,_Weight_Shiwu2+1
000a27 9160 0272 	LDS  R22,_Weight_Shiwu2+2
000a29 9170 0273 	LDS  R23,_Weight_Shiwu2+3
000a2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21:
000a2c dff6      	RCALL SUBOPT_0x20
000a2d 940e 0bd9 	CALL __CDF1
000a2f 01df      	MOVW R26,R30
000a30 01cb      	MOVW R24,R22
000a31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22:
000a32 93fa      	ST   -Y,R31
000a33 93ea      	ST   -Y,R30
000a34 e0af      	LDI  R26,LOW(15)
000a35 e0b0      	LDI  R27,0
000a36 940c 037c 	JMP  _sort_array
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23:
                +
000a38 ee88     +LDI R24 , LOW ( 1000 )
000a39 e093     +LDI R25 , HIGH ( 1000 )
                +__DELAY_USW_LOOP :
000a3a 9701     +SBIW R24 , 1
000a3b f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 1000
000a3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24:
                +
000a3d e0ea     +LDI R30 , LOW ( 0xA )
000a3e e0f0     +LDI R31 , HIGH ( 0xA )
000a3f e060     +LDI R22 , BYTE3 ( 0xA )
000a40 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
000a41 940e 0d7e 	CALL __DIVD21
000a43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
000a44 81ae      	LDD  R26,Y+6
000a45 81bf      	LDD  R27,Y+6+1
000a46 940e 0d31 	CALL __LSLW2
000a48 0fae      	ADD  R26,R30
000a49 1fbf      	ADC  R27,R31
000a4a 940e 0db6 	CALL __GETD1P
000a4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26:
000a4d 85a8      	LDD  R26,Y+8
000a4e 85b9      	LDD  R27,Y+8+1
000a4f 940e 0d31 	CALL __LSLW2
000a51 0fae      	ADD  R26,R30
000a52 1fbf      	ADC  R27,R31
000a53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27:
000a54 940e 0d41 	CALL __CWD1
000a56 940e 0bd9 	CALL __CDF1
000a58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28:
000a59 940e 03f1 	CALL __lcd_write_data
000a5b e0a3      	LDI  R26,LOW(3)
000a5c e0b0      	LDI  R27,0
000a5d 940c 0b63 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x29:
000a5f 81a9      	LDD  R26,Y+1
000a60 81ba      	LDD  R27,Y+1+1
000a61 91ed      	LD   R30,X+
000a62 83a9      	STD  Y+1,R26
000a63 83ba      	STD  Y+1+1,R27
000a64 2f1e      	MOV  R17,R30
000a65 30e0      	CPI  R30,0
000a66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2A:
000a67 e3a0      	LDI  R26,LOW(48)
000a68 940e 03dc 	CALL __lcd_write_nibble_G100
                +
000a6a ec88     +LDI R24 , LOW ( 200 )
000a6b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000a6c 9701     +SBIW R24 , 1
000a6d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000a6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2B:
000a6f 91ed      	LD   R30,X+
000a70 91fd      	LD   R31,X+
000a71 9631      	ADIW R30,1
000a72 93fe      	ST   -X,R31
000a73 93ee      	ST   -X,R30
000a74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2C:
000a75 93ba      	ST   -Y,R27
000a76 93aa      	ST   -Y,R26
000a77 9724      	SBIW R28,4
000a78 e0e0      	LDI  R30,LOW(0)
000a79 83e8      	ST   Y,R30
000a7a 83e9      	STD  Y+1,R30
000a7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2D:
                +
000a7c 81ac     +LDD R26 , Y + 4
000a7d 81bd     +LDD R27 , Y + 4 + 1
000a7e 818e     +LDD R24 , Y + 4 + 2
000a7f 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000a80 e0e0     +LDI R30 , LOW ( 0x41200000 )
000a81 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000a82 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000a83 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000a84 940e 0c63 	CALL __MULF12
                +
000a86 83ec     +STD Y + 4 , R30
000a87 83fd     +STD Y + 4 + 1 , R31
000a88 836e     +STD Y + 4 + 2 , R22
000a89 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000a8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2E:
                +
000a8b 81ec     +LDD R30 , Y + 4
000a8c 81fd     +LDD R31 , Y + 4 + 1
000a8d 816e     +LDD R22 , Y + 4 + 2
000a8e 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000a8f 85ac     +LDD R26 , Y + 12
000a90 85bd     +LDD R27 , Y + 12 + 1
000a91 858e     +LDD R24 , Y + 12 + 2
000a92 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000a93 940e 0cf6 	CALL __CMPF12
000a95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F:
                +
000a96 85ac     +LDD R26 , Y + 12
000a97 85bd     +LDD R27 , Y + 12 + 1
000a98 858e     +LDD R24 , Y + 12 + 2
000a99 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000a9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x30:
                +
000a9b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000a9c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000a9d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000a9e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000a9f 940e 0c63 	CALL __MULF12
                +
000aa1 87ec     +STD Y + 12 , R30
000aa2 87fd     +STD Y + 12 + 1 , R31
000aa3 876e     +STD Y + 12 + 2 , R22
000aa4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000aa5 5f3f      	SUBI R19,-LOW(1)
000aa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x31:
                +
000aa7 e0e0     +LDI R30 , LOW ( 0x41200000 )
000aa8 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000aa9 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000aaa e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000aab 940e 0c63 	CALL __MULF12
000aad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32:
                +
000aae 87ec     +STD Y + 12 , R30
000aaf 87fd     +STD Y + 12 + 1 , R31
000ab0 876e     +STD Y + 12 + 2 , R22
000ab1 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000ab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
000ab3 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000ab4 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000ab5 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000ab6 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000ab7 940e 0c13 	CALL __ADDF12
000ab9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34:
                +
000aba eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000abb ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000abc ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000abd e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000abe 940e 0c63 	CALL __MULF12
000ac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35:
000ac1 85a8      	LDD  R26,Y+8
000ac2 85b9      	LDD  R27,Y+8+1
000ac3 9611      	ADIW R26,1
000ac4 87a8      	STD  Y+8,R26
000ac5 87b9      	STD  Y+8+1,R27
000ac6 9711      	SBIW R26,1
000ac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36:
000ac8 2fe0      	MOV  R30,R16
000ac9 5de0      	SUBI R30,-LOW(48)
000aca 93ec      	ST   X,R30
000acb 2fe0      	MOV  R30,R16
000acc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37:
000acd 940e 0dda 	CALL __SWAPD12
000acf 940e 0c0c 	CALL __SUBF12
000ad1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x38:
000ad2 85e8      	LDD  R30,Y+8
000ad3 85f9      	LDD  R31,Y+8+1
000ad4 9631      	ADIW R30,1
000ad5 87e8      	STD  Y+8,R30
000ad6 87f9      	STD  Y+8+1,R31
000ad7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x39:
000ad8 932a      	ST   -Y,R18
000ad9 81af      	LDD  R26,Y+7
000ada 85b8      	LDD  R27,Y+7+1
000adb 85e9      	LDD  R30,Y+9
000adc 85fa      	LDD  R31,Y+9+1
000add 9509      	ICALL
000ade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3A:
                +
000adf 01fe     +MOVW R30 , R28
000ae0 5ae6     +SUBI R30 , LOW ( - 90 )
000ae1 4fff     +SBCI R31 , HIGH ( - 90 )
000ae2 9001     +LD R0 , Z +
000ae3 81f0     +LD R31 , Z
000ae4 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000ae5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3B:
000ae6 9734      	SBIW R30,4
                +
000ae7 01de     +MOVW R26 , R28
000ae8 5aa6     +SUBI R26 , LOW ( - 90 )
000ae9 4fbf     +SBCI R27 , HIGH ( - 90 )
000aea 93ed     +ST X + , R30
000aeb 93fc     +ST X , R31
                 	__PUTW1SX 90
000aec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3C:
000aed 81af      	LDD  R26,Y+7
000aee 85b8      	LDD  R27,Y+7+1
000aef 85e9      	LDD  R30,Y+9
000af0 85fa      	LDD  R31,Y+9+1
000af1 9509      	ICALL
000af2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3D:
                +
000af3 01de     +MOVW R26 , R28
000af4 5aa6     +SUBI R26 , LOW ( - 90 )
000af5 4fbf     +SBCI R27 , HIGH ( - 90 )
000af6 900d     +LD R0 , X +
000af7 91bc     +LD R27 , X
000af8 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000af9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E:
                +
000afa 87ea     +STD Y + 10 , R30
000afb 87fb     +STD Y + 10 + 1 , R31
000afc 876c     +STD Y + 10 + 2 , R22
000afd 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000afe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3F:
000aff dfdf      	RCALL SUBOPT_0x3A
000b00 cfe5      	RJMP SUBOPT_0x3B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40:
                +
000b01 85ea     +LDD R30 , Y + 10
000b02 85fb     +LDD R31 , Y + 10 + 1
000b03 856c     +LDD R22 , Y + 10 + 2
000b04 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000b05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x41:
000b06 87ee      	STD  Y+14,R30
000b07 87ff      	STD  Y+14+1,R31
000b08 85ae      	LDD  R26,Y+14
000b09 85bf      	LDD  R27,Y+14+1
000b0a 940e 08b1 	CALL _strlen
000b0c 2f1e      	MOV  R17,R30
000b0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x42:
000b0e dfe4      	RCALL SUBOPT_0x3D
000b0f 9614      	ADIW R26,4
000b10 940e 0db2 	CALL __GETW1P
000b12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x43:
                +
000b13 8be8     +STD Y + 16 , R30
000b14 8bf9     +STD Y + 16 + 1 , R31
000b15 8b6a     +STD Y + 16 + 2 , R22
000b16 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000b17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x44:
000b18 7f0b      	ANDI R16,LOW(251)
000b19 89ed      	LDD  R30,Y+21
000b1a 93ea      	ST   -Y,R30
                +
000b1b 01de     +MOVW R26 , R28
000b1c 5aa9     +SUBI R26 , LOW ( - 87 )
000b1d 4fbf     +SBCI R27 , HIGH ( - 87 )
000b1e 900d     +LD R0 , X +
000b1f 91bc     +LD R27 , X
000b20 2da0     +MOV R26 , R0
                 	__GETW2SX 87
                +
000b21 01fe     +MOVW R30 , R28
000b22 5ae7     +SUBI R30 , LOW ( - 89 )
000b23 4fff     +SBCI R31 , HIGH ( - 89 )
000b24 9001     +LD R0 , Z +
000b25 81f0     +LD R31 , Z
000b26 2de0     +MOV R30 , R0
                 	__GETW1SX 89
000b27 9509      	ICALL
000b28 3050      	CPI  R21,0
000b29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x45:
                +
000b2a 89e8     +LDD R30 , Y + 16
000b2b 89f9     +LDD R31 , Y + 16 + 1
000b2c 896a     +LDD R22 , Y + 16 + 2
000b2d 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000b2e 85aa     +LDD R26 , Y + 10
000b2f 85bb     +LDD R27 , Y + 10 + 1
000b30 858c     +LDD R24 , Y + 10 + 2
000b31 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000b32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x46:
000b33 01de      	MOVW R26,R28
000b34 961c      	ADIW R26,12
000b35 940e 0d16 	CALL __ADDW2R15
000b37 940e 0db2 	CALL __GETW1P
000b39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x47:
000b3a 81ee      	LDD  R30,Y+6
000b3b 81ff      	LDD  R31,Y+6+1
000b3c 93fa      	ST   -Y,R31
000b3d 93ea      	ST   -Y,R30
000b3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x48:
                +
000b3f 87e9     +STD Y + 9 , R30
000b40 87fa     +STD Y + 9 + 1 , R31
000b41 876b     +STD Y + 9 + 2 , R22
000b42 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000b43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x49:
000b44 81ae      	LDD  R26,Y+6
000b45 81bf      	LDD  R27,Y+6+1
000b46 9611      	ADIW R26,1
000b47 83ae      	STD  Y+6,R26
000b48 83bf      	STD  Y+6+1,R27
000b49 9711      	SBIW R26,1
000b4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4A:
                +
000b4b 81aa     +LDD R26 , Y + 2
000b4c 81bb     +LDD R27 , Y + 2 + 1
000b4d 818c     +LDD R24 , Y + 2 + 2
000b4e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000b4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x4B:
                +
000b50 83ea     +STD Y + 2 , R30
000b51 83fb     +STD Y + 2 + 1 , R31
000b52 836c     +STD Y + 2 + 2 , R22
000b53 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000b54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
                +
000b55 81ea     +LDD R30 , Y + 2
000b56 81fb     +LDD R31 , Y + 2 + 1
000b57 816c     +LDD R22 , Y + 2 + 2
000b58 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000b59 85a9     +LDD R26 , Y + 9
000b5a 85ba     +LDD R27 , Y + 9 + 1
000b5b 858b     +LDD R24 , Y + 9 + 2
000b5c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000b5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4D:
                +
000b5e 85a9     +LDD R26 , Y + 9
000b5f 85ba     +LDD R27 , Y + 9 + 1
000b60 858b     +LDD R24 , Y + 9 + 2
000b61 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000b62 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
000b63 9610      	adiw r26,0
000b64 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000b65 ed80     +LDI R24 , LOW ( 0x7D0 )
000b66 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000b67 9701     +SBIW R24 , 1
000b68 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000b69 95a8      	wdr
000b6a 9711      	sbiw r26,1
000b6b f7c9      	brne __delay_ms0
                 __delay_ms1:
000b6c 9508      	ret
                 
                 __ANEGF1:
000b6d 9730      	SBIW R30,0
000b6e 4060      	SBCI R22,0
000b6f 4070      	SBCI R23,0
000b70 f009      	BREQ __ANEGF10
000b71 5870      	SUBI R23,0x80
                 __ANEGF10:
000b72 9508      	RET
                 
                 __ROUND_REPACK:
000b73 2355      	TST  R21
000b74 f442      	BRPL __REPACK
000b75 3850      	CPI  R21,0x80
000b76 f411      	BRNE __ROUND_REPACK0
000b77 ffe0      	SBRS R30,0
000b78 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000b79 9631      	ADIW R30,1
000b7a 1f69      	ADC  R22,R25
000b7b 1f79      	ADC  R23,R25
000b7c f06b      	BRVS __REPACK1
                 
                 __REPACK:
000b7d e850      	LDI  R21,0x80
000b7e 2757      	EOR  R21,R23
000b7f f411      	BRNE __REPACK0
000b80 935f      	PUSH R21
000b81 c0cf      	RJMP __ZERORES
                 __REPACK0:
000b82 3f5f      	CPI  R21,0xFF
000b83 f031      	BREQ __REPACK1
000b84 0f66      	LSL  R22
000b85 0c00      	LSL  R0
000b86 9557      	ROR  R21
000b87 9567      	ROR  R22
000b88 2f75      	MOV  R23,R21
000b89 9508      	RET
                 __REPACK1:
000b8a 935f      	PUSH R21
000b8b 2000      	TST  R0
000b8c f00a      	BRMI __REPACK2
000b8d c0cf      	RJMP __MAXRES
                 __REPACK2:
000b8e c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000b8f e850      	LDI  R21,0x80
000b90 2e19      	MOV  R1,R25
000b91 2215      	AND  R1,R21
000b92 0f88      	LSL  R24
000b93 1f99      	ROL  R25
000b94 2795      	EOR  R25,R21
000b95 0f55      	LSL  R21
000b96 9587      	ROR  R24
                 
                 __UNPACK1:
000b97 e850      	LDI  R21,0x80
000b98 2e07      	MOV  R0,R23
000b99 2205      	AND  R0,R21
000b9a 0f66      	LSL  R22
000b9b 1f77      	ROL  R23
000b9c 2775      	EOR  R23,R21
000b9d 0f55      	LSL  R21
000b9e 9567      	ROR  R22
000b9f 9508      	RET
                 
                 __CFD1U:
000ba0 9468      	SET
000ba1 c001      	RJMP __CFD1U0
                 __CFD1:
000ba2 94e8      	CLT
                 __CFD1U0:
000ba3 935f      	PUSH R21
000ba4 dff2      	RCALL __UNPACK1
000ba5 3870      	CPI  R23,0x80
000ba6 f018      	BRLO __CFD10
000ba7 3f7f      	CPI  R23,0xFF
000ba8 f408      	BRCC __CFD10
000ba9 c0a7      	RJMP __ZERORES
                 __CFD10:
000baa e156      	LDI  R21,22
000bab 1b57      	SUB  R21,R23
000bac f4aa      	BRPL __CFD11
000bad 9551      	NEG  R21
000bae 3058      	CPI  R21,8
000baf f40e      	BRTC __CFD19
000bb0 3059      	CPI  R21,9
                 __CFD19:
000bb1 f030      	BRLO __CFD17
000bb2 efef      	SER  R30
000bb3 efff      	SER  R31
000bb4 ef6f      	SER  R22
000bb5 e77f      	LDI  R23,0x7F
000bb6 f977      	BLD  R23,7
000bb7 c01a      	RJMP __CFD15
                 __CFD17:
000bb8 2777      	CLR  R23
000bb9 2355      	TST  R21
000bba f0b9      	BREQ __CFD15
                 __CFD18:
000bbb 0fee      	LSL  R30
000bbc 1fff      	ROL  R31
000bbd 1f66      	ROL  R22
000bbe 1f77      	ROL  R23
000bbf 955a      	DEC  R21
000bc0 f7d1      	BRNE __CFD18
000bc1 c010      	RJMP __CFD15
                 __CFD11:
000bc2 2777      	CLR  R23
                 __CFD12:
000bc3 3058      	CPI  R21,8
000bc4 f028      	BRLO __CFD13
000bc5 2fef      	MOV  R30,R31
000bc6 2ff6      	MOV  R31,R22
000bc7 2f67      	MOV  R22,R23
000bc8 5058      	SUBI R21,8
000bc9 cff9      	RJMP __CFD12
                 __CFD13:
000bca 2355      	TST  R21
000bcb f031      	BREQ __CFD15
                 __CFD14:
000bcc 9576      	LSR  R23
000bcd 9567      	ROR  R22
000bce 95f7      	ROR  R31
000bcf 95e7      	ROR  R30
000bd0 955a      	DEC  R21
000bd1 f7d1      	BRNE __CFD14
                 __CFD15:
000bd2 2000      	TST  R0
000bd3 f40a      	BRPL __CFD16
000bd4 d154      	RCALL __ANEGD1
                 __CFD16:
000bd5 915f      	POP  R21
000bd6 9508      	RET
                 
                 __CDF1U:
000bd7 9468      	SET
000bd8 c001      	RJMP __CDF1U0
                 __CDF1:
000bd9 94e8      	CLT
                 __CDF1U0:
000bda 9730      	SBIW R30,0
000bdb 4060      	SBCI R22,0
000bdc 4070      	SBCI R23,0
000bdd f0b1      	BREQ __CDF10
000bde 2400      	CLR  R0
000bdf f026      	BRTS __CDF11
000be0 2377      	TST  R23
000be1 f412      	BRPL __CDF11
000be2 9400      	COM  R0
000be3 d145      	RCALL __ANEGD1
                 __CDF11:
000be4 2e17      	MOV  R1,R23
000be5 e17e      	LDI  R23,30
000be6 2011      	TST  R1
                 __CDF12:
000be7 f032      	BRMI __CDF13
000be8 957a      	DEC  R23
000be9 0fee      	LSL  R30
000bea 1fff      	ROL  R31
000beb 1f66      	ROL  R22
000bec 1c11      	ROL  R1
000bed cff9      	RJMP __CDF12
                 __CDF13:
000bee 2fef      	MOV  R30,R31
000bef 2ff6      	MOV  R31,R22
000bf0 2d61      	MOV  R22,R1
000bf1 935f      	PUSH R21
000bf2 df8a      	RCALL __REPACK
000bf3 915f      	POP  R21
                 __CDF10:
000bf4 9508      	RET
                 
                 __SWAPACC:
000bf5 934f      	PUSH R20
000bf6 01af      	MOVW R20,R30
000bf7 01fd      	MOVW R30,R26
000bf8 01da      	MOVW R26,R20
000bf9 01ab      	MOVW R20,R22
000bfa 01bc      	MOVW R22,R24
000bfb 01ca      	MOVW R24,R20
000bfc 2d40      	MOV  R20,R0
000bfd 2c01      	MOV  R0,R1
000bfe 2e14      	MOV  R1,R20
000bff 914f      	POP  R20
000c00 9508      	RET
                 
                 __UADD12:
000c01 0fea      	ADD  R30,R26
000c02 1ffb      	ADC  R31,R27
000c03 1f68      	ADC  R22,R24
000c04 9508      	RET
                 
                 __NEGMAN1:
000c05 95e0      	COM  R30
000c06 95f0      	COM  R31
000c07 9560      	COM  R22
000c08 5fef      	SUBI R30,-1
000c09 4fff      	SBCI R31,-1
000c0a 4f6f      	SBCI R22,-1
000c0b 9508      	RET
                 
                 __SUBF12:
000c0c 935f      	PUSH R21
000c0d df81      	RCALL __UNPACK
000c0e 3890      	CPI  R25,0x80
000c0f f171      	BREQ __ADDF129
000c10 e850      	LDI  R21,0x80
000c11 2615      	EOR  R1,R21
                 
000c12 c004      	RJMP __ADDF120
                 
                 __ADDF12:
000c13 935f      	PUSH R21
000c14 df7a      	RCALL __UNPACK
000c15 3890      	CPI  R25,0x80
000c16 f139      	BREQ __ADDF129
                 
                 __ADDF120:
000c17 3870      	CPI  R23,0x80
000c18 f121      	BREQ __ADDF128
                 __ADDF121:
000c19 2f57      	MOV  R21,R23
000c1a 1b59      	SUB  R21,R25
000c1b f12b      	BRVS __ADDF1211
000c1c f412      	BRPL __ADDF122
000c1d dfd7      	RCALL __SWAPACC
000c1e cffa      	RJMP __ADDF121
                 __ADDF122:
000c1f 3158      	CPI  R21,24
000c20 f018      	BRLO __ADDF123
000c21 27aa      	CLR  R26
000c22 27bb      	CLR  R27
000c23 2788      	CLR  R24
                 __ADDF123:
000c24 3058      	CPI  R21,8
000c25 f028      	BRLO __ADDF124
000c26 2fab      	MOV  R26,R27
000c27 2fb8      	MOV  R27,R24
000c28 2788      	CLR  R24
000c29 5058      	SUBI R21,8
000c2a cff9      	RJMP __ADDF123
                 __ADDF124:
000c2b 2355      	TST  R21
000c2c f029      	BREQ __ADDF126
                 __ADDF125:
000c2d 9586      	LSR  R24
000c2e 95b7      	ROR  R27
000c2f 95a7      	ROR  R26
000c30 955a      	DEC  R21
000c31 f7d9      	BRNE __ADDF125
                 __ADDF126:
000c32 2d50      	MOV  R21,R0
000c33 2551      	EOR  R21,R1
000c34 f072      	BRMI __ADDF127
000c35 dfcb      	RCALL __UADD12
000c36 f438      	BRCC __ADDF129
000c37 9567      	ROR  R22
000c38 95f7      	ROR  R31
000c39 95e7      	ROR  R30
000c3a 9573      	INC  R23
000c3b f413      	BRVC __ADDF129
000c3c c020      	RJMP __MAXRES
                 __ADDF128:
000c3d dfb7      	RCALL __SWAPACC
                 __ADDF129:
000c3e df3e      	RCALL __REPACK
000c3f 915f      	POP  R21
000c40 9508      	RET
                 __ADDF1211:
000c41 f7d8      	BRCC __ADDF128
000c42 cffb      	RJMP __ADDF129
                 __ADDF127:
000c43 1bea      	SUB  R30,R26
000c44 0bfb      	SBC  R31,R27
000c45 0b68      	SBC  R22,R24
000c46 f051      	BREQ __ZERORES
000c47 f410      	BRCC __ADDF1210
000c48 9400      	COM  R0
000c49 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000c4a 2366      	TST  R22
000c4b f392      	BRMI __ADDF129
000c4c 0fee      	LSL  R30
000c4d 1fff      	ROL  R31
000c4e 1f66      	ROL  R22
000c4f 957a      	DEC  R23
000c50 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000c51 27ee      	CLR  R30
000c52 27ff      	CLR  R31
000c53 2766      	CLR  R22
000c54 2777      	CLR  R23
000c55 915f      	POP  R21
000c56 9508      	RET
                 
                 __MINRES:
000c57 efef      	SER  R30
000c58 efff      	SER  R31
000c59 e76f      	LDI  R22,0x7F
000c5a ef7f      	SER  R23
000c5b 915f      	POP  R21
000c5c 9508      	RET
                 
                 __MAXRES:
000c5d efef      	SER  R30
000c5e efff      	SER  R31
000c5f e76f      	LDI  R22,0x7F
000c60 e77f      	LDI  R23,0x7F
000c61 915f      	POP  R21
000c62 9508      	RET
                 
                 __MULF12:
000c63 935f      	PUSH R21
000c64 df2a      	RCALL __UNPACK
000c65 3870      	CPI  R23,0x80
000c66 f351      	BREQ __ZERORES
000c67 3890      	CPI  R25,0x80
000c68 f341      	BREQ __ZERORES
000c69 2401      	EOR  R0,R1
000c6a 9408      	SEC
000c6b 1f79      	ADC  R23,R25
000c6c f423      	BRVC __MULF124
000c6d f31c      	BRLT __ZERORES
                 __MULF125:
000c6e 2000      	TST  R0
000c6f f33a      	BRMI __MINRES
000c70 cfec      	RJMP __MAXRES
                 __MULF124:
000c71 920f      	PUSH R0
000c72 931f      	PUSH R17
000c73 932f      	PUSH R18
000c74 933f      	PUSH R19
000c75 934f      	PUSH R20
000c76 2711      	CLR  R17
000c77 2722      	CLR  R18
000c78 2799      	CLR  R25
000c79 9f68      	MUL  R22,R24
000c7a 01a0      	MOVW R20,R0
000c7b 9f8f      	MUL  R24,R31
000c7c 2d30      	MOV  R19,R0
000c7d 0d41      	ADD  R20,R1
000c7e 1f59      	ADC  R21,R25
000c7f 9f6b      	MUL  R22,R27
000c80 0d30      	ADD  R19,R0
000c81 1d41      	ADC  R20,R1
000c82 1f59      	ADC  R21,R25
000c83 9f8e      	MUL  R24,R30
000c84 d027      	RCALL __MULF126
000c85 9fbf      	MUL  R27,R31
000c86 d025      	RCALL __MULF126
000c87 9f6a      	MUL  R22,R26
000c88 d023      	RCALL __MULF126
000c89 9fbe      	MUL  R27,R30
000c8a d01d      	RCALL __MULF127
000c8b 9faf      	MUL  R26,R31
000c8c d01b      	RCALL __MULF127
000c8d 9fae      	MUL  R26,R30
000c8e 0d11      	ADD  R17,R1
000c8f 1f29      	ADC  R18,R25
000c90 1f39      	ADC  R19,R25
000c91 1f49      	ADC  R20,R25
000c92 1f59      	ADC  R21,R25
000c93 2fe3      	MOV  R30,R19
000c94 2ff4      	MOV  R31,R20
000c95 2f65      	MOV  R22,R21
000c96 2f52      	MOV  R21,R18
000c97 914f      	POP  R20
000c98 913f      	POP  R19
000c99 912f      	POP  R18
000c9a 911f      	POP  R17
000c9b 900f      	POP  R0
000c9c 2366      	TST  R22
000c9d f02a      	BRMI __MULF122
000c9e 0f55      	LSL  R21
000c9f 1fee      	ROL  R30
000ca0 1fff      	ROL  R31
000ca1 1f66      	ROL  R22
000ca2 c002      	RJMP __MULF123
                 __MULF122:
000ca3 9573      	INC  R23
000ca4 f24b      	BRVS __MULF125
                 __MULF123:
000ca5 decd      	RCALL __ROUND_REPACK
000ca6 915f      	POP  R21
000ca7 9508      	RET
                 
                 __MULF127:
000ca8 0d10      	ADD  R17,R0
000ca9 1d21      	ADC  R18,R1
000caa 1f39      	ADC  R19,R25
000cab c002      	RJMP __MULF128
                 __MULF126:
000cac 0d20      	ADD  R18,R0
000cad 1d31      	ADC  R19,R1
                 __MULF128:
000cae 1f49      	ADC  R20,R25
000caf 1f59      	ADC  R21,R25
000cb0 9508      	RET
                 
                 __DIVF21:
000cb1 935f      	PUSH R21
000cb2 dedc      	RCALL __UNPACK
000cb3 3870      	CPI  R23,0x80
000cb4 f421      	BRNE __DIVF210
000cb5 2011      	TST  R1
                 __DIVF211:
000cb6 f40a      	BRPL __DIVF219
000cb7 cf9f      	RJMP __MINRES
                 __DIVF219:
000cb8 cfa4      	RJMP __MAXRES
                 __DIVF210:
000cb9 3890      	CPI  R25,0x80
000cba f409      	BRNE __DIVF218
                 __DIVF217:
000cbb cf95      	RJMP __ZERORES
                 __DIVF218:
000cbc 2401      	EOR  R0,R1
000cbd 9408      	SEC
000cbe 0b97      	SBC  R25,R23
000cbf f41b      	BRVC __DIVF216
000cc0 f3d4      	BRLT __DIVF217
000cc1 2000      	TST  R0
000cc2 cff3      	RJMP __DIVF211
                 __DIVF216:
000cc3 2f79      	MOV  R23,R25
000cc4 931f      	PUSH R17
000cc5 932f      	PUSH R18
000cc6 933f      	PUSH R19
000cc7 934f      	PUSH R20
000cc8 2411      	CLR  R1
000cc9 2711      	CLR  R17
000cca 2722      	CLR  R18
000ccb 2733      	CLR  R19
000ccc 2744      	CLR  R20
000ccd 2755      	CLR  R21
000cce e290      	LDI  R25,32
                 __DIVF212:
000ccf 17ae      	CP   R26,R30
000cd0 07bf      	CPC  R27,R31
000cd1 0786      	CPC  R24,R22
000cd2 0741      	CPC  R20,R17
000cd3 f030      	BRLO __DIVF213
000cd4 1bae      	SUB  R26,R30
000cd5 0bbf      	SBC  R27,R31
000cd6 0b86      	SBC  R24,R22
000cd7 0b41      	SBC  R20,R17
000cd8 9408      	SEC
000cd9 c001      	RJMP __DIVF214
                 __DIVF213:
000cda 9488      	CLC
                 __DIVF214:
000cdb 1f55      	ROL  R21
000cdc 1f22      	ROL  R18
000cdd 1f33      	ROL  R19
000cde 1c11      	ROL  R1
000cdf 1faa      	ROL  R26
000ce0 1fbb      	ROL  R27
000ce1 1f88      	ROL  R24
000ce2 1f44      	ROL  R20
000ce3 959a      	DEC  R25
000ce4 f751      	BRNE __DIVF212
000ce5 01f9      	MOVW R30,R18
000ce6 2d61      	MOV  R22,R1
000ce7 914f      	POP  R20
000ce8 913f      	POP  R19
000ce9 912f      	POP  R18
000cea 911f      	POP  R17
000ceb 2366      	TST  R22
000cec f032      	BRMI __DIVF215
000ced 0f55      	LSL  R21
000cee 1fee      	ROL  R30
000cef 1fff      	ROL  R31
000cf0 1f66      	ROL  R22
000cf1 957a      	DEC  R23
000cf2 f243      	BRVS __DIVF217
                 __DIVF215:
000cf3 de7f      	RCALL __ROUND_REPACK
000cf4 915f      	POP  R21
000cf5 9508      	RET
                 
                 __CMPF12:
000cf6 2399      	TST  R25
000cf7 f09a      	BRMI __CMPF120
000cf8 2377      	TST  R23
000cf9 f042      	BRMI __CMPF121
000cfa 1797      	CP   R25,R23
000cfb f048      	BRLO __CMPF122
000cfc f429      	BRNE __CMPF121
000cfd 17ae      	CP   R26,R30
000cfe 07bf      	CPC  R27,R31
000cff 0786      	CPC  R24,R22
000d00 f020      	BRLO __CMPF122
000d01 f031      	BREQ __CMPF123
                 __CMPF121:
000d02 9498      	CLZ
000d03 9488      	CLC
000d04 9508      	RET
                 __CMPF122:
000d05 9498      	CLZ
000d06 9408      	SEC
000d07 9508      	RET
                 __CMPF123:
000d08 9418      	SEZ
000d09 9488      	CLC
000d0a 9508      	RET
                 __CMPF120:
000d0b 2377      	TST  R23
000d0c f7c2      	BRPL __CMPF122
000d0d 1797      	CP   R25,R23
000d0e f398      	BRLO __CMPF121
000d0f f7a9      	BRNE __CMPF122
000d10 17ea      	CP   R30,R26
000d11 07fb      	CPC  R31,R27
000d12 0768      	CPC  R22,R24
000d13 f388      	BRLO __CMPF122
000d14 f399      	BREQ __CMPF123
000d15 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000d16 2400      	CLR  R0
000d17 0daf      	ADD  R26,R15
000d18 1db0      	ADC  R27,R0
000d19 9508      	RET
                 
                 __ADDD12:
000d1a 0fea      	ADD  R30,R26
000d1b 1ffb      	ADC  R31,R27
000d1c 1f68      	ADC  R22,R24
000d1d 1f79      	ADC  R23,R25
000d1e 9508      	RET
                 
                 __SUBD12:
000d1f 1bea      	SUB  R30,R26
000d20 0bfb      	SBC  R31,R27
000d21 0b68      	SBC  R22,R24
000d22 0b79      	SBC  R23,R25
000d23 9508      	RET
                 
                 __XORD12:
000d24 27ea      	EOR  R30,R26
000d25 27fb      	EOR  R31,R27
000d26 2768      	EOR  R22,R24
000d27 2779      	EOR  R23,R25
000d28 9508      	RET
                 
                 __ANEGD1:
000d29 95f0      	COM  R31
000d2a 9560      	COM  R22
000d2b 9570      	COM  R23
000d2c 95e1      	NEG  R30
000d2d 4fff      	SBCI R31,-1
000d2e 4f6f      	SBCI R22,-1
000d2f 4f7f      	SBCI R23,-1
000d30 9508      	RET
                 
                 __LSLW2:
000d31 0fee      	LSL  R30
000d32 1fff      	ROL  R31
000d33 0fee      	LSL  R30
000d34 1fff      	ROL  R31
000d35 9508      	RET
                 
                 __LSLD1:
000d36 0fee      	LSL  R30
000d37 1fff      	ROL  R31
000d38 1f66      	ROL  R22
000d39 1f77      	ROL  R23
000d3a 9508      	RET
                 
                 __CBD1:
000d3b 2ffe      	MOV  R31,R30
000d3c 0fff      	ADD  R31,R31
000d3d 0bff      	SBC  R31,R31
000d3e 2f6f      	MOV  R22,R31
000d3f 2f7f      	MOV  R23,R31
000d40 9508      	RET
                 
                 __CWD1:
000d41 2f6f      	MOV  R22,R31
000d42 0f66      	ADD  R22,R22
000d43 0b66      	SBC  R22,R22
000d44 2f76      	MOV  R23,R22
000d45 9508      	RET
                 
                 __DIVB21U:
000d46 2400      	CLR  R0
000d47 e098      	LDI  R25,8
                 __DIVB21U1:
000d48 0faa      	LSL  R26
000d49 1c00      	ROL  R0
000d4a 1a0e      	SUB  R0,R30
000d4b f410      	BRCC __DIVB21U2
000d4c 0e0e      	ADD  R0,R30
000d4d c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000d4e 60a1      	SBR  R26,1
                 __DIVB21U3:
000d4f 959a      	DEC  R25
000d50 f7b9      	BRNE __DIVB21U1
000d51 2fea      	MOV  R30,R26
000d52 2da0      	MOV  R26,R0
000d53 9508      	RET
                 
                 __DIVB21:
000d54 d03e      	RCALL __CHKSIGNB
000d55 dff0      	RCALL __DIVB21U
000d56 f40e      	BRTC __DIVB211
000d57 95e1      	NEG  R30
                 __DIVB211:
000d58 9508      	RET
                 
                 __DIVD21U:
000d59 933f      	PUSH R19
000d5a 934f      	PUSH R20
000d5b 935f      	PUSH R21
000d5c 2400      	CLR  R0
000d5d 2411      	CLR  R1
000d5e 2744      	CLR  R20
000d5f 2755      	CLR  R21
000d60 e230      	LDI  R19,32
                 __DIVD21U1:
000d61 0faa      	LSL  R26
000d62 1fbb      	ROL  R27
000d63 1f88      	ROL  R24
000d64 1f99      	ROL  R25
000d65 1c00      	ROL  R0
000d66 1c11      	ROL  R1
000d67 1f44      	ROL  R20
000d68 1f55      	ROL  R21
000d69 1a0e      	SUB  R0,R30
000d6a 0a1f      	SBC  R1,R31
000d6b 0b46      	SBC  R20,R22
000d6c 0b57      	SBC  R21,R23
000d6d f428      	BRCC __DIVD21U2
000d6e 0e0e      	ADD  R0,R30
000d6f 1e1f      	ADC  R1,R31
000d70 1f46      	ADC  R20,R22
000d71 1f57      	ADC  R21,R23
000d72 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000d73 60a1      	SBR  R26,1
                 __DIVD21U3:
000d74 953a      	DEC  R19
000d75 f759      	BRNE __DIVD21U1
000d76 01fd      	MOVW R30,R26
000d77 01bc      	MOVW R22,R24
000d78 01d0      	MOVW R26,R0
000d79 01ca      	MOVW R24,R20
000d7a 915f      	POP  R21
000d7b 914f      	POP  R20
000d7c 913f      	POP  R19
000d7d 9508      	RET
                 
                 __DIVD21:
000d7e d020      	RCALL __CHKSIGND
000d7f dfd9      	RCALL __DIVD21U
000d80 f40e      	BRTC __DIVD211
000d81 dfa7      	RCALL __ANEGD1
                 __DIVD211:
000d82 9508      	RET
                 
                 __MODB21:
000d83 94e8      	CLT
000d84 ffa7      	SBRS R26,7
000d85 c002      	RJMP __MODB211
000d86 95a1      	NEG  R26
000d87 9468      	SET
                 __MODB211:
000d88 fde7      	SBRC R30,7
000d89 95e1      	NEG  R30
000d8a dfbb      	RCALL __DIVB21U
000d8b 2fea      	MOV  R30,R26
000d8c f40e      	BRTC __MODB212
000d8d 95e1      	NEG  R30
                 __MODB212:
000d8e 9508      	RET
                 
                 __MODD21U:
000d8f dfc9      	RCALL __DIVD21U
000d90 01fd      	MOVW R30,R26
000d91 01bc      	MOVW R22,R24
000d92 9508      	RET
                 
                 __CHKSIGNB:
000d93 94e8      	CLT
000d94 ffe7      	SBRS R30,7
000d95 c002      	RJMP __CHKSB1
000d96 95e1      	NEG  R30
000d97 9468      	SET
                 __CHKSB1:
000d98 ffa7      	SBRS R26,7
000d99 c004      	RJMP __CHKSB2
000d9a 95a1      	NEG  R26
000d9b f800      	BLD  R0,0
000d9c 9403      	INC  R0
000d9d fa00      	BST  R0,0
                 __CHKSB2:
000d9e 9508      	RET
                 
                 __CHKSIGND:
000d9f 94e8      	CLT
000da0 ff77      	SBRS R23,7
000da1 c002      	RJMP __CHKSD1
000da2 df86      	RCALL __ANEGD1
000da3 9468      	SET
                 __CHKSD1:
000da4 ff97      	SBRS R25,7
000da5 c00b      	RJMP __CHKSD2
000da6 2400      	CLR  R0
000da7 95a0      	COM  R26
000da8 95b0      	COM  R27
000da9 9580      	COM  R24
000daa 9590      	COM  R25
000dab 9611      	ADIW R26,1
000dac 1d80      	ADC  R24,R0
000dad 1d90      	ADC  R25,R0
000dae f800      	BLD  R0,0
000daf 9403      	INC  R0
000db0 fa00      	BST  R0,0
                 __CHKSD2:
000db1 9508      	RET
                 
                 __GETW1P:
000db2 91ed      	LD   R30,X+
000db3 91fc      	LD   R31,X
000db4 9711      	SBIW R26,1
000db5 9508      	RET
                 
                 __GETD1P:
000db6 91ed      	LD   R30,X+
000db7 91fd      	LD   R31,X+
000db8 916d      	LD   R22,X+
000db9 917c      	LD   R23,X
000dba 9713      	SBIW R26,3
000dbb 9508      	RET
                 
                 __PUTDP1:
000dbc 93ed      	ST   X+,R30
000dbd 93fd      	ST   X+,R31
000dbe 936d      	ST   X+,R22
000dbf 937c      	ST   X,R23
000dc0 9508      	RET
                 
                 __GETD1S0:
000dc1 81e8      	LD   R30,Y
000dc2 81f9      	LDD  R31,Y+1
000dc3 816a      	LDD  R22,Y+2
000dc4 817b      	LDD  R23,Y+3
000dc5 9508      	RET
                 
                 __GETD2S0:
000dc6 81a8      	LD   R26,Y
000dc7 81b9      	LDD  R27,Y+1
000dc8 818a      	LDD  R24,Y+2
000dc9 819b      	LDD  R25,Y+3
000dca 9508      	RET
                 
                 __PUTD1S0:
000dcb 83e8      	ST   Y,R30
000dcc 83f9      	STD  Y+1,R31
000dcd 836a      	STD  Y+2,R22
000dce 837b      	STD  Y+3,R23
000dcf 9508      	RET
                 
                 __PUTPARD1:
000dd0 937a      	ST   -Y,R23
000dd1 936a      	ST   -Y,R22
000dd2 93fa      	ST   -Y,R31
000dd3 93ea      	ST   -Y,R30
000dd4 9508      	RET
                 
                 __PUTPARD2:
000dd5 939a      	ST   -Y,R25
000dd6 938a      	ST   -Y,R24
000dd7 93ba      	ST   -Y,R27
000dd8 93aa      	ST   -Y,R26
000dd9 9508      	RET
                 
                 __SWAPD12:
000dda 2e18      	MOV  R1,R24
000ddb 2f86      	MOV  R24,R22
000ddc 2d61      	MOV  R22,R1
000ddd 2e19      	MOV  R1,R25
000dde 2f97      	MOV  R25,R23
000ddf 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000de0 2e1b      	MOV  R1,R27
000de1 2fbf      	MOV  R27,R31
000de2 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000de3 2e1a      	MOV  R1,R26
000de4 2fae      	MOV  R26,R30
000de5 2de1      	MOV  R30,R1
000de6 9508      	RET
                 
                 __CPD10:
000de7 9730      	SBIW R30,0
000de8 4060      	SBCI R22,0
000de9 4070      	SBCI R23,0
000dea 9508      	RET
                 
                 __SAVELOCR6:
000deb 935a      	ST   -Y,R21
                 __SAVELOCR5:
000dec 934a      	ST   -Y,R20
                 __SAVELOCR4:
000ded 933a      	ST   -Y,R19
                 __SAVELOCR3:
000dee 932a      	ST   -Y,R18
                 __SAVELOCR2:
000def 931a      	ST   -Y,R17
000df0 930a      	ST   -Y,R16
000df1 9508      	RET
                 
                 __LOADLOCR6:
000df2 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000df3 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000df4 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000df5 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000df6 8119      	LDD  R17,Y+1
000df7 8108      	LD   R16,Y
000df8 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32A register use summary:
r0 :  70 r1 :  36 r2 :   1 r3 :   0 r4 :   4 r5 :   1 r6 :   4 r7 :   2 
r8 :   0 r9 :   4 r10:   4 r11:   3 r12:   2 r13:   4 r14:   0 r15:   6 
r16:  74 r17: 102 r18:  58 r19:  39 r20:  50 r21:  90 r22: 155 r23: 139 
r24:  99 r25:  84 r26: 260 r27: 138 r28:  37 r29:   1 r30: 567 r31: 216 
x  :  44 y  : 473 z  :  26 
Registers used: 32 out of 35 (91.4%)

ATmega32A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  18 
adiw  :  43 and   :   5 andi  :   8 asr   :   0 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :   9 brcs  :   1 break :   0 breq  :  51 
brge  :   5 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  28 
brlt  :   3 brmi  :  11 brne  :  63 brpl  :   9 brsh  :   9 brtc  :   5 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  : 362 
cbi   :  14 cbr   :   1 clc   :   3 clh   :   0 cli   :   1 cln   :   0 
clr   :  56 cls   :   0 clt   :   6 clv   :   0 clz   :   2 com   :  12 
cp    :  19 cpc   :  25 cpi   :  89 cpse  :   0 dec   :  15 des   :   0 
eor   :  11 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   3 ijmp  :   0 
in    :   7 inc   :   8 jmp   :  28 ld    :  72 ldd   : 216 ldi   : 315 
lds   :  88 lpm   :  14 lsl   :  17 lsr   :   3 mov   :  87 movw  :  69 
mul   :  11 muls  :   0 mulsu :   0 neg   :   9 nop   :   0 or    :   1 
ori   :  10 out   :  47 pop   :  32 push  :  32 rcall :  63 ret   : 139 
reti  :   2 rjmp  : 165 rol   :  37 ror   :  15 sbc   :  15 sbci  :  30 
sbi   :  14 sbic  :   3 sbis  :   4 sbiw  :  36 sbr   :   4 sbrc  :   4 
sbrs  :  22 sec   :   5 seh   :   0 sei   :   1 sen   :   0 ser   :   8 
ses   :   0 set   :   6 sev   :   0 sez   :   1 sleep :   0 spm   :   0 
st    : 138 std   : 105 sts   :  70 sub   :   8 subi  :  59 swap  :   1 
tst   :  24 wdr   :   1 
Instructions used: 83 out of 116 (71.6%)

ATmega32A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001bf2   7052    102   7154   32768  21.8%
[.dseg] 0x000060 0x000394      0    308    308    2048  15.0%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 13 warnings
